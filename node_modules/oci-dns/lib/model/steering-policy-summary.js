"use strict";
/**
 * DNS API
 * API for the DNS service. Use this API to manage DNS zones, records, and other DNS resources.
For more information, see [Overview of the DNS Service](/iaas/Content/DNS/Concepts/dnszonemanagement.htm).

 * OpenAPI spec version: 20180115
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SteeringPolicySummary = void 0;
var SteeringPolicySummary;
(function (SteeringPolicySummary) {
    let Template;
    (function (Template) {
        Template["Failover"] = "FAILOVER";
        Template["LoadBalance"] = "LOAD_BALANCE";
        Template["RouteByGeo"] = "ROUTE_BY_GEO";
        Template["RouteByAsn"] = "ROUTE_BY_ASN";
        Template["RouteByIp"] = "ROUTE_BY_IP";
        Template["Custom"] = "CUSTOM";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Template["UnknownValue"] = "UNKNOWN_VALUE";
    })(Template = SteeringPolicySummary.Template || (SteeringPolicySummary.Template = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Creating"] = "CREATING";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["Deleting"] = "DELETING";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = SteeringPolicySummary.LifecycleState || (SteeringPolicySummary.LifecycleState = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    SteeringPolicySummary.getJsonObj = getJsonObj;
})(SteeringPolicySummary = exports.SteeringPolicySummary || (exports.SteeringPolicySummary = {}));
//# sourceMappingURL=steering-policy-summary.js.map