"use strict";
/**
 * DNS API
 * API for the DNS service. Use this API to manage DNS zones, records, and other DNS resources.
For more information, see [Overview of the DNS Service](/iaas/Content/DNS/Concepts/dnszonemanagement.htm).

 * OpenAPI spec version: 20180115
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TsigKeySummary = exports.TsigKey = exports.TSIG = exports.SteeringPolicyWeightedRuleCase = exports.SteeringPolicyWeightedAnswerData = exports.SteeringPolicySummary = exports.SteeringPolicyRule = exports.SteeringPolicyPriorityRuleCase = exports.SteeringPolicyPriorityAnswerData = exports.SteeringPolicyLimitRuleCase = exports.SteeringPolicyHealthRuleCase = exports.SteeringPolicyFilterRuleCase = exports.SteeringPolicyFilterAnswerData = exports.SteeringPolicyAttachmentSummary = exports.SteeringPolicyAttachment = exports.SteeringPolicyAnswer = exports.SteeringPolicy = exports.SortOrder = exports.Scope = exports.ResolverSummary = exports.ResolverRuleDetails = exports.ResolverRule = exports.ResolverEndpointSummary = exports.ResolverEndpoint = exports.Resolver = exports.RecordOperation = exports.RecordDetails = exports.RecordCollection = exports.Record = exports.RRSet = exports.PatchZoneRecordsDetails = exports.PatchRRSetDetails = exports.PatchDomainRecordsDetails = exports.Nameserver = exports.MigrationReplacement = exports.ExternalMaster = exports.DynectMigrationDetails = exports.CreateZoneBaseDetails = exports.CreateViewDetails = exports.CreateTsigKeyDetails = exports.CreateSteeringPolicyDetails = exports.CreateSteeringPolicyAttachmentDetails = exports.CreateResolverEndpointDetails = exports.ChangeZoneCompartmentDetails = exports.ChangeViewCompartmentDetails = exports.ChangeTsigKeyCompartmentDetails = exports.ChangeSteeringPolicyCompartmentDetails = exports.ChangeResolverCompartmentDetails = exports.AttachedViewDetails = exports.AttachedView = void 0;
exports.UpdateResolverVnicEndpointDetails = exports.SteeringPolicyWeightedRule = exports.SteeringPolicyPriorityRule = exports.SteeringPolicyLimitRule = exports.SteeringPolicyHealthRule = exports.SteeringPolicyFilterRule = exports.ResolverVnicEndpointSummary = exports.ResolverVnicEndpoint = exports.ResolverForwardRuleDetails = exports.ResolverForwardRule = exports.CreateZoneDetails = exports.CreateResolverVnicEndpointDetails = exports.CreateMigratedDynectZoneDetails = exports.ZoneSummary = exports.Zone = exports.ViewSummary = exports.View = exports.UpdateZoneRecordsDetails = exports.UpdateZoneDetails = exports.UpdateViewDetails = exports.UpdateTsigKeyDetails = exports.UpdateSteeringPolicyDetails = exports.UpdateSteeringPolicyAttachmentDetails = exports.UpdateResolverEndpointDetails = exports.UpdateResolverDetails = exports.UpdateRRSetDetails = exports.UpdateDomainRecordsDetails = void 0;
const AttachedView = __importStar(require("./attached-view"));
exports.AttachedView = AttachedView.AttachedView;
const AttachedViewDetails = __importStar(require("./attached-view-details"));
exports.AttachedViewDetails = AttachedViewDetails.AttachedViewDetails;
const ChangeResolverCompartmentDetails = __importStar(require("./change-resolver-compartment-details"));
exports.ChangeResolverCompartmentDetails = ChangeResolverCompartmentDetails.ChangeResolverCompartmentDetails;
const ChangeSteeringPolicyCompartmentDetails = __importStar(require("./change-steering-policy-compartment-details"));
exports.ChangeSteeringPolicyCompartmentDetails = ChangeSteeringPolicyCompartmentDetails.ChangeSteeringPolicyCompartmentDetails;
const ChangeTsigKeyCompartmentDetails = __importStar(require("./change-tsig-key-compartment-details"));
exports.ChangeTsigKeyCompartmentDetails = ChangeTsigKeyCompartmentDetails.ChangeTsigKeyCompartmentDetails;
const ChangeViewCompartmentDetails = __importStar(require("./change-view-compartment-details"));
exports.ChangeViewCompartmentDetails = ChangeViewCompartmentDetails.ChangeViewCompartmentDetails;
const ChangeZoneCompartmentDetails = __importStar(require("./change-zone-compartment-details"));
exports.ChangeZoneCompartmentDetails = ChangeZoneCompartmentDetails.ChangeZoneCompartmentDetails;
const CreateResolverEndpointDetails = __importStar(require("./create-resolver-endpoint-details"));
exports.CreateResolverEndpointDetails = CreateResolverEndpointDetails.CreateResolverEndpointDetails;
const CreateSteeringPolicyAttachmentDetails = __importStar(require("./create-steering-policy-attachment-details"));
exports.CreateSteeringPolicyAttachmentDetails = CreateSteeringPolicyAttachmentDetails.CreateSteeringPolicyAttachmentDetails;
const CreateSteeringPolicyDetails = __importStar(require("./create-steering-policy-details"));
exports.CreateSteeringPolicyDetails = CreateSteeringPolicyDetails.CreateSteeringPolicyDetails;
const CreateTsigKeyDetails = __importStar(require("./create-tsig-key-details"));
exports.CreateTsigKeyDetails = CreateTsigKeyDetails.CreateTsigKeyDetails;
const CreateViewDetails = __importStar(require("./create-view-details"));
exports.CreateViewDetails = CreateViewDetails.CreateViewDetails;
const CreateZoneBaseDetails = __importStar(require("./create-zone-base-details"));
exports.CreateZoneBaseDetails = CreateZoneBaseDetails.CreateZoneBaseDetails;
const DynectMigrationDetails = __importStar(require("./dynect-migration-details"));
exports.DynectMigrationDetails = DynectMigrationDetails.DynectMigrationDetails;
const ExternalMaster = __importStar(require("./external-master"));
exports.ExternalMaster = ExternalMaster.ExternalMaster;
const MigrationReplacement = __importStar(require("./migration-replacement"));
exports.MigrationReplacement = MigrationReplacement.MigrationReplacement;
const Nameserver = __importStar(require("./nameserver"));
exports.Nameserver = Nameserver.Nameserver;
const PatchDomainRecordsDetails = __importStar(require("./patch-domain-records-details"));
exports.PatchDomainRecordsDetails = PatchDomainRecordsDetails.PatchDomainRecordsDetails;
const PatchRRSetDetails = __importStar(require("./patch-rr-set-details"));
exports.PatchRRSetDetails = PatchRRSetDetails.PatchRRSetDetails;
const PatchZoneRecordsDetails = __importStar(require("./patch-zone-records-details"));
exports.PatchZoneRecordsDetails = PatchZoneRecordsDetails.PatchZoneRecordsDetails;
const RRSet = __importStar(require("./r-rset"));
exports.RRSet = RRSet.RRSet;
const Record = __importStar(require("./record"));
exports.Record = Record.Record;
const RecordCollection = __importStar(require("./record-collection"));
exports.RecordCollection = RecordCollection.RecordCollection;
const RecordDetails = __importStar(require("./record-details"));
exports.RecordDetails = RecordDetails.RecordDetails;
const RecordOperation = __importStar(require("./record-operation"));
exports.RecordOperation = RecordOperation.RecordOperation;
const Resolver = __importStar(require("./resolver"));
exports.Resolver = Resolver.Resolver;
const ResolverEndpoint = __importStar(require("./resolver-endpoint"));
exports.ResolverEndpoint = ResolverEndpoint.ResolverEndpoint;
const ResolverEndpointSummary = __importStar(require("./resolver-endpoint-summary"));
exports.ResolverEndpointSummary = ResolverEndpointSummary.ResolverEndpointSummary;
const ResolverRule = __importStar(require("./resolver-rule"));
exports.ResolverRule = ResolverRule.ResolverRule;
const ResolverRuleDetails = __importStar(require("./resolver-rule-details"));
exports.ResolverRuleDetails = ResolverRuleDetails.ResolverRuleDetails;
const ResolverSummary = __importStar(require("./resolver-summary"));
exports.ResolverSummary = ResolverSummary.ResolverSummary;
const Scope = __importStar(require("./scope"));
exports.Scope = Scope.Scope;
const SortOrder = __importStar(require("./sort-order"));
exports.SortOrder = SortOrder.SortOrder;
const SteeringPolicy = __importStar(require("./steering-policy"));
exports.SteeringPolicy = SteeringPolicy.SteeringPolicy;
const SteeringPolicyAnswer = __importStar(require("./steering-policy-answer"));
exports.SteeringPolicyAnswer = SteeringPolicyAnswer.SteeringPolicyAnswer;
const SteeringPolicyAttachment = __importStar(require("./steering-policy-attachment"));
exports.SteeringPolicyAttachment = SteeringPolicyAttachment.SteeringPolicyAttachment;
const SteeringPolicyAttachmentSummary = __importStar(require("./steering-policy-attachment-summary"));
exports.SteeringPolicyAttachmentSummary = SteeringPolicyAttachmentSummary.SteeringPolicyAttachmentSummary;
const SteeringPolicyFilterAnswerData = __importStar(require("./steering-policy-filter-answer-data"));
exports.SteeringPolicyFilterAnswerData = SteeringPolicyFilterAnswerData.SteeringPolicyFilterAnswerData;
const SteeringPolicyFilterRuleCase = __importStar(require("./steering-policy-filter-rule-case"));
exports.SteeringPolicyFilterRuleCase = SteeringPolicyFilterRuleCase.SteeringPolicyFilterRuleCase;
const SteeringPolicyHealthRuleCase = __importStar(require("./steering-policy-health-rule-case"));
exports.SteeringPolicyHealthRuleCase = SteeringPolicyHealthRuleCase.SteeringPolicyHealthRuleCase;
const SteeringPolicyLimitRuleCase = __importStar(require("./steering-policy-limit-rule-case"));
exports.SteeringPolicyLimitRuleCase = SteeringPolicyLimitRuleCase.SteeringPolicyLimitRuleCase;
const SteeringPolicyPriorityAnswerData = __importStar(require("./steering-policy-priority-answer-data"));
exports.SteeringPolicyPriorityAnswerData = SteeringPolicyPriorityAnswerData.SteeringPolicyPriorityAnswerData;
const SteeringPolicyPriorityRuleCase = __importStar(require("./steering-policy-priority-rule-case"));
exports.SteeringPolicyPriorityRuleCase = SteeringPolicyPriorityRuleCase.SteeringPolicyPriorityRuleCase;
const SteeringPolicyRule = __importStar(require("./steering-policy-rule"));
exports.SteeringPolicyRule = SteeringPolicyRule.SteeringPolicyRule;
const SteeringPolicySummary = __importStar(require("./steering-policy-summary"));
exports.SteeringPolicySummary = SteeringPolicySummary.SteeringPolicySummary;
const SteeringPolicyWeightedAnswerData = __importStar(require("./steering-policy-weighted-answer-data"));
exports.SteeringPolicyWeightedAnswerData = SteeringPolicyWeightedAnswerData.SteeringPolicyWeightedAnswerData;
const SteeringPolicyWeightedRuleCase = __importStar(require("./steering-policy-weighted-rule-case"));
exports.SteeringPolicyWeightedRuleCase = SteeringPolicyWeightedRuleCase.SteeringPolicyWeightedRuleCase;
const TSIG = __importStar(require("./t-si-g"));
exports.TSIG = TSIG.TSIG;
const TsigKey = __importStar(require("./tsig-key"));
exports.TsigKey = TsigKey.TsigKey;
const TsigKeySummary = __importStar(require("./tsig-key-summary"));
exports.TsigKeySummary = TsigKeySummary.TsigKeySummary;
const UpdateDomainRecordsDetails = __importStar(require("./update-domain-records-details"));
exports.UpdateDomainRecordsDetails = UpdateDomainRecordsDetails.UpdateDomainRecordsDetails;
const UpdateRRSetDetails = __importStar(require("./update-rr-set-details"));
exports.UpdateRRSetDetails = UpdateRRSetDetails.UpdateRRSetDetails;
const UpdateResolverDetails = __importStar(require("./update-resolver-details"));
exports.UpdateResolverDetails = UpdateResolverDetails.UpdateResolverDetails;
const UpdateResolverEndpointDetails = __importStar(require("./update-resolver-endpoint-details"));
exports.UpdateResolverEndpointDetails = UpdateResolverEndpointDetails.UpdateResolverEndpointDetails;
const UpdateSteeringPolicyAttachmentDetails = __importStar(require("./update-steering-policy-attachment-details"));
exports.UpdateSteeringPolicyAttachmentDetails = UpdateSteeringPolicyAttachmentDetails.UpdateSteeringPolicyAttachmentDetails;
const UpdateSteeringPolicyDetails = __importStar(require("./update-steering-policy-details"));
exports.UpdateSteeringPolicyDetails = UpdateSteeringPolicyDetails.UpdateSteeringPolicyDetails;
const UpdateTsigKeyDetails = __importStar(require("./update-tsig-key-details"));
exports.UpdateTsigKeyDetails = UpdateTsigKeyDetails.UpdateTsigKeyDetails;
const UpdateViewDetails = __importStar(require("./update-view-details"));
exports.UpdateViewDetails = UpdateViewDetails.UpdateViewDetails;
const UpdateZoneDetails = __importStar(require("./update-zone-details"));
exports.UpdateZoneDetails = UpdateZoneDetails.UpdateZoneDetails;
const UpdateZoneRecordsDetails = __importStar(require("./update-zone-records-details"));
exports.UpdateZoneRecordsDetails = UpdateZoneRecordsDetails.UpdateZoneRecordsDetails;
const View = __importStar(require("./view"));
exports.View = View.View;
const ViewSummary = __importStar(require("./view-summary"));
exports.ViewSummary = ViewSummary.ViewSummary;
const Zone = __importStar(require("./zone"));
exports.Zone = Zone.Zone;
const ZoneSummary = __importStar(require("./zone-summary"));
exports.ZoneSummary = ZoneSummary.ZoneSummary;
const CreateMigratedDynectZoneDetails = __importStar(require("./create-migrated-dynect-zone-details"));
exports.CreateMigratedDynectZoneDetails = CreateMigratedDynectZoneDetails.CreateMigratedDynectZoneDetails;
const CreateResolverVnicEndpointDetails = __importStar(require("./create-resolver-vnic-endpoint-details"));
exports.CreateResolverVnicEndpointDetails = CreateResolverVnicEndpointDetails.CreateResolverVnicEndpointDetails;
const CreateZoneDetails = __importStar(require("./create-zone-details"));
exports.CreateZoneDetails = CreateZoneDetails.CreateZoneDetails;
const ResolverForwardRule = __importStar(require("./resolver-forward-rule"));
exports.ResolverForwardRule = ResolverForwardRule.ResolverForwardRule;
const ResolverForwardRuleDetails = __importStar(require("./resolver-forward-rule-details"));
exports.ResolverForwardRuleDetails = ResolverForwardRuleDetails.ResolverForwardRuleDetails;
const ResolverVnicEndpoint = __importStar(require("./resolver-vnic-endpoint"));
exports.ResolverVnicEndpoint = ResolverVnicEndpoint.ResolverVnicEndpoint;
const ResolverVnicEndpointSummary = __importStar(require("./resolver-vnic-endpoint-summary"));
exports.ResolverVnicEndpointSummary = ResolverVnicEndpointSummary.ResolverVnicEndpointSummary;
const SteeringPolicyFilterRule = __importStar(require("./steering-policy-filter-rule"));
exports.SteeringPolicyFilterRule = SteeringPolicyFilterRule.SteeringPolicyFilterRule;
const SteeringPolicyHealthRule = __importStar(require("./steering-policy-health-rule"));
exports.SteeringPolicyHealthRule = SteeringPolicyHealthRule.SteeringPolicyHealthRule;
const SteeringPolicyLimitRule = __importStar(require("./steering-policy-limit-rule"));
exports.SteeringPolicyLimitRule = SteeringPolicyLimitRule.SteeringPolicyLimitRule;
const SteeringPolicyPriorityRule = __importStar(require("./steering-policy-priority-rule"));
exports.SteeringPolicyPriorityRule = SteeringPolicyPriorityRule.SteeringPolicyPriorityRule;
const SteeringPolicyWeightedRule = __importStar(require("./steering-policy-weighted-rule"));
exports.SteeringPolicyWeightedRule = SteeringPolicyWeightedRule.SteeringPolicyWeightedRule;
const UpdateResolverVnicEndpointDetails = __importStar(require("./update-resolver-vnic-endpoint-details"));
exports.UpdateResolverVnicEndpointDetails = UpdateResolverVnicEndpointDetails.UpdateResolverVnicEndpointDetails;
//# sourceMappingURL=index.js.map