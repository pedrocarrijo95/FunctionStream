/**
 * DNS API
 * API for the DNS service. Use this API to manage DNS zones, records, and other DNS resources.
For more information, see [Overview of the DNS Service](/iaas/Content/DNS/Concepts/dnszonemanagement.htm).

 * OpenAPI spec version: 20180115
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { DnsWaiter } from "./dns-waiter";
export declare enum DnsApiKeys {
}
export declare class DnsClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": DnsWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new DnsWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): DnsWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): DnsWaiter;
    /**
     * Moves a resolver into a different compartment along with its protected default view and any endpoints.
     * Zones in the default view are not moved.
     *
     * @param ChangeResolverCompartmentRequest
     * @return ChangeResolverCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ChangeResolverCompartment.ts.html |here} to see how to use ChangeResolverCompartment API.
     */
    changeResolverCompartment(changeResolverCompartmentRequest: requests.ChangeResolverCompartmentRequest): Promise<responses.ChangeResolverCompartmentResponse>;
    /**
     * Moves a steering policy into a different compartment.
     * @param ChangeSteeringPolicyCompartmentRequest
     * @return ChangeSteeringPolicyCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ChangeSteeringPolicyCompartment.ts.html |here} to see how to use ChangeSteeringPolicyCompartment API.
     */
    changeSteeringPolicyCompartment(changeSteeringPolicyCompartmentRequest: requests.ChangeSteeringPolicyCompartmentRequest): Promise<responses.ChangeSteeringPolicyCompartmentResponse>;
    /**
     * Moves a TSIG key into a different compartment.
     * @param ChangeTsigKeyCompartmentRequest
     * @return ChangeTsigKeyCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ChangeTsigKeyCompartment.ts.html |here} to see how to use ChangeTsigKeyCompartment API.
     */
    changeTsigKeyCompartment(changeTsigKeyCompartmentRequest: requests.ChangeTsigKeyCompartmentRequest): Promise<responses.ChangeTsigKeyCompartmentResponse>;
    /**
     * Moves a view into a different compartment. Protected views cannot have their compartment changed.
     *
     * @param ChangeViewCompartmentRequest
     * @return ChangeViewCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ChangeViewCompartment.ts.html |here} to see how to use ChangeViewCompartment API.
     */
    changeViewCompartment(changeViewCompartmentRequest: requests.ChangeViewCompartmentRequest): Promise<responses.ChangeViewCompartmentResponse>;
    /**
     * Moves a zone into a different compartment. Protected zones cannot have their compartment changed.
     * <p>
     **Note:** All SteeringPolicyAttachment objects associated with this zone will also be moved into the provided compartment.
     *
     * @param ChangeZoneCompartmentRequest
     * @return ChangeZoneCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ChangeZoneCompartment.ts.html |here} to see how to use ChangeZoneCompartment API.
     */
    changeZoneCompartment(changeZoneCompartmentRequest: requests.ChangeZoneCompartmentRequest): Promise<responses.ChangeZoneCompartmentResponse>;
    /**
     * Creates a new resolver endpoint.
     *
     * @param CreateResolverEndpointRequest
     * @return CreateResolverEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/CreateResolverEndpoint.ts.html |here} to see how to use CreateResolverEndpoint API.
     */
    createResolverEndpoint(createResolverEndpointRequest: requests.CreateResolverEndpointRequest): Promise<responses.CreateResolverEndpointResponse>;
    /**
     * Creates a new steering policy in the specified compartment. For more information on
     * creating policies with templates, see [Traffic Management API Guide](https://docs.cloud.oracle.com/iaas/Content/TrafficManagement/Concepts/trafficmanagementapi.htm).
     *
     * @param CreateSteeringPolicyRequest
     * @return CreateSteeringPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/CreateSteeringPolicy.ts.html |here} to see how to use CreateSteeringPolicy API.
     */
    createSteeringPolicy(createSteeringPolicyRequest: requests.CreateSteeringPolicyRequest): Promise<responses.CreateSteeringPolicyResponse>;
    /**
       * Creates a new attachment between a steering policy and a domain, giving the
  * policy permission to answer queries for the specified domain. A steering policy must
  * be attached to a domain for the policy to answer DNS queries for that domain.
  * <p>
  For the purposes of access control, the attachment is automatically placed
  * into the same compartment as the domain's zone.
  *
       * @param CreateSteeringPolicyAttachmentRequest
       * @return CreateSteeringPolicyAttachmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/CreateSteeringPolicyAttachment.ts.html |here} to see how to use CreateSteeringPolicyAttachment API.
       */
    createSteeringPolicyAttachment(createSteeringPolicyAttachmentRequest: requests.CreateSteeringPolicyAttachmentRequest): Promise<responses.CreateSteeringPolicyAttachmentResponse>;
    /**
     * Creates a new TSIG key in the specified compartment. There is no
     * `opc-retry-token` header since TSIG key names must be globally unique.
     *
     * @param CreateTsigKeyRequest
     * @return CreateTsigKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/CreateTsigKey.ts.html |here} to see how to use CreateTsigKey API.
     */
    createTsigKey(createTsigKeyRequest: requests.CreateTsigKeyRequest): Promise<responses.CreateTsigKeyResponse>;
    /**
     * Creates a new view in the specified compartment.
     *
     * @param CreateViewRequest
     * @return CreateViewResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/CreateView.ts.html |here} to see how to use CreateView API.
     */
    createView(createViewRequest: requests.CreateViewRequest): Promise<responses.CreateViewResponse>;
    /**
     * Creates a new zone in the specified compartment. If the `Content-Type` header for the request is `text/dns`, the
     * `compartmentId` query parameter is required. Additionally, for `text/dns`, the `scope` and `viewId` query
     * parameters are required to create a private zone.
     *
     * @param CreateZoneRequest
     * @return CreateZoneResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/CreateZone.ts.html |here} to see how to use CreateZone API.
     */
    createZone(createZoneRequest: requests.CreateZoneRequest): Promise<responses.CreateZoneResponse>;
    /**
     * Deletes all records at the specified zone and domain.
     * @param DeleteDomainRecordsRequest
     * @return DeleteDomainRecordsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/DeleteDomainRecords.ts.html |here} to see how to use DeleteDomainRecords API.
     */
    deleteDomainRecords(deleteDomainRecordsRequest: requests.DeleteDomainRecordsRequest): Promise<responses.DeleteDomainRecordsResponse>;
    /**
     * Deletes all records in the specified RRSet.
     *
     * @param DeleteRRSetRequest
     * @return DeleteRRSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/DeleteRRSet.ts.html |here} to see how to use DeleteRRSet API.
     */
    deleteRRSet(deleteRRSetRequest: requests.DeleteRRSetRequest): Promise<responses.DeleteRRSetResponse>;
    /**
     * Deletes the specified resolver endpoint. Note that attempting to delete a resolver endpoint in the
     * DELETED lifecycle state will result in a 404 to be consistent with other operations of the API.
     * Resolver endpoints may not be deleted if they are referenced by a resolver rule.
     *
     * @param DeleteResolverEndpointRequest
     * @return DeleteResolverEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/DeleteResolverEndpoint.ts.html |here} to see how to use DeleteResolverEndpoint API.
     */
    deleteResolverEndpoint(deleteResolverEndpointRequest: requests.DeleteResolverEndpointRequest): Promise<responses.DeleteResolverEndpointResponse>;
    /**
     * Deletes the specified steering policy.
     * A `204` response indicates that the delete has been successful.
     * Deletion will fail if the policy is attached to any zones. To detach a
     * policy from a zone, see `DeleteSteeringPolicyAttachment`.
     *
     * @param DeleteSteeringPolicyRequest
     * @return DeleteSteeringPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/DeleteSteeringPolicy.ts.html |here} to see how to use DeleteSteeringPolicy API.
     */
    deleteSteeringPolicy(deleteSteeringPolicyRequest: requests.DeleteSteeringPolicyRequest): Promise<responses.DeleteSteeringPolicyResponse>;
    /**
     * Deletes the specified steering policy attachment.
     * A `204` response indicates that the delete has been successful.
     *
     * @param DeleteSteeringPolicyAttachmentRequest
     * @return DeleteSteeringPolicyAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/DeleteSteeringPolicyAttachment.ts.html |here} to see how to use DeleteSteeringPolicyAttachment API.
     */
    deleteSteeringPolicyAttachment(deleteSteeringPolicyAttachmentRequest: requests.DeleteSteeringPolicyAttachmentRequest): Promise<responses.DeleteSteeringPolicyAttachmentResponse>;
    /**
     * Deletes the specified TSIG key.
     *
     * @param DeleteTsigKeyRequest
     * @return DeleteTsigKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/DeleteTsigKey.ts.html |here} to see how to use DeleteTsigKey API.
     */
    deleteTsigKey(deleteTsigKeyRequest: requests.DeleteTsigKeyRequest): Promise<responses.DeleteTsigKeyResponse>;
    /**
     * Deletes the specified view. Note that attempting to delete a
     * view in the DELETED lifecycleState will result in a 404 to be
     * consistent with other operations of the API. Views can not be
     * deleted if they are referenced by non-deleted zones or resolvers.
     * Protected views cannot be deleted.
     *
     * @param DeleteViewRequest
     * @return DeleteViewResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/DeleteView.ts.html |here} to see how to use DeleteView API.
     */
    deleteView(deleteViewRequest: requests.DeleteViewRequest): Promise<responses.DeleteViewResponse>;
    /**
     * Deletes the specified zone and all its steering policy attachments.
     * A `204` response indicates that the zone has been successfully deleted.
     * Protected zones cannot be deleted.
     *
     * @param DeleteZoneRequest
     * @return DeleteZoneResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/DeleteZone.ts.html |here} to see how to use DeleteZone API.
     */
    deleteZone(deleteZoneRequest: requests.DeleteZoneRequest): Promise<responses.DeleteZoneResponse>;
    /**
     * Gets a list of all records at the specified zone and domain.
     * The results are sorted by `rtype` in alphabetical order by default. You
     * can optionally filter and/or sort the results using the listed parameters.
     *
     * @param GetDomainRecordsRequest
     * @return GetDomainRecordsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetDomainRecords.ts.html |here} to see how to use GetDomainRecords API.
     */
    getDomainRecords(getDomainRecordsRequest: requests.GetDomainRecordsRequest): Promise<responses.GetDomainRecordsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.Record objects
     * contained in responses from the getDomainRecords operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getAllDomainRecords(request: requests.GetDomainRecordsRequest): AsyncIterableIterator<models.Record>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the getDomainRecords operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getAllDomainRecordsResponses(request: requests.GetDomainRecordsRequest): AsyncIterableIterator<responses.GetDomainRecordsResponse>;
    /**
     * Gets a list of all records in the specified RRSet. The results are
     * sorted by `recordHash` by default.
     *
     * @param GetRRSetRequest
     * @return GetRRSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetRRSet.ts.html |here} to see how to use GetRRSet API.
     */
    getRRSet(getRRSetRequest: requests.GetRRSetRequest): Promise<responses.GetRRSetResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.Record objects
     * contained in responses from the getRRSet operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getAllRRSet(request: requests.GetRRSetRequest): AsyncIterableIterator<models.Record>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the getRRSet operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getAllRRSetResponses(request: requests.GetRRSetRequest): AsyncIterableIterator<responses.GetRRSetResponse>;
    /**
     * Get information about a specific resolver. Note that attempting to get a
     * resolver in the DELETED lifecycleState will result in a 404 to be
     * consistent with other operations of the API.
     *
     * @param GetResolverRequest
     * @return GetResolverResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetResolver.ts.html |here} to see how to use GetResolver API.
     */
    getResolver(getResolverRequest: requests.GetResolverRequest): Promise<responses.GetResolverResponse>;
    /**
     * Get information about a specific resolver endpoint. Note that attempting to get a resolver endpoint
     * in the DELETED lifecycle state will result in a 404 to be consistent with other operations of the API.
     *
     * @param GetResolverEndpointRequest
     * @return GetResolverEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetResolverEndpoint.ts.html |here} to see how to use GetResolverEndpoint API.
     */
    getResolverEndpoint(getResolverEndpointRequest: requests.GetResolverEndpointRequest): Promise<responses.GetResolverEndpointResponse>;
    /**
     * Gets information about the specified steering policy.
     *
     * @param GetSteeringPolicyRequest
     * @return GetSteeringPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetSteeringPolicy.ts.html |here} to see how to use GetSteeringPolicy API.
     */
    getSteeringPolicy(getSteeringPolicyRequest: requests.GetSteeringPolicyRequest): Promise<responses.GetSteeringPolicyResponse>;
    /**
     * Gets information about the specified steering policy attachment.
     *
     * @param GetSteeringPolicyAttachmentRequest
     * @return GetSteeringPolicyAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetSteeringPolicyAttachment.ts.html |here} to see how to use GetSteeringPolicyAttachment API.
     */
    getSteeringPolicyAttachment(getSteeringPolicyAttachmentRequest: requests.GetSteeringPolicyAttachmentRequest): Promise<responses.GetSteeringPolicyAttachmentResponse>;
    /**
     * Gets information about the specified TSIG key.
     *
     * @param GetTsigKeyRequest
     * @return GetTsigKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetTsigKey.ts.html |here} to see how to use GetTsigKey API.
     */
    getTsigKey(getTsigKeyRequest: requests.GetTsigKeyRequest): Promise<responses.GetTsigKeyResponse>;
    /**
     * Get information about a specific view. Note that attempting to get a
     * view in the DELETED lifecycleState will result in a 404 to be
     * consistent with other operations of the API.
     *
     * @param GetViewRequest
     * @return GetViewResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetView.ts.html |here} to see how to use GetView API.
     */
    getView(getViewRequest: requests.GetViewRequest): Promise<responses.GetViewResponse>;
    /**
     * Gets information about the specified zone, including its creation date,
     * zone type, and serial.
     *
     * @param GetZoneRequest
     * @return GetZoneResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetZone.ts.html |here} to see how to use GetZone API.
     */
    getZone(getZoneRequest: requests.GetZoneRequest): Promise<responses.GetZoneResponse>;
    /**
     * Gets all records in the specified zone. The results are
     * sorted by `domain` in alphabetical order by default. For more
     * information about records, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
     *
     * @param GetZoneRecordsRequest
     * @return GetZoneRecordsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/GetZoneRecords.ts.html |here} to see how to use GetZoneRecords API.
     */
    getZoneRecords(getZoneRecordsRequest: requests.GetZoneRecordsRequest): Promise<responses.GetZoneRecordsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.Record objects
     * contained in responses from the getZoneRecords operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getAllZoneRecords(request: requests.GetZoneRecordsRequest): AsyncIterableIterator<models.Record>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the getZoneRecords operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    getAllZoneRecordsResponses(request: requests.GetZoneRecordsRequest): AsyncIterableIterator<responses.GetZoneRecordsResponse>;
    /**
     * Gets a list of all endpoints within a resolver. The collection can be filtered by name or lifecycle state.
     * It can be sorted on creation time or name both in ASC or DESC order. Note that when no lifecycleState
     * query parameter is provided that the collection does not include resolver endpoints in the DELETED
     * lifecycle state to be consistent with other operations of the API.
     *
     * @param ListResolverEndpointsRequest
     * @return ListResolverEndpointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ListResolverEndpoints.ts.html |here} to see how to use ListResolverEndpoints API.
     */
    listResolverEndpoints(listResolverEndpointsRequest: requests.ListResolverEndpointsRequest): Promise<responses.ListResolverEndpointsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ResolverEndpointSummary objects
     * contained in responses from the listResolverEndpoints operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllResolverEndpoints(request: requests.ListResolverEndpointsRequest): AsyncIterableIterator<models.ResolverEndpointSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listResolverEndpoints operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllResolverEndpointsResponses(request: requests.ListResolverEndpointsRequest): AsyncIterableIterator<responses.ListResolverEndpointsResponse>;
    /**
     * Gets a list of all resolvers within a compartment. The collection can
     * be filtered by display name, id, or lifecycle state. It can be sorted
     * on creation time or displayName both in ASC or DESC order. Note that
     * when no lifecycleState query parameter is provided that the collection
     * does not include resolvers in the DELETED lifecycleState to be consistent
     * with other operations of the API.
     *
     * @param ListResolversRequest
     * @return ListResolversResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ListResolvers.ts.html |here} to see how to use ListResolvers API.
     */
    listResolvers(listResolversRequest: requests.ListResolversRequest): Promise<responses.ListResolversResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ResolverSummary objects
     * contained in responses from the listResolvers operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllResolvers(request: requests.ListResolversRequest): AsyncIterableIterator<models.ResolverSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listResolvers operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllResolversResponses(request: requests.ListResolversRequest): AsyncIterableIterator<responses.ListResolversResponse>;
    /**
     * Gets a list of all steering policies in the specified compartment.
     *
     * @param ListSteeringPoliciesRequest
     * @return ListSteeringPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ListSteeringPolicies.ts.html |here} to see how to use ListSteeringPolicies API.
     */
    listSteeringPolicies(listSteeringPoliciesRequest: requests.ListSteeringPoliciesRequest): Promise<responses.ListSteeringPoliciesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SteeringPolicySummary objects
     * contained in responses from the listSteeringPolicies operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSteeringPolicies(request: requests.ListSteeringPoliciesRequest): AsyncIterableIterator<models.SteeringPolicySummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listSteeringPolicies operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSteeringPoliciesResponses(request: requests.ListSteeringPoliciesRequest): AsyncIterableIterator<responses.ListSteeringPoliciesResponse>;
    /**
     * Lists the steering policy attachments in the specified compartment.
     *
     * @param ListSteeringPolicyAttachmentsRequest
     * @return ListSteeringPolicyAttachmentsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ListSteeringPolicyAttachments.ts.html |here} to see how to use ListSteeringPolicyAttachments API.
     */
    listSteeringPolicyAttachments(listSteeringPolicyAttachmentsRequest: requests.ListSteeringPolicyAttachmentsRequest): Promise<responses.ListSteeringPolicyAttachmentsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SteeringPolicyAttachmentSummary objects
     * contained in responses from the listSteeringPolicyAttachments operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSteeringPolicyAttachments(request: requests.ListSteeringPolicyAttachmentsRequest): AsyncIterableIterator<models.SteeringPolicyAttachmentSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listSteeringPolicyAttachments operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSteeringPolicyAttachmentsResponses(request: requests.ListSteeringPolicyAttachmentsRequest): AsyncIterableIterator<responses.ListSteeringPolicyAttachmentsResponse>;
    /**
     * Gets a list of all TSIG keys in the specified compartment.
     *
     * @param ListTsigKeysRequest
     * @return ListTsigKeysResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ListTsigKeys.ts.html |here} to see how to use ListTsigKeys API.
     */
    listTsigKeys(listTsigKeysRequest: requests.ListTsigKeysRequest): Promise<responses.ListTsigKeysResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.TsigKeySummary objects
     * contained in responses from the listTsigKeys operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllTsigKeys(request: requests.ListTsigKeysRequest): AsyncIterableIterator<models.TsigKeySummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listTsigKeys operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllTsigKeysResponses(request: requests.ListTsigKeysRequest): AsyncIterableIterator<responses.ListTsigKeysResponse>;
    /**
     * Gets a list of all views within a compartment. The collection can
     * be filtered by display name, id, or lifecycle state. It can be sorted
     * on creation time or displayName both in ASC or DESC order. Note that
     * when no lifecycleState query parameter is provided that the collection
     * does not include views in the DELETED lifecycleState to be consistent
     * with other operations of the API.
     *
     * @param ListViewsRequest
     * @return ListViewsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ListViews.ts.html |here} to see how to use ListViews API.
     */
    listViews(listViewsRequest: requests.ListViewsRequest): Promise<responses.ListViewsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ViewSummary objects
     * contained in responses from the listViews operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllViews(request: requests.ListViewsRequest): AsyncIterableIterator<models.ViewSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listViews operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllViewsResponses(request: requests.ListViewsRequest): AsyncIterableIterator<responses.ListViewsResponse>;
    /**
     * Gets a list of all zones in the specified compartment. The collection
     * can be filtered by name, time created, scope, associated view, and zone type.
     *
     * @param ListZonesRequest
     * @return ListZonesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/ListZones.ts.html |here} to see how to use ListZones API.
     */
    listZones(listZonesRequest: requests.ListZonesRequest): Promise<responses.ListZonesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ZoneSummary objects
     * contained in responses from the listZones operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllZones(request: requests.ListZonesRequest): AsyncIterableIterator<models.ZoneSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listZones operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllZonesResponses(request: requests.ListZonesRequest): AsyncIterableIterator<responses.ListZonesResponse>;
    /**
     * Updates records in the specified zone at a domain. You can update
     * one record or all records for the specified zone depending on the changes
     * provided in the request body. You can also add or remove records using this
     * function.
     *
     * @param PatchDomainRecordsRequest
     * @return PatchDomainRecordsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/PatchDomainRecords.ts.html |here} to see how to use PatchDomainRecords API.
     */
    patchDomainRecords(patchDomainRecordsRequest: requests.PatchDomainRecordsRequest): Promise<responses.PatchDomainRecordsResponse>;
    /**
     * Updates records in the specified RRSet.
     * @param PatchRRSetRequest
     * @return PatchRRSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/PatchRRSet.ts.html |here} to see how to use PatchRRSet API.
     */
    patchRRSet(patchRRSetRequest: requests.PatchRRSetRequest): Promise<responses.PatchRRSetResponse>;
    /**
     * Updates a collection of records in the specified zone. You can update
     * one record or all records for the specified zone depending on the
     * changes provided in the request body. You can also add or remove records
     * using this function.
     *
     * @param PatchZoneRecordsRequest
     * @return PatchZoneRecordsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/PatchZoneRecords.ts.html |here} to see how to use PatchZoneRecords API.
     */
    patchZoneRecords(patchZoneRecordsRequest: requests.PatchZoneRecordsRequest): Promise<responses.PatchZoneRecordsResponse>;
    /**
     * Replaces records in the specified zone at a domain with the records
     * specified in the request body. If a specified record does not exist,
     * it will be created. If the record exists, then it will be updated to
     * represent the record in the body of the request. If a record in the zone
     * does not exist in the request body, the record will be removed from the
     * zone.
     *
     * @param UpdateDomainRecordsRequest
     * @return UpdateDomainRecordsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateDomainRecords.ts.html |here} to see how to use UpdateDomainRecords API.
     */
    updateDomainRecords(updateDomainRecordsRequest: requests.UpdateDomainRecordsRequest): Promise<responses.UpdateDomainRecordsResponse>;
    /**
     * Replaces records in the specified RRSet.
     * @param UpdateRRSetRequest
     * @return UpdateRRSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateRRSet.ts.html |here} to see how to use UpdateRRSet API.
     */
    updateRRSet(updateRRSetRequest: requests.UpdateRRSetRequest): Promise<responses.UpdateRRSetResponse>;
    /**
     * Updates the specified resolver with your new information.
     *
     * @param UpdateResolverRequest
     * @return UpdateResolverResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateResolver.ts.html |here} to see how to use UpdateResolver API.
     */
    updateResolver(updateResolverRequest: requests.UpdateResolverRequest): Promise<responses.UpdateResolverResponse>;
    /**
     * Updates the specified resolver endpoint with your new information.
     *
     * @param UpdateResolverEndpointRequest
     * @return UpdateResolverEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateResolverEndpoint.ts.html |here} to see how to use UpdateResolverEndpoint API.
     */
    updateResolverEndpoint(updateResolverEndpointRequest: requests.UpdateResolverEndpointRequest): Promise<responses.UpdateResolverEndpointResponse>;
    /**
     * Updates the configuration of the specified steering policy.
     *
     * @param UpdateSteeringPolicyRequest
     * @return UpdateSteeringPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateSteeringPolicy.ts.html |here} to see how to use UpdateSteeringPolicy API.
     */
    updateSteeringPolicy(updateSteeringPolicyRequest: requests.UpdateSteeringPolicyRequest): Promise<responses.UpdateSteeringPolicyResponse>;
    /**
     * Updates the specified steering policy attachment with your new information.
     *
     * @param UpdateSteeringPolicyAttachmentRequest
     * @return UpdateSteeringPolicyAttachmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateSteeringPolicyAttachment.ts.html |here} to see how to use UpdateSteeringPolicyAttachment API.
     */
    updateSteeringPolicyAttachment(updateSteeringPolicyAttachmentRequest: requests.UpdateSteeringPolicyAttachmentRequest): Promise<responses.UpdateSteeringPolicyAttachmentResponse>;
    /**
     * Updates the specified TSIG key.
     *
     * @param UpdateTsigKeyRequest
     * @return UpdateTsigKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateTsigKey.ts.html |here} to see how to use UpdateTsigKey API.
     */
    updateTsigKey(updateTsigKeyRequest: requests.UpdateTsigKeyRequest): Promise<responses.UpdateTsigKeyResponse>;
    /**
     * Updates the specified view with your new information.
     *
     * @param UpdateViewRequest
     * @return UpdateViewResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateView.ts.html |here} to see how to use UpdateView API.
     */
    updateView(updateViewRequest: requests.UpdateViewRequest): Promise<responses.UpdateViewResponse>;
    /**
     * Updates the specified secondary zone with your new external master
     * server information. For more information about secondary zone, see
     * [Manage DNS Service Zone](https://docs.cloud.oracle.com/iaas/Content/DNS/Tasks/managingdnszones.htm).
     *
     * @param UpdateZoneRequest
     * @return UpdateZoneResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateZone.ts.html |here} to see how to use UpdateZone API.
     */
    updateZone(updateZoneRequest: requests.UpdateZoneRequest): Promise<responses.UpdateZoneResponse>;
    /**
     * Replaces records in the specified zone with the records specified in the
     * request body. If a specified record does not exist, it will be created.
     * If the record exists, then it will be updated to represent the record in
     * the body of the request. If a record in the zone does not exist in the
     * request body, the record will be removed from the zone.
     *
     * @param UpdateZoneRecordsRequest
     * @return UpdateZoneRecordsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dns/UpdateZoneRecords.ts.html |here} to see how to use UpdateZoneRecords API.
     */
    updateZoneRecords(updateZoneRecordsRequest: requests.UpdateZoneRecordsRequest): Promise<responses.UpdateZoneRecordsResponse>;
}
