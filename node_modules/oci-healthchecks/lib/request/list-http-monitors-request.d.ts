/**
 *
 *
 * OpenAPI spec version: 20180501
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
/**
 * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/healthchecks/ListHttpMonitors.ts.html |here} to see how to use ListHttpMonitorsRequest.
 */
export interface ListHttpMonitorsRequest extends common.BaseRequest {
    /**
     * Filters results by compartment.
     */
    "compartmentId": string;
    /**
     * Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
     * particular request, please provide the request ID.
     *
     */
    "opcRequestId"?: string;
    /**
     * The maximum number of items to return in a paginated \"List\" call.
     *
     */
    "limit"?: number;
    /**
     * The value of the `opc-next-page` response header
     * from the previous \"List\" call.
     *
     */
    "page"?: string;
    /**
     * The field to sort by when listing monitors.
     */
    "sortBy"?: ListHttpMonitorsRequest.SortBy;
    /**
     * Controls the sort order of results.
     */
    "sortOrder"?: ListHttpMonitorsRequest.SortOrder;
    /**
     * Filters results that exactly match the `displayName` field.
     */
    "displayName"?: string;
    /**
     * Filters results that match the `homeRegion`.
     */
    "homeRegion"?: string;
}
export declare namespace ListHttpMonitorsRequest {
    enum SortBy {
        Id = "id",
        DisplayName = "displayName",
        TimeCreated = "timeCreated"
    }
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
}
