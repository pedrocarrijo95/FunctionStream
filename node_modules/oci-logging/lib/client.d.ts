/**
 * Logging Management API
 * Use the Logging Management API to create, read, list, update, and delete log groups, log objects, and agent configurations.
 * OpenAPI spec version: 20200531
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { LoggingManagementWaiter } from "./loggingmanagement-waiter";
export declare enum LoggingManagementApiKeys {
}
export declare class LoggingManagementClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": LoggingManagementWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new LoggingManagementWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): LoggingManagementWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): LoggingManagementWaiter;
    /**
     * Moves a log group into a different compartment within the same tenancy.  When provided, the If-Match is checked against the resource ETag values.
     * For information about moving resources between compartments, see [Moving Resources Between Compartments](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * @param ChangeLogGroupCompartmentRequest
     * @return ChangeLogGroupCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ChangeLogGroupCompartment.ts.html |here} to see how to use ChangeLogGroupCompartment API.
     */
    changeLogGroupCompartment(changeLogGroupCompartmentRequest: requests.ChangeLogGroupCompartmentRequest): Promise<responses.ChangeLogGroupCompartmentResponse>;
    /**
     * Moves a log into a different log group within the same tenancy.  When provided, the If-Match is checked against the ETag values of the resource.
     *
     * @param ChangeLogLogGroupRequest
     * @return ChangeLogLogGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ChangeLogLogGroup.ts.html |here} to see how to use ChangeLogLogGroup API.
     */
    changeLogLogGroup(changeLogLogGroupRequest: requests.ChangeLogLogGroupRequest): Promise<responses.ChangeLogLogGroupResponse>;
    /**
     * Moves a saved search into a different compartment within the same tenancy. For information about moving
     * resources between compartments, see [Moving Resources to a Different Compartment](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * @param ChangeLogSavedSearchCompartmentRequest
     * @return ChangeLogSavedSearchCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ChangeLogSavedSearchCompartment.ts.html |here} to see how to use ChangeLogSavedSearchCompartment API.
     */
    changeLogSavedSearchCompartment(changeLogSavedSearchCompartmentRequest: requests.ChangeLogSavedSearchCompartmentRequest): Promise<responses.ChangeLogSavedSearchCompartmentResponse>;
    /**
     * Moves the unified agent configuration into a different compartment within the same tenancy.  When provided, the If-Match is checked against the ETag values of the resource.
     * For information about moving resources between compartments, see [Moving Resources Between Compartments](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * @param ChangeUnifiedAgentConfigurationCompartmentRequest
     * @return ChangeUnifiedAgentConfigurationCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ChangeUnifiedAgentConfigurationCompartment.ts.html |here} to see how to use ChangeUnifiedAgentConfigurationCompartment API.
     */
    changeUnifiedAgentConfigurationCompartment(changeUnifiedAgentConfigurationCompartmentRequest: requests.ChangeUnifiedAgentConfigurationCompartmentRequest): Promise<responses.ChangeUnifiedAgentConfigurationCompartmentResponse>;
    /**
     * Creates a log within the specified log group. This call fails if a log group has already been created
     * with the same displayName or (service, resource, category) triplet.
     *
     * @param CreateLogRequest
     * @return CreateLogResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/CreateLog.ts.html |here} to see how to use CreateLog API.
     */
    createLog(createLogRequest: requests.CreateLogRequest): Promise<responses.CreateLogResponse>;
    /**
     * Create a new log group with a unique display name. This call fails
     * if the log group is already created with the same displayName in the compartment.
     *
     * @param CreateLogGroupRequest
     * @return CreateLogGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/CreateLogGroup.ts.html |here} to see how to use CreateLogGroup API.
     */
    createLogGroup(createLogGroupRequest: requests.CreateLogGroupRequest): Promise<responses.CreateLogGroupResponse>;
    /**
     * Creates a new LogSavedSearch.
     *
     * @param CreateLogSavedSearchRequest
     * @return CreateLogSavedSearchResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/CreateLogSavedSearch.ts.html |here} to see how to use CreateLogSavedSearch API.
     */
    createLogSavedSearch(createLogSavedSearchRequest: requests.CreateLogSavedSearchRequest): Promise<responses.CreateLogSavedSearchResponse>;
    /**
     * Create unified agent configuration registration.
     * @param CreateUnifiedAgentConfigurationRequest
     * @return CreateUnifiedAgentConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/CreateUnifiedAgentConfiguration.ts.html |here} to see how to use CreateUnifiedAgentConfiguration API.
     */
    createUnifiedAgentConfiguration(createUnifiedAgentConfigurationRequest: requests.CreateUnifiedAgentConfigurationRequest): Promise<responses.CreateUnifiedAgentConfigurationResponse>;
    /**
     * Deletes the log object in a log group.
     * @param DeleteLogRequest
     * @return DeleteLogResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/DeleteLog.ts.html |here} to see how to use DeleteLog API.
     */
    deleteLog(deleteLogRequest: requests.DeleteLogRequest): Promise<responses.DeleteLogResponse>;
    /**
     * Deletes the specified log group.
     * @param DeleteLogGroupRequest
     * @return DeleteLogGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/DeleteLogGroup.ts.html |here} to see how to use DeleteLogGroup API.
     */
    deleteLogGroup(deleteLogGroupRequest: requests.DeleteLogGroupRequest): Promise<responses.DeleteLogGroupResponse>;
    /**
     * Deletes the specified log saved search.
     * @param DeleteLogSavedSearchRequest
     * @return DeleteLogSavedSearchResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/DeleteLogSavedSearch.ts.html |here} to see how to use DeleteLogSavedSearch API.
     */
    deleteLogSavedSearch(deleteLogSavedSearchRequest: requests.DeleteLogSavedSearchRequest): Promise<responses.DeleteLogSavedSearchResponse>;
    /**
     * Delete unified agent configuration.
     * @param DeleteUnifiedAgentConfigurationRequest
     * @return DeleteUnifiedAgentConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/DeleteUnifiedAgentConfiguration.ts.html |here} to see how to use DeleteUnifiedAgentConfiguration API.
     */
    deleteUnifiedAgentConfiguration(deleteUnifiedAgentConfigurationRequest: requests.DeleteUnifiedAgentConfigurationRequest): Promise<responses.DeleteUnifiedAgentConfigurationResponse>;
    /**
     * Cancel a work request that has not started yet.
     *
     * @param DeleteWorkRequestRequest
     * @return DeleteWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/DeleteWorkRequest.ts.html |here} to see how to use DeleteWorkRequest API.
     */
    deleteWorkRequest(deleteWorkRequestRequest: requests.DeleteWorkRequestRequest): Promise<responses.DeleteWorkRequestResponse>;
    /**
     * Gets the log object configuration for the log object OCID.
     *
     * @param GetLogRequest
     * @return GetLogResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/GetLog.ts.html |here} to see how to use GetLog API.
     */
    getLog(getLogRequest: requests.GetLogRequest): Promise<responses.GetLogResponse>;
    /**
     * Get the specified log group's information.
     * @param GetLogGroupRequest
     * @return GetLogGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/GetLogGroup.ts.html |here} to see how to use GetLogGroup API.
     */
    getLogGroup(getLogGroupRequest: requests.GetLogGroupRequest): Promise<responses.GetLogGroupResponse>;
    /**
     * Retrieves a LogIncludedSearch.
     * @param GetLogIncludedSearchRequest
     * @return GetLogIncludedSearchResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/GetLogIncludedSearch.ts.html |here} to see how to use GetLogIncludedSearch API.
     */
    getLogIncludedSearch(getLogIncludedSearchRequest: requests.GetLogIncludedSearchRequest): Promise<responses.GetLogIncludedSearchResponse>;
    /**
     * Retrieves a log saved search.
     * @param GetLogSavedSearchRequest
     * @return GetLogSavedSearchResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/GetLogSavedSearch.ts.html |here} to see how to use GetLogSavedSearch API.
     */
    getLogSavedSearch(getLogSavedSearchRequest: requests.GetLogSavedSearchRequest): Promise<responses.GetLogSavedSearchResponse>;
    /**
     * Get the unified agent configuration for an ID.
     * @param GetUnifiedAgentConfigurationRequest
     * @return GetUnifiedAgentConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/GetUnifiedAgentConfiguration.ts.html |here} to see how to use GetUnifiedAgentConfiguration API.
     */
    getUnifiedAgentConfiguration(getUnifiedAgentConfigurationRequest: requests.GetUnifiedAgentConfigurationRequest): Promise<responses.GetUnifiedAgentConfigurationResponse>;
    /**
     * Gets the details of the work request with the given ID.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Lists all log groups for the specified compartment or tenancy.
     * @param ListLogGroupsRequest
     * @return ListLogGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ListLogGroups.ts.html |here} to see how to use ListLogGroups API.
     */
    listLogGroups(listLogGroupsRequest: requests.ListLogGroupsRequest): Promise<responses.ListLogGroupsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LogGroupSummary objects
     * contained in responses from the listLogGroups operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLogGroups(request: requests.ListLogGroupsRequest): AsyncIterableIterator<models.LogGroupSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listLogGroups operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLogGroupsResponses(request: requests.ListLogGroupsRequest): AsyncIterableIterator<responses.ListLogGroupsResponse>;
    /**
     * Lists Logging Included Searches for this compartment.
     *
     * @param ListLogIncludedSearchesRequest
     * @return ListLogIncludedSearchesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ListLogIncludedSearches.ts.html |here} to see how to use ListLogIncludedSearches API.
     */
    listLogIncludedSearches(listLogIncludedSearchesRequest: requests.ListLogIncludedSearchesRequest): Promise<responses.ListLogIncludedSearchesResponse>;
    /**
     * Lists Logging Saved Searches for this compartment.
     *
     * @param ListLogSavedSearchesRequest
     * @return ListLogSavedSearchesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ListLogSavedSearches.ts.html |here} to see how to use ListLogSavedSearches API.
     */
    listLogSavedSearches(listLogSavedSearchesRequest: requests.ListLogSavedSearchesRequest): Promise<responses.ListLogSavedSearchesResponse>;
    /**
     * Lists the specified log group's log objects.
     * @param ListLogsRequest
     * @return ListLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ListLogs.ts.html |here} to see how to use ListLogs API.
     */
    listLogs(listLogsRequest: requests.ListLogsRequest): Promise<responses.ListLogsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.LogSummary objects
     * contained in responses from the listLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLogs(request: requests.ListLogsRequest): AsyncIterableIterator<models.LogSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllLogsResponses(request: requests.ListLogsRequest): AsyncIterableIterator<responses.ListLogsResponse>;
    /**
     * Lists all services that support logging.
     * @param ListServicesRequest
     * @return ListServicesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ListServices.ts.html |here} to see how to use ListServices API.
     */
    listServices(listServicesRequest: requests.ListServicesRequest): Promise<responses.ListServicesResponse>;
    /**
     * Lists all unified agent configurations in the specified compartment.
     * @param ListUnifiedAgentConfigurationsRequest
     * @return ListUnifiedAgentConfigurationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ListUnifiedAgentConfigurations.ts.html |here} to see how to use ListUnifiedAgentConfigurations API.
     */
    listUnifiedAgentConfigurations(listUnifiedAgentConfigurationsRequest: requests.ListUnifiedAgentConfigurationsRequest): Promise<responses.ListUnifiedAgentConfigurationsResponse>;
    /**
     * Return a list of errors for a given work request.
     *
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestError objects
     * contained in responses from the listWorkRequestErrors operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrors(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<models.WorkRequestError>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestErrors operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrorsResponses(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a list of logs for a given work request.
     *
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestLog objects
     * contained in responses from the listWorkRequestLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogs(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<models.WorkRequestLog>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogsResponses(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequests(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<models.WorkRequestSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestsResponses(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Updates the existing log object with the associated configuration. This call
     *       fails if the log object does not exist.
     *
     * @param UpdateLogRequest
     * @return UpdateLogResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/UpdateLog.ts.html |here} to see how to use UpdateLog API.
     */
    updateLog(updateLogRequest: requests.UpdateLogRequest): Promise<responses.UpdateLogResponse>;
    /**
     * Updates the existing log group with the associated configuration. This call
     *       fails if the log group does not exist.
     *
     * @param UpdateLogGroupRequest
     * @return UpdateLogGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/UpdateLogGroup.ts.html |here} to see how to use UpdateLogGroup API.
     */
    updateLogGroup(updateLogGroupRequest: requests.UpdateLogGroupRequest): Promise<responses.UpdateLogGroupResponse>;
    /**
     * Updates an  existing log saved search.
     *
     * @param UpdateLogSavedSearchRequest
     * @return UpdateLogSavedSearchResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/UpdateLogSavedSearch.ts.html |here} to see how to use UpdateLogSavedSearch API.
     */
    updateLogSavedSearch(updateLogSavedSearchRequest: requests.UpdateLogSavedSearchRequest): Promise<responses.UpdateLogSavedSearchResponse>;
    /**
     * Update an existing unified agent configuration. This call
     *       fails if the log group does not exist.
     *
     * @param UpdateUnifiedAgentConfigurationRequest
     * @return UpdateUnifiedAgentConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/logging/UpdateUnifiedAgentConfiguration.ts.html |here} to see how to use UpdateUnifiedAgentConfiguration API.
     */
    updateUnifiedAgentConfiguration(updateUnifiedAgentConfigurationRequest: requests.UpdateUnifiedAgentConfigurationRequest): Promise<responses.UpdateUnifiedAgentConfigurationResponse>;
}
