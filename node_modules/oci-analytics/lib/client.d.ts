/**
 * Analytics API
 * Analytics API.

 * OpenAPI spec version: 20190331
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { AnalyticsWaiter } from "./analytics-waiter";
export declare enum AnalyticsApiKeys {
}
export declare class AnalyticsClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": AnalyticsWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new AnalyticsWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): AnalyticsWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): AnalyticsWaiter;
    /**
     * Change the compartment of an Analytics instance. The operation is long-running
     * and creates a new WorkRequest.
     *
     * @param ChangeAnalyticsInstanceCompartmentRequest
     * @return ChangeAnalyticsInstanceCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/ChangeAnalyticsInstanceCompartment.ts.html |here} to see how to use ChangeAnalyticsInstanceCompartment API.
     */
    changeAnalyticsInstanceCompartment(changeAnalyticsInstanceCompartmentRequest: requests.ChangeAnalyticsInstanceCompartmentRequest): Promise<responses.ChangeAnalyticsInstanceCompartmentResponse>;
    /**
     * Change an Analytics instance network endpoint. The operation is long-running
     * and creates a new WorkRequest.
     *
     * @param ChangeAnalyticsInstanceNetworkEndpointRequest
     * @return ChangeAnalyticsInstanceNetworkEndpointResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/ChangeAnalyticsInstanceNetworkEndpoint.ts.html |here} to see how to use ChangeAnalyticsInstanceNetworkEndpoint API.
     */
    changeAnalyticsInstanceNetworkEndpoint(changeAnalyticsInstanceNetworkEndpointRequest: requests.ChangeAnalyticsInstanceNetworkEndpointRequest): Promise<responses.ChangeAnalyticsInstanceNetworkEndpointResponse>;
    /**
     * Create a new AnalyticsInstance in the specified compartment. The operation is long-running
     * and creates a new WorkRequest.
     *
     * @param CreateAnalyticsInstanceRequest
     * @return CreateAnalyticsInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/CreateAnalyticsInstance.ts.html |here} to see how to use CreateAnalyticsInstance API.
     */
    createAnalyticsInstance(createAnalyticsInstanceRequest: requests.CreateAnalyticsInstanceRequest): Promise<responses.CreateAnalyticsInstanceResponse>;
    /**
     * Create an Private access Channel for the Analytics instance. The operation is long-running
     * and creates a new WorkRequest.
     *
     * @param CreatePrivateAccessChannelRequest
     * @return CreatePrivateAccessChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/CreatePrivateAccessChannel.ts.html |here} to see how to use CreatePrivateAccessChannel API.
     */
    createPrivateAccessChannel(createPrivateAccessChannelRequest: requests.CreatePrivateAccessChannelRequest): Promise<responses.CreatePrivateAccessChannelResponse>;
    /**
     * Allows specifying a custom host name to be used to access the analytics instance.  This requires prior setup of DNS entry and certificate
     * for this host.
     *
     * @param CreateVanityUrlRequest
     * @return CreateVanityUrlResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/CreateVanityUrl.ts.html |here} to see how to use CreateVanityUrl API.
     */
    createVanityUrl(createVanityUrlRequest: requests.CreateVanityUrlRequest): Promise<responses.CreateVanityUrlResponse>;
    /**
     * Terminates the specified Analytics instance. The operation is long-running
     * and creates a new WorkRequest.
     *
     * @param DeleteAnalyticsInstanceRequest
     * @return DeleteAnalyticsInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/DeleteAnalyticsInstance.ts.html |here} to see how to use DeleteAnalyticsInstance API.
     */
    deleteAnalyticsInstance(deleteAnalyticsInstanceRequest: requests.DeleteAnalyticsInstanceRequest): Promise<responses.DeleteAnalyticsInstanceResponse>;
    /**
     * Delete an Analytics instance's Private access channel with the given unique identifier key.
     *
     * @param DeletePrivateAccessChannelRequest
     * @return DeletePrivateAccessChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/DeletePrivateAccessChannel.ts.html |here} to see how to use DeletePrivateAccessChannel API.
     */
    deletePrivateAccessChannel(deletePrivateAccessChannelRequest: requests.DeletePrivateAccessChannelRequest): Promise<responses.DeletePrivateAccessChannelResponse>;
    /**
     * Allows deleting a previously created vanity url.
     *
     * @param DeleteVanityUrlRequest
     * @return DeleteVanityUrlResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/DeleteVanityUrl.ts.html |here} to see how to use DeleteVanityUrl API.
     */
    deleteVanityUrl(deleteVanityUrlRequest: requests.DeleteVanityUrlRequest): Promise<responses.DeleteVanityUrlResponse>;
    /**
     * Cancel a work request that has not started yet.
     *
     * @param DeleteWorkRequestRequest
     * @return DeleteWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/DeleteWorkRequest.ts.html |here} to see how to use DeleteWorkRequest API.
     */
    deleteWorkRequest(deleteWorkRequestRequest: requests.DeleteWorkRequestRequest): Promise<responses.DeleteWorkRequestResponse>;
    /**
     * Info for a specific Analytics instance.
     *
     * @param GetAnalyticsInstanceRequest
     * @return GetAnalyticsInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/GetAnalyticsInstance.ts.html |here} to see how to use GetAnalyticsInstance API.
     */
    getAnalyticsInstance(getAnalyticsInstanceRequest: requests.GetAnalyticsInstanceRequest): Promise<responses.GetAnalyticsInstanceResponse>;
    /**
     * Retrieve private access channel in the specified Analytics Instance.
     *
     * @param GetPrivateAccessChannelRequest
     * @return GetPrivateAccessChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/GetPrivateAccessChannel.ts.html |here} to see how to use GetPrivateAccessChannel API.
     */
    getPrivateAccessChannel(getPrivateAccessChannelRequest: requests.GetPrivateAccessChannelRequest): Promise<responses.GetPrivateAccessChannelResponse>;
    /**
     * Get the details of a work request.
     *
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * List Analytics instances.
     *
     * @param ListAnalyticsInstancesRequest
     * @return ListAnalyticsInstancesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/ListAnalyticsInstances.ts.html |here} to see how to use ListAnalyticsInstances API.
     */
    listAnalyticsInstances(listAnalyticsInstancesRequest: requests.ListAnalyticsInstancesRequest): Promise<responses.ListAnalyticsInstancesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AnalyticsInstanceSummary objects
     * contained in responses from the listAnalyticsInstances operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAnalyticsInstances(request: requests.ListAnalyticsInstancesRequest): AsyncIterableIterator<models.AnalyticsInstanceSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAnalyticsInstances operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAnalyticsInstancesResponses(request: requests.ListAnalyticsInstancesRequest): AsyncIterableIterator<responses.ListAnalyticsInstancesResponse>;
    /**
     * Get the errors of a work request.
     *
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestError objects
     * contained in responses from the listWorkRequestErrors operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrors(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<models.WorkRequestError>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestErrors operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrorsResponses(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<responses.ListWorkRequestErrorsResponse>;
    /**
     * Get the logs of a work request.
     *
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestLog objects
     * contained in responses from the listWorkRequestLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogs(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<models.WorkRequestLog>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogsResponses(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<responses.ListWorkRequestLogsResponse>;
    /**
     * List all work requests in a compartment.
     *
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequests(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<models.WorkRequestSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestsResponses(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Scale an Analytics instance up or down. The operation is long-running
     * and creates a new WorkRequest.
     *
     * @param ScaleAnalyticsInstanceRequest
     * @return ScaleAnalyticsInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/ScaleAnalyticsInstance.ts.html |here} to see how to use ScaleAnalyticsInstance API.
     */
    scaleAnalyticsInstance(scaleAnalyticsInstanceRequest: requests.ScaleAnalyticsInstanceRequest): Promise<responses.ScaleAnalyticsInstanceResponse>;
    /**
     * Starts the specified Analytics instance. The operation is long-running
     * and creates a new WorkRequest.
     *
     * @param StartAnalyticsInstanceRequest
     * @return StartAnalyticsInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/StartAnalyticsInstance.ts.html |here} to see how to use StartAnalyticsInstance API.
     */
    startAnalyticsInstance(startAnalyticsInstanceRequest: requests.StartAnalyticsInstanceRequest): Promise<responses.StartAnalyticsInstanceResponse>;
    /**
     * Stop the specified Analytics instance. The operation is long-running
     * and creates a new WorkRequest.
     *
     * @param StopAnalyticsInstanceRequest
     * @return StopAnalyticsInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/StopAnalyticsInstance.ts.html |here} to see how to use StopAnalyticsInstance API.
     */
    stopAnalyticsInstance(stopAnalyticsInstanceRequest: requests.StopAnalyticsInstanceRequest): Promise<responses.StopAnalyticsInstanceResponse>;
    /**
     * Updates certain fields of an Analytics instance. Fields that are not provided in the
     * request will not be updated.
     *
     * @param UpdateAnalyticsInstanceRequest
     * @return UpdateAnalyticsInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/UpdateAnalyticsInstance.ts.html |here} to see how to use UpdateAnalyticsInstance API.
     */
    updateAnalyticsInstance(updateAnalyticsInstanceRequest: requests.UpdateAnalyticsInstanceRequest): Promise<responses.UpdateAnalyticsInstanceResponse>;
    /**
     * Update the Private Access Channel with the given unique identifier key in the specified Analytics Instance.
     *
     * @param UpdatePrivateAccessChannelRequest
     * @return UpdatePrivateAccessChannelResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/UpdatePrivateAccessChannel.ts.html |here} to see how to use UpdatePrivateAccessChannel API.
     */
    updatePrivateAccessChannel(updatePrivateAccessChannelRequest: requests.UpdatePrivateAccessChannelRequest): Promise<responses.UpdatePrivateAccessChannelResponse>;
    /**
     * Allows uploading a new certificate for a vanity url, which will have to be done when the current certificate is expiring.
     *
     * @param UpdateVanityUrlRequest
     * @return UpdateVanityUrlResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/analytics/UpdateVanityUrl.ts.html |here} to see how to use UpdateVanityUrl API.
     */
    updateVanityUrl(updateVanityUrlRequest: requests.UpdateVanityUrlRequest): Promise<responses.UpdateVanityUrlResponse>;
}
