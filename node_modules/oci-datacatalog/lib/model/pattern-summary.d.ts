/**
 * Data Catalog API
 * Use the Data Catalog APIs to collect, organize, find, access, understand, enrich, and activate technical, business, and operational metadata.
 * OpenAPI spec version: 20190325
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary of a pattern. A Pattern is defined using an expression and can be used as data selectors or filters
 * to provide a singular view of an entity across multiple physical data artifacts.
 *
 */
export interface PatternSummary {
    /**
     * Unique pattern key that is immutable.
     */
    "key": string;
    /**
     * A user-friendly display name. Does not have to be unique, and it's changeable.
     * Avoid entering confidential information.
     *
     */
    "displayName"?: string;
    /**
     * Detailed description of the pattern.
     */
    "description"?: string;
    /**
     * The data catalog's OCID.
     */
    "catalogId"?: string;
    /**
     * The date and time the pattern was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * Example: `2019-03-25T21:10:29.600Z`
     *
     */
    "timeCreated"?: Date;
    /**
     * The expression used in the pattern that may include qualifiers.
     */
    "expression"?: string;
    /**
     * State of the pattern.
     */
    "lifecycleState"?: model.LifecycleState;
}
export declare namespace PatternSummary {
    function getJsonObj(obj: PatternSummary): object;
}
