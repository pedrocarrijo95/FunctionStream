"use strict";
/**
 * Data Catalog API
 * Use the Data Catalog APIs to collect, organize, find, access, understand, enrich, and activate technical, business, and operational metadata.
 * OpenAPI spec version: 20190325
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobExecutionState = void 0;
/**
 * Common execution states for jobs in data catalog.
 * CREATED     - Job has been created but yet to start execution. It will transition to IN_PROGRESS when resources are available for execution.
 * IN_PROGRESS - Job is currently executing.
 * INACTIVE    - Job has been paused by the worker. This could be due to resource contention or window management.
 * FAILED      - Job has failed due to errors during execution.
 * SUCCEEDED   - Job has successfully completed execution.
 * CANCELED    - Job has been aborted by the worker due to a user request.
 * SUCCEEDED_WITH_WARNINGS - Job has successfully completed execution with one or more warnings.
 *
 **/
var JobExecutionState;
(function (JobExecutionState) {
    JobExecutionState["Created"] = "CREATED";
    JobExecutionState["InProgress"] = "IN_PROGRESS";
    JobExecutionState["Inactive"] = "INACTIVE";
    JobExecutionState["Failed"] = "FAILED";
    JobExecutionState["Succeeded"] = "SUCCEEDED";
    JobExecutionState["Canceled"] = "CANCELED";
    JobExecutionState["SucceededWithWarnings"] = "SUCCEEDED_WITH_WARNINGS";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    JobExecutionState["UnknownValue"] = "UNKNOWN_VALUE";
})(JobExecutionState = exports.JobExecutionState || (exports.JobExecutionState = {}));
(function (JobExecutionState) {
    function getJsonObj(obj) {
        return { obj };
    }
    JobExecutionState.getJsonObj = getJsonObj;
})(JobExecutionState = exports.JobExecutionState || (exports.JobExecutionState = {}));
//# sourceMappingURL=job-execution-state.js.map