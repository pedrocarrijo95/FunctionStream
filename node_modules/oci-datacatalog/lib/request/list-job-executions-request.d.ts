/**
 *
 *
 * OpenAPI spec version: 20190325
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/datacatalog/ListJobExecutions.ts.html |here} to see how to use ListJobExecutionsRequest.
 */
export interface ListJobExecutionsRequest extends common.BaseRequest {
    /**
     * Unique catalog identifier.
     */
    "catalogId": string;
    /**
     * Unique job key.
     */
    "jobKey": string;
    /**
     * Job execution lifecycle state.
     */
    "lifecycleState"?: model.JobExecutionState;
    /**
     * Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    "timeCreated"?: Date;
    /**
     * Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    "timeUpdated"?: Date;
    /**
     * OCID of the user who created the resource.
     */
    "createdById"?: string;
    /**
     * OCID of the user who updated the resource.
     */
    "updatedById"?: string;
    /**
     * Job type.
     */
    "jobType"?: model.JobType;
    /**
     * Sub-type of this job execution.
     */
    "subType"?: string;
    /**
     * The unique key of the parent execution or null if this job execution has no parent.
     */
    "parentKey"?: string;
    /**
     * Time that the job execution was started or in the case of a future time, the time when the job will start.
     * An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     *
     */
    "timeStart"?: Date;
    /**
     * Time that the job execution ended or null if the job is still running or hasn't run yet.
     * An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     *
     */
    "timeEnd"?: Date;
    /**
     * Error code returned from the job execution or null if job is still running or didn't return an error.
     *
     */
    "errorCode"?: string;
    /**
     * Error message returned from the job execution or null if job is still running or didn't return an error.
     *
     */
    "errorMessage"?: string;
    /**
     * Process identifier related to the job execution.
     */
    "processKey"?: string;
    /**
     * The a URL of the job for accessing this resource and its status.
     */
    "externalUrl"?: string;
    /**
     * Event that triggered the execution of this job or null.
     */
    "eventKey"?: string;
    /**
     * Unique entity key.
     */
    "dataEntityKey"?: string;
    /**
     * Specifies the fields to return in a job execution summary response.
     *
     */
    "fields"?: Array<ListJobExecutionsRequest.Fields>;
    /**
     * The field to sort by. Only one sort order may be provided. Default order for TIMECREATED is descending. Default order for DISPLAYNAME is ascending. If no value is specified TIMECREATED is default.
     *
     */
    "sortBy"?: ListJobExecutionsRequest.SortBy;
    /**
     * The sort order to use, either 'asc' or 'desc'.
     */
    "sortOrder"?: ListJobExecutionsRequest.SortOrder;
    /**
     * The maximum number of items to return.
     */
    "limit"?: number;
    /**
     * The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.
     */
    "page"?: string;
    /**
     * The client request ID for tracing.
     */
    "opcRequestId"?: string;
}
export declare namespace ListJobExecutionsRequest {
    enum Fields {
        Key = "key",
        JobKey = "jobKey",
        JobType = "jobType",
        ParentKey = "parentKey",
        ScheduleInstanceKey = "scheduleInstanceKey",
        LifecycleState = "lifecycleState",
        TimeCreated = "timeCreated",
        TimeStarted = "timeStarted",
        TimeEnded = "timeEnded",
        Uri = "uri"
    }
    enum SortBy {
        Timecreated = "TIMECREATED",
        Displayname = "DISPLAYNAME"
    }
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
}
