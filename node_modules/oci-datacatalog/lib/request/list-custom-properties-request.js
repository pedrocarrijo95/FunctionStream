"use strict";
/**
 *
 *
 * OpenAPI spec version: 20190325
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListCustomPropertiesRequest = void 0;
var ListCustomPropertiesRequest;
(function (ListCustomPropertiesRequest) {
    let TypeName;
    (function (TypeName) {
        TypeName["DataAsset"] = "DATA_ASSET";
        TypeName["AutonomousDataWarehouse"] = "AUTONOMOUS_DATA_WAREHOUSE";
        TypeName["Hive"] = "HIVE";
        TypeName["Kafka"] = "KAFKA";
        TypeName["Mysql"] = "MYSQL";
        TypeName["OracleObjectStorage"] = "ORACLE_OBJECT_STORAGE";
        TypeName["AutonomousTransactionProcessing"] = "AUTONOMOUS_TRANSACTION_PROCESSING";
        TypeName["Oracle"] = "ORACLE";
        TypeName["Postgresql"] = "POSTGRESQL";
        TypeName["MicrosoftAzureSqlDatabase"] = "MICROSOFT_AZURE_SQL_DATABASE";
        TypeName["MicrosoftSqlServer"] = "MICROSOFT_SQL_SERVER";
        TypeName["IbmDb2"] = "IBM_DB2";
        TypeName["DataEntity"] = "DATA_ENTITY";
        TypeName["LogicalEntity"] = "LOGICAL_ENTITY";
        TypeName["Table"] = "TABLE";
        TypeName["View"] = "VIEW";
        TypeName["Attribute"] = "ATTRIBUTE";
        TypeName["Folder"] = "FOLDER";
        TypeName["Connection"] = "CONNECTION";
        TypeName["Glossary"] = "GLOSSARY";
        TypeName["Term"] = "TERM";
        TypeName["Category"] = "CATEGORY";
        TypeName["File"] = "FILE";
        TypeName["Bucket"] = "BUCKET";
        TypeName["Message"] = "MESSAGE";
        TypeName["UnrecognizedFile"] = "UNRECOGNIZED_FILE";
    })(TypeName = ListCustomPropertiesRequest.TypeName || (ListCustomPropertiesRequest.TypeName = {}));
    let Fields;
    (function (Fields) {
        Fields["Key"] = "key";
        Fields["DisplayName"] = "displayName";
        Fields["Description"] = "description";
        Fields["DataType"] = "dataType";
        Fields["NamespaceName"] = "namespaceName";
        Fields["LifecycleState"] = "lifecycleState";
        Fields["TimeCreated"] = "timeCreated";
    })(Fields = ListCustomPropertiesRequest.Fields || (ListCustomPropertiesRequest.Fields = {}));
    let SortOrder;
    (function (SortOrder) {
        SortOrder["Asc"] = "ASC";
        SortOrder["Desc"] = "DESC";
    })(SortOrder = ListCustomPropertiesRequest.SortOrder || (ListCustomPropertiesRequest.SortOrder = {}));
    let SortBy;
    (function (SortBy) {
        SortBy["Displayname"] = "DISPLAYNAME";
        SortBy["Usagecount"] = "USAGECOUNT";
    })(SortBy = ListCustomPropertiesRequest.SortBy || (ListCustomPropertiesRequest.SortBy = {}));
})(ListCustomPropertiesRequest = exports.ListCustomPropertiesRequest || (exports.ListCustomPropertiesRequest = {}));
//# sourceMappingURL=list-custom-properties-request.js.map