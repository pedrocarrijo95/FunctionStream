/**
 *
 *
 * OpenAPI spec version: 20190325
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
/**
 * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/datacatalog/GetAttribute.ts.html |here} to see how to use GetAttributeRequest.
 */
export interface GetAttributeRequest extends common.BaseRequest {
    /**
     * Unique catalog identifier.
     */
    "catalogId": string;
    /**
     * Unique data asset key.
     */
    "dataAssetKey": string;
    /**
     * Unique entity key.
     */
    "entityKey": string;
    /**
     * Unique attribute key.
     */
    "attributeKey": string;
    /**
     * Specifies the fields to return in an entity attribute response.
     *
     */
    "fields"?: Array<GetAttributeRequest.Fields>;
    /**
     * The client request ID for tracing.
     */
    "opcRequestId"?: string;
}
export declare namespace GetAttributeRequest {
    enum Fields {
        Key = "key",
        DisplayName = "displayName",
        Description = "description",
        EntityKey = "entityKey",
        LifecycleState = "lifecycleState",
        TimeCreated = "timeCreated",
        TimeUpdated = "timeUpdated",
        CreatedById = "createdById",
        UpdatedById = "updatedById",
        ExternalDataType = "externalDataType",
        ExternalKey = "externalKey",
        IsIncrementalData = "isIncrementalData",
        IsNullable = "isNullable",
        Length = "length",
        Position = "position",
        Precision = "precision",
        Scale = "scale",
        TimeExternal = "timeExternal",
        Uri = "uri",
        Properties = "properties",
        Path = "path",
        MinCollectionCount = "minCollectionCount",
        MaxCollectionCount = "maxCollectionCount",
        DatatypeEntityKey = "datatypeEntityKey",
        ExternalDatatypeEntityKey = "externalDatatypeEntityKey",
        ParentAttributeKey = "parentAttributeKey",
        ExternalParentAttributeKey = "externalParentAttributeKey"
    }
}
