/**
 * Digital Assistant Service Instance API
 * API to create and maintain Oracle Digital Assistant service instances.
 * OpenAPI spec version: 20190506
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Description of `OdaServiceInstance` object.
 */
export interface OdaInstance {
    /**
     * Unique immutable identifier that was assigned when the instance was created.
     */
    "id": string;
    /**
     * User-defined name for the Digital Assistant instance. Avoid entering confidential information.
     * You can change this value.
     *
     */
    "displayName"?: string;
    /**
     * Description of the Digital Assistant instance.
     */
    "description"?: string;
    /**
     * Identifier of the compartment that the instance belongs to.
     */
    "compartmentId": string;
    /**
     * Shape or size of the instance.
     */
    "shapeName": OdaInstance.ShapeName;
    /**
     * URL for the Digital Assistant web application that's associated with the instance.
     */
    "webAppUrl"?: string;
    /**
     * URL for the connector's endpoint.
     */
    "connectorUrl"?: string;
    /**
     * When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    "timeCreated"?: Date;
    /**
     * When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the Digital Assistant instance.
     */
    "lifecycleState"?: OdaInstance.LifecycleState;
    /**
     * The current sub-state of the Digital Assistant instance.
     */
    "lifecycleSubState"?: OdaInstance.LifecycleSubState;
    /**
     * A message that describes the current state in more detail.
     * For example, actionable information about an instance that's in the `FAILED` state.
     *
     */
    "stateMessage"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope.
     * Example: `{\"bar-key\": \"value\"}`
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces.
     * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace OdaInstance {
    enum ShapeName {
        Development = "DEVELOPMENT",
        Production = "PRODUCTION",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleSubState {
        Creating = "CREATING",
        Starting = "STARTING",
        Stopping = "STOPPING",
        ChangingCompartment = "CHANGING_COMPARTMENT",
        Deleting = "DELETING",
        DeletePending = "DELETE_PENDING",
        Recovering = "RECOVERING",
        Purging = "PURGING",
        Queued = "QUEUED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: OdaInstance): object;
}
