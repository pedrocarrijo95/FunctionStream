/**
 * Digital Assistant Service Instance API
 * API to create and maintain Oracle Digital Assistant service instances.
 * OpenAPI spec version: 20190506
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The description of work request, including its status.
 */
export interface WorkRequest {
    /**
     * The identifier of the work request.
     */
    "id": string;
    /**
     * The identifier of the compartment that contains the work request.
     */
    "compartmentId": string;
    /**
     * The identifier of the Digital Assistant instance to which this work request pertains.
     */
    "odaInstanceId": string;
    /**
     * The type of the operation that's associated with the work request.
     */
    "requestAction": WorkRequest.RequestAction;
    /**
     * The status of current work request.
     */
    "status": WorkRequest.Status;
    /**
     * A short message that provides more detail about the current status.
     * For example, if a work request fails, then this may include information
     * about why it failed.
     *
     */
    "statusMessage"?: string;
    /**
     * The resources that this work request affects.
     */
    "resources": Array<model.WorkRequestResource>;
    /**
     * Percentage of the request completed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "percentComplete": number;
    /**
     * The date and time that the request was created, as described in
     * [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     *
     */
    "timeAccepted": Date;
    /**
     * The date and time that the request was started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), CKQ
     * section 14.29.
     *
     */
    "timeStarted"?: Date;
    /**
     * The date and time that the object finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339). CKQ
     *
     */
    "timeFinished"?: Date;
}
export declare namespace WorkRequest {
    enum RequestAction {
        CreateOdaInstance = "CREATE_ODA_INSTANCE",
        UpgradeOdaInstance = "UPGRADE_ODA_INSTANCE",
        DeleteOdaInstance = "DELETE_ODA_INSTANCE",
        PurgeOdaInstance = "PURGE_ODA_INSTANCE",
        RecoverOdaInstance = "RECOVER_ODA_INSTANCE",
        StopOdaInstance = "STOP_ODA_INSTANCE",
        StartOdaInstance = "START_ODA_INSTANCE",
        ChangeOdaInstanceCompartment = "CHANGE_ODA_INSTANCE_COMPARTMENT",
        CreateAssociation = "CREATE_ASSOCIATION",
        DeleteAssociation = "DELETE_ASSOCIATION",
        UpdateEntitlementsForCacct = "UPDATE_ENTITLEMENTS_FOR_CACCT",
        LookupOdaInstancesForCacct = "LOOKUP_ODA_INSTANCES_FOR_CACCT",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Status {
        Accepted = "ACCEPTED",
        InProgress = "IN_PROGRESS",
        Succeeded = "SUCCEEDED",
        Failed = "FAILED",
        Canceling = "CANCELING",
        Canceled = "CANCELED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: WorkRequest): object;
}
