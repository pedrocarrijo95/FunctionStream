"use strict";
/**
 * Service Connector Hub API
 * Use the Service Connector Hub API to transfer data between services in Oracle Cloud Infrastructure.
For more information about Service Connector Hub, see
[Service Connector Hub Overview](/iaas/Content/service-connector-hub/overview.htm).

 * OpenAPI spec version: 20200909
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrimHorizonStreamingCursor = exports.StreamingTargetDetails = exports.StreamingSourceDetails = exports.ObjectStorageTargetDetails = exports.NotificationsTargetDetails = exports.MonitoringTargetDetails = exports.LoggingSourceDetails = exports.LoggingAnalyticsTargetDetails = exports.LogRuleTaskDetails = exports.LatestStreamingCursor = exports.FunctionsTargetDetails = exports.FunctionTaskDetails = exports.WorkRequestResource = exports.WorkRequestLogEntryCollection = exports.WorkRequestLogEntry = exports.WorkRequestErrorCollection = exports.WorkRequestError = exports.WorkRequestCollection = exports.WorkRequest = exports.UpdateServiceConnectorDetails = exports.TaskDetails = exports.TargetDetails = exports.StreamingCursorDetails = exports.SourceDetails = exports.SortOrder = exports.ServiceConnectorSummary = exports.ServiceConnectorCollection = exports.ServiceConnector = exports.OperationType = exports.OperationStatus = exports.LogSource = exports.LifecycleState = exports.CreateServiceConnectorDetails = exports.ChangeServiceConnectorCompartmentDetails = exports.ActionType = void 0;
const ActionType = __importStar(require("./action-type"));
exports.ActionType = ActionType.ActionType;
const ChangeServiceConnectorCompartmentDetails = __importStar(require("./change-service-connector-compartment-details"));
exports.ChangeServiceConnectorCompartmentDetails = ChangeServiceConnectorCompartmentDetails.ChangeServiceConnectorCompartmentDetails;
const CreateServiceConnectorDetails = __importStar(require("./create-service-connector-details"));
exports.CreateServiceConnectorDetails = CreateServiceConnectorDetails.CreateServiceConnectorDetails;
const LifecycleState = __importStar(require("./lifecycle-state"));
exports.LifecycleState = LifecycleState.LifecycleState;
const LogSource = __importStar(require("./log-source"));
exports.LogSource = LogSource.LogSource;
const OperationStatus = __importStar(require("./operation-status"));
exports.OperationStatus = OperationStatus.OperationStatus;
const OperationType = __importStar(require("./operation-type"));
exports.OperationType = OperationType.OperationType;
const ServiceConnector = __importStar(require("./service-connector"));
exports.ServiceConnector = ServiceConnector.ServiceConnector;
const ServiceConnectorCollection = __importStar(require("./service-connector-collection"));
exports.ServiceConnectorCollection = ServiceConnectorCollection.ServiceConnectorCollection;
const ServiceConnectorSummary = __importStar(require("./service-connector-summary"));
exports.ServiceConnectorSummary = ServiceConnectorSummary.ServiceConnectorSummary;
const SortOrder = __importStar(require("./sort-order"));
exports.SortOrder = SortOrder.SortOrder;
const SourceDetails = __importStar(require("./source-details"));
exports.SourceDetails = SourceDetails.SourceDetails;
const StreamingCursorDetails = __importStar(require("./streaming-cursor-details"));
exports.StreamingCursorDetails = StreamingCursorDetails.StreamingCursorDetails;
const TargetDetails = __importStar(require("./target-details"));
exports.TargetDetails = TargetDetails.TargetDetails;
const TaskDetails = __importStar(require("./task-details"));
exports.TaskDetails = TaskDetails.TaskDetails;
const UpdateServiceConnectorDetails = __importStar(require("./update-service-connector-details"));
exports.UpdateServiceConnectorDetails = UpdateServiceConnectorDetails.UpdateServiceConnectorDetails;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestCollection = __importStar(require("./work-request-collection"));
exports.WorkRequestCollection = WorkRequestCollection.WorkRequestCollection;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestErrorCollection = __importStar(require("./work-request-error-collection"));
exports.WorkRequestErrorCollection = WorkRequestErrorCollection.WorkRequestErrorCollection;
const WorkRequestLogEntry = __importStar(require("./work-request-log-entry"));
exports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
const WorkRequestLogEntryCollection = __importStar(require("./work-request-log-entry-collection"));
exports.WorkRequestLogEntryCollection = WorkRequestLogEntryCollection.WorkRequestLogEntryCollection;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
const FunctionTaskDetails = __importStar(require("./function-task-details"));
exports.FunctionTaskDetails = FunctionTaskDetails.FunctionTaskDetails;
const FunctionsTargetDetails = __importStar(require("./functions-target-details"));
exports.FunctionsTargetDetails = FunctionsTargetDetails.FunctionsTargetDetails;
const LatestStreamingCursor = __importStar(require("./latest-streaming-cursor"));
exports.LatestStreamingCursor = LatestStreamingCursor.LatestStreamingCursor;
const LogRuleTaskDetails = __importStar(require("./log-rule-task-details"));
exports.LogRuleTaskDetails = LogRuleTaskDetails.LogRuleTaskDetails;
const LoggingAnalyticsTargetDetails = __importStar(require("./logging-analytics-target-details"));
exports.LoggingAnalyticsTargetDetails = LoggingAnalyticsTargetDetails.LoggingAnalyticsTargetDetails;
const LoggingSourceDetails = __importStar(require("./logging-source-details"));
exports.LoggingSourceDetails = LoggingSourceDetails.LoggingSourceDetails;
const MonitoringTargetDetails = __importStar(require("./monitoring-target-details"));
exports.MonitoringTargetDetails = MonitoringTargetDetails.MonitoringTargetDetails;
const NotificationsTargetDetails = __importStar(require("./notifications-target-details"));
exports.NotificationsTargetDetails = NotificationsTargetDetails.NotificationsTargetDetails;
const ObjectStorageTargetDetails = __importStar(require("./object-storage-target-details"));
exports.ObjectStorageTargetDetails = ObjectStorageTargetDetails.ObjectStorageTargetDetails;
const StreamingSourceDetails = __importStar(require("./streaming-source-details"));
exports.StreamingSourceDetails = StreamingSourceDetails.StreamingSourceDetails;
const StreamingTargetDetails = __importStar(require("./streaming-target-details"));
exports.StreamingTargetDetails = StreamingTargetDetails.StreamingTargetDetails;
const TrimHorizonStreamingCursor = __importStar(require("./trim-horizon-streaming-cursor"));
exports.TrimHorizonStreamingCursor = TrimHorizonStreamingCursor.TrimHorizonStreamingCursor;
//# sourceMappingURL=index.js.map