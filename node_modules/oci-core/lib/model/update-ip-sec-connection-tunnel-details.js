"use strict";
/**
 * Core Services API
 * API covering the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services. Use this API
to manage resources such as virtual cloud networks (VCNs), compute instances, and
block storage volumes.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateIPSecConnectionTunnelDetails = void 0;
const model = __importStar(require("../model"));
var UpdateIPSecConnectionTunnelDetails;
(function (UpdateIPSecConnectionTunnelDetails) {
    let Routing;
    (function (Routing) {
        Routing["Bgp"] = "BGP";
        Routing["Static"] = "STATIC";
        Routing["Policy"] = "POLICY";
    })(Routing = UpdateIPSecConnectionTunnelDetails.Routing || (UpdateIPSecConnectionTunnelDetails.Routing = {}));
    let IkeVersion;
    (function (IkeVersion) {
        IkeVersion["V1"] = "V1";
        IkeVersion["V2"] = "V2";
    })(IkeVersion = UpdateIPSecConnectionTunnelDetails.IkeVersion || (UpdateIPSecConnectionTunnelDetails.IkeVersion = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "bgpSessionConfig": obj.bgpSessionConfig
                ? model.UpdateIPSecTunnelBgpSessionDetails.getJsonObj(obj.bgpSessionConfig)
                : undefined,
            "encryptionDomainConfig": obj.encryptionDomainConfig
                ? model.UpdateIPSecTunnelEncryptionDomainDetails.getJsonObj(obj.encryptionDomainConfig)
                : undefined
        });
        return jsonObj;
    }
    UpdateIPSecConnectionTunnelDetails.getJsonObj = getJsonObj;
})(UpdateIPSecConnectionTunnelDetails = exports.UpdateIPSecConnectionTunnelDetails || (exports.UpdateIPSecConnectionTunnelDetails = {}));
//# sourceMappingURL=update-ip-sec-connection-tunnel-details.js.map