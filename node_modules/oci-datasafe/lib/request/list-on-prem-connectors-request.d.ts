/**
 *
 *
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
import common = require("oci-common");
/**
 * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/datasafe/ListOnPremConnectors.ts.html |here} to see how to use ListOnPremConnectorsRequest.
 */
export interface ListOnPremConnectorsRequest extends common.BaseRequest {
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    "compartmentId": string;
    /**
     * A filter to return only the on-premises connector that matches the specified id.
     */
    "onPremConnectorId"?: string;
    /**
     * A filter to return only resources that match the specified display name.
     *
     */
    "displayName"?: string;
    /**
     * A filter to return only on-premises connector resources that match the specified lifecycle state.
     */
    "onPremConnectorLifecycleState"?: model.OnPremConnectorLifecycleState;
    /**
     * For list pagination. The maximum number of items to return per page in a paginated \"List\" call. For details about how pagination works, see [List Pagination](https://docs.cloud.oracle.com/en-us/iaas/Content/API/Concepts/usingapi.htm#nine).
     */
    "limit"?: number;
    /**
     * For list pagination. The page token representing the page at which to start retrieving results. It is usually retrieved from a previous \"List\" call. For details about how pagination works, see [List Pagination](https://docs.cloud.oracle.com/en-us/iaas/Content/API/Concepts/usingapi.htm#nine).
     */
    "page"?: string;
    /**
     * The sort order to use, either ascending (ASC) or descending (DESC).
     */
    "sortOrder"?: ListOnPremConnectorsRequest.SortOrder;
    /**
     * The field to sort by. You can specify only one sort order (sortOrder). The default order for TIMECREATED is descending. The default order for DISPLAYNAME is ascending. The DISPLAYNAME sort order is case sensitive.
     *
     */
    "sortBy"?: ListOnPremConnectorsRequest.SortBy;
    /**
     * Unique identifier for the request.
     */
    "opcRequestId"?: string;
}
export declare namespace ListOnPremConnectorsRequest {
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
    enum SortBy {
        Timecreated = "TIMECREATED",
        Displayname = "DISPLAYNAME"
    }
}
