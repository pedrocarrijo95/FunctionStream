"use strict";
/**
 * Big Data Service API
 * API for the Big Data Service. Use this API to build, deploy, and manage fully elastic Big Data Service
build on Hadoop, Spark and Data Science distribution, which can be fully integrated with existing enterprise
data in Oracle Database and Oracle Applications..

 * OpenAPI spec version: 20190531
 * Contact: rahul.ra.arora@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkRequestResource = exports.WorkRequestLogEntry = exports.WorkRequestError = exports.WorkRequest = exports.VolumeAttachmentDetail = exports.UpdateBdsInstanceDetails = exports.UpdateAutoScalingConfigurationDetails = exports.SortOrders = exports.RestartNodeDetails = exports.RemoveCloudSqlDetails = exports.RemoveAutoScalingConfigurationDetails = exports.OperationTypes = exports.OperationStatus = exports.Node = exports.NetworkConfig = exports.MetricThresholdRule = exports.KerberosDetails = exports.DefaultError = exports.CreateNodeDetails = exports.CreateBdsInstanceDetails = exports.ClusterDetails = exports.CloudSqlDetails = exports.ChangeShapeNodes = exports.ChangeShapeDetails = exports.ChangeBdsInstanceCompartmentDetails = exports.BdsInstanceSummary = exports.BdsInstance = exports.AutoScalingConfigurationSummary = exports.AutoScalingConfiguration = exports.AutoScalePolicyRule = exports.AutoScalePolicyMetricRule = exports.AutoScalePolicy = exports.AddWorkerNodesDetails = exports.AddCloudSqlDetails = exports.AddBlockStorageDetails = exports.AddAutoScalingConfigurationDetails = exports.ActionTypes = void 0;
const ActionTypes = __importStar(require("./action-types"));
exports.ActionTypes = ActionTypes.ActionTypes;
const AddAutoScalingConfigurationDetails = __importStar(require("./add-auto-scaling-configuration-details"));
exports.AddAutoScalingConfigurationDetails = AddAutoScalingConfigurationDetails.AddAutoScalingConfigurationDetails;
const AddBlockStorageDetails = __importStar(require("./add-block-storage-details"));
exports.AddBlockStorageDetails = AddBlockStorageDetails.AddBlockStorageDetails;
const AddCloudSqlDetails = __importStar(require("./add-cloud-sql-details"));
exports.AddCloudSqlDetails = AddCloudSqlDetails.AddCloudSqlDetails;
const AddWorkerNodesDetails = __importStar(require("./add-worker-nodes-details"));
exports.AddWorkerNodesDetails = AddWorkerNodesDetails.AddWorkerNodesDetails;
const AutoScalePolicy = __importStar(require("./auto-scale-policy"));
exports.AutoScalePolicy = AutoScalePolicy.AutoScalePolicy;
const AutoScalePolicyMetricRule = __importStar(require("./auto-scale-policy-metric-rule"));
exports.AutoScalePolicyMetricRule = AutoScalePolicyMetricRule.AutoScalePolicyMetricRule;
const AutoScalePolicyRule = __importStar(require("./auto-scale-policy-rule"));
exports.AutoScalePolicyRule = AutoScalePolicyRule.AutoScalePolicyRule;
const AutoScalingConfiguration = __importStar(require("./auto-scaling-configuration"));
exports.AutoScalingConfiguration = AutoScalingConfiguration.AutoScalingConfiguration;
const AutoScalingConfigurationSummary = __importStar(require("./auto-scaling-configuration-summary"));
exports.AutoScalingConfigurationSummary = AutoScalingConfigurationSummary.AutoScalingConfigurationSummary;
const BdsInstance = __importStar(require("./bds-instance"));
exports.BdsInstance = BdsInstance.BdsInstance;
const BdsInstanceSummary = __importStar(require("./bds-instance-summary"));
exports.BdsInstanceSummary = BdsInstanceSummary.BdsInstanceSummary;
const ChangeBdsInstanceCompartmentDetails = __importStar(require("./change-bds-instance-compartment-details"));
exports.ChangeBdsInstanceCompartmentDetails = ChangeBdsInstanceCompartmentDetails.ChangeBdsInstanceCompartmentDetails;
const ChangeShapeDetails = __importStar(require("./change-shape-details"));
exports.ChangeShapeDetails = ChangeShapeDetails.ChangeShapeDetails;
const ChangeShapeNodes = __importStar(require("./change-shape-nodes"));
exports.ChangeShapeNodes = ChangeShapeNodes.ChangeShapeNodes;
const CloudSqlDetails = __importStar(require("./cloud-sql-details"));
exports.CloudSqlDetails = CloudSqlDetails.CloudSqlDetails;
const ClusterDetails = __importStar(require("./cluster-details"));
exports.ClusterDetails = ClusterDetails.ClusterDetails;
const CreateBdsInstanceDetails = __importStar(require("./create-bds-instance-details"));
exports.CreateBdsInstanceDetails = CreateBdsInstanceDetails.CreateBdsInstanceDetails;
const CreateNodeDetails = __importStar(require("./create-node-details"));
exports.CreateNodeDetails = CreateNodeDetails.CreateNodeDetails;
const DefaultError = __importStar(require("./default-error"));
exports.DefaultError = DefaultError.DefaultError;
const KerberosDetails = __importStar(require("./kerberos-details"));
exports.KerberosDetails = KerberosDetails.KerberosDetails;
const MetricThresholdRule = __importStar(require("./metric-threshold-rule"));
exports.MetricThresholdRule = MetricThresholdRule.MetricThresholdRule;
const NetworkConfig = __importStar(require("./network-config"));
exports.NetworkConfig = NetworkConfig.NetworkConfig;
const Node = __importStar(require("./node"));
exports.Node = Node.Node;
const OperationStatus = __importStar(require("./operation-status"));
exports.OperationStatus = OperationStatus.OperationStatus;
const OperationTypes = __importStar(require("./operation-types"));
exports.OperationTypes = OperationTypes.OperationTypes;
const RemoveAutoScalingConfigurationDetails = __importStar(require("./remove-auto-scaling-configuration-details"));
exports.RemoveAutoScalingConfigurationDetails = RemoveAutoScalingConfigurationDetails.RemoveAutoScalingConfigurationDetails;
const RemoveCloudSqlDetails = __importStar(require("./remove-cloud-sql-details"));
exports.RemoveCloudSqlDetails = RemoveCloudSqlDetails.RemoveCloudSqlDetails;
const RestartNodeDetails = __importStar(require("./restart-node-details"));
exports.RestartNodeDetails = RestartNodeDetails.RestartNodeDetails;
const SortOrders = __importStar(require("./sort-orders"));
exports.SortOrders = SortOrders.SortOrders;
const UpdateAutoScalingConfigurationDetails = __importStar(require("./update-auto-scaling-configuration-details"));
exports.UpdateAutoScalingConfigurationDetails = UpdateAutoScalingConfigurationDetails.UpdateAutoScalingConfigurationDetails;
const UpdateBdsInstanceDetails = __importStar(require("./update-bds-instance-details"));
exports.UpdateBdsInstanceDetails = UpdateBdsInstanceDetails.UpdateBdsInstanceDetails;
const VolumeAttachmentDetail = __importStar(require("./volume-attachment-detail"));
exports.VolumeAttachmentDetail = VolumeAttachmentDetail.VolumeAttachmentDetail;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestLogEntry = __importStar(require("./work-request-log-entry"));
exports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
//# sourceMappingURL=index.js.map