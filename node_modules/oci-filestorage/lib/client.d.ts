/**
 * File Storage API
 * API for the File Storage service. Use this API to manage file systems, mount targets, and snapshots. For more information, see [Overview of File Storage](/iaas/Content/File/Concepts/filestorageoverview.htm).

 * OpenAPI spec version: 20171215
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { FileStorageWaiter } from "./filestorage-waiter";
export declare enum FileStorageApiKeys {
}
export declare class FileStorageClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": FileStorageWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new FileStorageWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): FileStorageWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): FileStorageWaiter;
    /**
     * Moves a file system and its associated snapshots into a different compartment within the same tenancy. For information about moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes)
     *
     * @param ChangeFileSystemCompartmentRequest
     * @return ChangeFileSystemCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/ChangeFileSystemCompartment.ts.html |here} to see how to use ChangeFileSystemCompartment API.
     */
    changeFileSystemCompartment(changeFileSystemCompartmentRequest: requests.ChangeFileSystemCompartmentRequest): Promise<responses.ChangeFileSystemCompartmentResponse>;
    /**
     * Moves a mount target and its associated export set into a different compartment within the same tenancy. For information about moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes)
     *
     * @param ChangeMountTargetCompartmentRequest
     * @return ChangeMountTargetCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/ChangeMountTargetCompartment.ts.html |here} to see how to use ChangeMountTargetCompartment API.
     */
    changeMountTargetCompartment(changeMountTargetCompartmentRequest: requests.ChangeMountTargetCompartmentRequest): Promise<responses.ChangeMountTargetCompartmentResponse>;
    /**
     * Creates a new export in the specified export set, path, and
     * file system.
     *
     * @param CreateExportRequest
     * @return CreateExportResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/CreateExport.ts.html |here} to see how to use CreateExport API.
     */
    createExport(createExportRequest: requests.CreateExportRequest): Promise<responses.CreateExportResponse>;
    /**
       * Creates a new file system in the specified compartment and
  * availability domain. Instances can mount file systems in
  * another availability domain, but doing so might increase
  * latency when compared to mounting instances in the same
  * availability domain.
  * <p>
  After you create a file system, you can associate it with a mount
  * target. Instances can then mount the file system by connecting to the
  * mount target's IP address. You can associate a file system with
  * more than one mount target at a time.
  * <p>
  For information about access control and compartments, see
  * [Overview of the IAM Service](https://docs.cloud.oracle.com/Content/Identity/Concepts/overview.htm).
  * <p>
  For information about Network Security Groups access control, see
  * [Network Security Groups](https://docs.cloud.oracle.com/Content/Network/Concepts/networksecuritygroups.htm).
  * <p>
  For information about availability domains, see [Regions and
  * Availability Domains](https://docs.cloud.oracle.com/Content/General/Concepts/regions.htm).
  * To get a list of availability domains, use the
  * `ListAvailabilityDomains` operation in the Identity and Access
  * Management Service API.
  * <p>
  All Oracle Cloud Infrastructure resources, including
  * file systems, get an Oracle-assigned, unique ID called an Oracle
  * Cloud Identifier ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)).
  * When you create a resource, you can find its OCID in the response.
  * You can also retrieve a resource's OCID by using a List API operation on that resource
  * type or by viewing the resource in the Console.
  *
       * @param CreateFileSystemRequest
       * @return CreateFileSystemResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/CreateFileSystem.ts.html |here} to see how to use CreateFileSystem API.
       */
    createFileSystem(createFileSystemRequest: requests.CreateFileSystemRequest): Promise<responses.CreateFileSystemResponse>;
    /**
       * Creates a new mount target in the specified compartment and
  * subnet. You can associate a file system with a mount
  * target only when they exist in the same availability domain. Instances
  * can connect to mount targets in another availablity domain, but
  * you might see higher latency than with instances in the same
  * availability domain as the mount target.
  * <p>
  Mount targets have one or more private IP addresses that you can
  * provide as the host portion of remote target parameters in
  * client mount commands. These private IP addresses are listed
  * in the privateIpIds property of the mount target and are highly available. Mount
  * targets also consume additional IP addresses in their subnet.
  * Do not use /30 or smaller subnets for mount target creation because they
  * do not have sufficient available IP addresses.
  * Allow at least three IP addresses for each mount target.
  * <p>
  For information about access control and compartments, see
  * [Overview of the IAM
  * Service](https://docs.cloud.oracle.com/Content/Identity/Concepts/overview.htm).
  * <p>
  For information about availability domains, see [Regions and
  * Availability Domains](https://docs.cloud.oracle.com/Content/General/Concepts/regions.htm).
  * To get a list of availability domains, use the
  * `ListAvailabilityDomains` operation in the Identity and Access
  * Management Service API.
  * <p>
  All Oracle Cloud Infrastructure Services resources, including
  * mount targets, get an Oracle-assigned, unique ID called an
  * Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)).
  * When you create a resource, you can find its OCID in the response.
  * You can also retrieve a resource's OCID by using a List API operation on that resource
  * type, or by viewing the resource in the Console.
  *
       * @param CreateMountTargetRequest
       * @return CreateMountTargetResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/CreateMountTarget.ts.html |here} to see how to use CreateMountTarget API.
       */
    createMountTarget(createMountTargetRequest: requests.CreateMountTargetRequest): Promise<responses.CreateMountTargetResponse>;
    /**
     * Creates a new snapshot of the specified file system. You
     * can access the snapshot at `.snapshot/<name>`.
     *
     * @param CreateSnapshotRequest
     * @return CreateSnapshotResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/CreateSnapshot.ts.html |here} to see how to use CreateSnapshot API.
     */
    createSnapshot(createSnapshotRequest: requests.CreateSnapshotRequest): Promise<responses.CreateSnapshotResponse>;
    /**
     * Deletes the specified export.
     *
     * @param DeleteExportRequest
     * @return DeleteExportResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/DeleteExport.ts.html |here} to see how to use DeleteExport API.
     */
    deleteExport(deleteExportRequest: requests.DeleteExportRequest): Promise<responses.DeleteExportResponse>;
    /**
     * Deletes the specified file system. Before you delete the file system,
     * verify that no remaining export resources still reference it. Deleting a
     * file system also deletes all of its snapshots.
     *
     * @param DeleteFileSystemRequest
     * @return DeleteFileSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/DeleteFileSystem.ts.html |here} to see how to use DeleteFileSystem API.
     */
    deleteFileSystem(deleteFileSystemRequest: requests.DeleteFileSystemRequest): Promise<responses.DeleteFileSystemResponse>;
    /**
     * Deletes the specified mount target. This operation also deletes the
     * mount target's VNICs.
     *
     * @param DeleteMountTargetRequest
     * @return DeleteMountTargetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/DeleteMountTarget.ts.html |here} to see how to use DeleteMountTarget API.
     */
    deleteMountTarget(deleteMountTargetRequest: requests.DeleteMountTargetRequest): Promise<responses.DeleteMountTargetResponse>;
    /**
     * Deletes the specified snapshot.
     *
     * @param DeleteSnapshotRequest
     * @return DeleteSnapshotResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/DeleteSnapshot.ts.html |here} to see how to use DeleteSnapshot API.
     */
    deleteSnapshot(deleteSnapshotRequest: requests.DeleteSnapshotRequest): Promise<responses.DeleteSnapshotResponse>;
    /**
     * Gets the specified export's information.
     * @param GetExportRequest
     * @return GetExportResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/GetExport.ts.html |here} to see how to use GetExport API.
     */
    getExport(getExportRequest: requests.GetExportRequest): Promise<responses.GetExportResponse>;
    /**
     * Gets the specified export set's information.
     * @param GetExportSetRequest
     * @return GetExportSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/GetExportSet.ts.html |here} to see how to use GetExportSet API.
     */
    getExportSet(getExportSetRequest: requests.GetExportSetRequest): Promise<responses.GetExportSetResponse>;
    /**
     * Gets the specified file system's information.
     * @param GetFileSystemRequest
     * @return GetFileSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/GetFileSystem.ts.html |here} to see how to use GetFileSystem API.
     */
    getFileSystem(getFileSystemRequest: requests.GetFileSystemRequest): Promise<responses.GetFileSystemResponse>;
    /**
     * Gets the specified mount target's information.
     * @param GetMountTargetRequest
     * @return GetMountTargetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/GetMountTarget.ts.html |here} to see how to use GetMountTarget API.
     */
    getMountTarget(getMountTargetRequest: requests.GetMountTargetRequest): Promise<responses.GetMountTargetResponse>;
    /**
     * Gets the specified snapshot's information.
     * @param GetSnapshotRequest
     * @return GetSnapshotResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/GetSnapshot.ts.html |here} to see how to use GetSnapshot API.
     */
    getSnapshot(getSnapshotRequest: requests.GetSnapshotRequest): Promise<responses.GetSnapshotResponse>;
    /**
     * Lists the export set resources in the specified compartment.
     *
     * @param ListExportSetsRequest
     * @return ListExportSetsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/ListExportSets.ts.html |here} to see how to use ListExportSets API.
     */
    listExportSets(listExportSetsRequest: requests.ListExportSetsRequest): Promise<responses.ListExportSetsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ExportSetSummary objects
     * contained in responses from the listExportSets operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllExportSets(request: requests.ListExportSetsRequest): AsyncIterableIterator<models.ExportSetSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listExportSets operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllExportSetsResponses(request: requests.ListExportSetsRequest): AsyncIterableIterator<responses.ListExportSetsResponse>;
    /**
     * Lists export resources by compartment, file system, or export
     * set. You must specify an export set ID, a file system ID, and
     * / or a compartment ID.
     *
     * @param ListExportsRequest
     * @return ListExportsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/ListExports.ts.html |here} to see how to use ListExports API.
     */
    listExports(listExportsRequest: requests.ListExportsRequest): Promise<responses.ListExportsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ExportSummary objects
     * contained in responses from the listExports operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllExports(request: requests.ListExportsRequest): AsyncIterableIterator<models.ExportSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listExports operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllExportsResponses(request: requests.ListExportsRequest): AsyncIterableIterator<responses.ListExportsResponse>;
    /**
     * Lists the file system resources in the specified compartment.
     *
     * @param ListFileSystemsRequest
     * @return ListFileSystemsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/ListFileSystems.ts.html |here} to see how to use ListFileSystems API.
     */
    listFileSystems(listFileSystemsRequest: requests.ListFileSystemsRequest): Promise<responses.ListFileSystemsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.FileSystemSummary objects
     * contained in responses from the listFileSystems operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllFileSystems(request: requests.ListFileSystemsRequest): AsyncIterableIterator<models.FileSystemSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listFileSystems operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllFileSystemsResponses(request: requests.ListFileSystemsRequest): AsyncIterableIterator<responses.ListFileSystemsResponse>;
    /**
     * Lists the mount target resources in the specified compartment.
     *
     * @param ListMountTargetsRequest
     * @return ListMountTargetsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/ListMountTargets.ts.html |here} to see how to use ListMountTargets API.
     */
    listMountTargets(listMountTargetsRequest: requests.ListMountTargetsRequest): Promise<responses.ListMountTargetsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.MountTargetSummary objects
     * contained in responses from the listMountTargets operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllMountTargets(request: requests.ListMountTargetsRequest): AsyncIterableIterator<models.MountTargetSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listMountTargets operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllMountTargetsResponses(request: requests.ListMountTargetsRequest): AsyncIterableIterator<responses.ListMountTargetsResponse>;
    /**
     * Lists snapshots of the specified file system.
     *
     * @param ListSnapshotsRequest
     * @return ListSnapshotsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/ListSnapshots.ts.html |here} to see how to use ListSnapshots API.
     */
    listSnapshots(listSnapshotsRequest: requests.ListSnapshotsRequest): Promise<responses.ListSnapshotsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SnapshotSummary objects
     * contained in responses from the listSnapshots operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSnapshots(request: requests.ListSnapshotsRequest): AsyncIterableIterator<models.SnapshotSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listSnapshots operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSnapshotsResponses(request: requests.ListSnapshotsRequest): AsyncIterableIterator<responses.ListSnapshotsResponse>;
    /**
     * Updates the specified export's information.
     * @param UpdateExportRequest
     * @return UpdateExportResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/UpdateExport.ts.html |here} to see how to use UpdateExport API.
     */
    updateExport(updateExportRequest: requests.UpdateExportRequest): Promise<responses.UpdateExportResponse>;
    /**
     * Updates the specified export set's information.
     * @param UpdateExportSetRequest
     * @return UpdateExportSetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/UpdateExportSet.ts.html |here} to see how to use UpdateExportSet API.
     */
    updateExportSet(updateExportSetRequest: requests.UpdateExportSetRequest): Promise<responses.UpdateExportSetResponse>;
    /**
     * Updates the specified file system's information.
     * You can use this operation to rename a file system.
     *
     * @param UpdateFileSystemRequest
     * @return UpdateFileSystemResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/UpdateFileSystem.ts.html |here} to see how to use UpdateFileSystem API.
     */
    updateFileSystem(updateFileSystemRequest: requests.UpdateFileSystemRequest): Promise<responses.UpdateFileSystemResponse>;
    /**
     * Updates the specified mount target's information.
     * @param UpdateMountTargetRequest
     * @return UpdateMountTargetResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/UpdateMountTarget.ts.html |here} to see how to use UpdateMountTarget API.
     */
    updateMountTarget(updateMountTargetRequest: requests.UpdateMountTargetRequest): Promise<responses.UpdateMountTargetResponse>;
    /**
     * Updates the specified snapshot's information.
     * @param UpdateSnapshotRequest
     * @return UpdateSnapshotResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/filestorage/UpdateSnapshot.ts.html |here} to see how to use UpdateSnapshot API.
     */
    updateSnapshot(updateSnapshotRequest: requests.UpdateSnapshotRequest): Promise<responses.UpdateSnapshotResponse>;
}
