/**
 * Load Balancing API
 * API for the Load Balancing service. Use this API to manage load balancers, backend sets, and related items. For more
information, see [Overview of Load Balancing](/iaas/Content/Balance/Concepts/balanceoverview.htm).

 * OpenAPI spec version: 20170115
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The path string and match condition to apply when evaluating an incoming URI for redirection.
 *
 */
export interface PathMatchCondition extends model.RuleCondition {
    /**
      * The path string that the redirection rule applies to.
  * <p>
  Example: `/example`
  *
      */
    "attributeValue": string;
    /**
     * A string that specifies how to compare the PathMatchCondition object's `attributeValue` string to the
     * incoming URI.
     * <p>
     *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
     * <p>
     *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best,
     *    longest match of the beginning portion of the incoming URI path.
     * <p>
     *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the
     *    `attributeValue` string.
     * <p>
     *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue`
     *    string.
     *
     */
    "operator": PathMatchCondition.Operator;
    "attributeName": string;
}
export declare namespace PathMatchCondition {
    enum Operator {
        ExactMatch = "EXACT_MATCH",
        ForceLongestPrefixMatch = "FORCE_LONGEST_PREFIX_MATCH",
        PrefixMatch = "PREFIX_MATCH",
        SuffixMatch = "SUFFIX_MATCH",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: PathMatchCondition, isParentJsonObj?: boolean): object;
    const attributeName = "PATH";
}
