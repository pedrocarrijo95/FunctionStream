"use strict";
/**
 * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EndpointBuilder = void 0;
const region_1 = require("./region");
const realm_1 = require("./realm");
class EndpointBuilder {
    static createEndpointFromRegion(template, region) {
        const regionId = region.regionId;
        const secondLevelDomain = region.realm.secondLevelDomain;
        return EndpointBuilder.createEndpointFromRegionIdAndSecondLevelDomain(template, regionId, secondLevelDomain);
    }
    static createEndpointFromRegionId(template, regionId) {
        const region = region_1.Region.fromRegionId(regionId);
        if (region)
            return EndpointBuilder.createEndpointFromRegion(template, region);
        console.log(`Unknown regionId [${regionId}], Assuming its in default Realm OC1`);
        const defaultRealm = realm_1.Realm.OC1;
        return EndpointBuilder.createEndpointFromRegionIdAndSecondLevelDomain(template, regionId, defaultRealm.secondLevelDomain);
    }
    static createEndpointFromRegionIdAndSecondLevelDomain(template, regionId, secondLevelDomain) {
        if (!template)
            throw Error("Template can not be undefined or empty");
        if (!regionId)
            throw Error("regionId can not be undefined or empty");
        if (!secondLevelDomain)
            throw Error("secondLevelDomain can not be undefined or empty");
        return template.replace("{secondLevelDomain}", secondLevelDomain).replace("{region}", regionId);
    }
}
exports.EndpointBuilder = EndpointBuilder;
//# sourceMappingURL=endpoint-builder.js.map