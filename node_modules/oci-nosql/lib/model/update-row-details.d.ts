/**
 * NoSQL Database API
 * The control plane API for NoSQL Database Cloud Service HTTPS
provides endpoints to perform NDCS operations, including creation
and deletion of tables and indexes; population and access of data
in tables; and access of table usage metrics.

 * OpenAPI spec version: 20190828
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Specifications for the putting of a table row.
 */
export interface UpdateRowDetails {
    /**
     * The OCID of the table's compartment.  Required
     * if the tableNameOrId path parameter is a table name.
     * Optional if tableNameOrId is an OCID.  If tableNameOrId
     * is an OCID, and compartmentId is supplied, the latter
     * must match the identified table's compartmentId.
     *
     */
    "compartmentId"?: string;
    /**
     * The map of values from a row.
     */
    "value": {
        [key: string]: any;
    };
    /**
     * Specifies a condition for the put operation.
     */
    "option"?: UpdateRowDetails.Option;
    /**
     * If true, and the put fails due to an option setting, then
     * the existing row will be returned.
     *
     */
    "isGetReturnRow"?: boolean;
    /**
     * Timeout setting for the put. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "timeoutInMs"?: number;
    /**
     * Time-to-live for the row, in days. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "ttl"?: number;
    /**
     * If true, set time-to-live for this row to the table's default.
     *
     */
    "isTtlUseTableDefault"?: boolean;
    /**
     * Sets the number of generated identity values that are
     * requested from the server during a put. If present and greater than 0,
     * this value takes precedence over a default value for the table.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "identityCacheSize"?: number;
    /**
     * If present and true, the presented row value must exactly
     * match the table's schema.  Otherwise, rows with missing
     * non-key fields or extra fields can be written successfully.
     *
     */
    "isExactMatch"?: boolean;
}
export declare namespace UpdateRowDetails {
    enum Option {
        IfAbsent = "IF_ABSENT",
        IfPresent = "IF_PRESENT"
    }
    function getJsonObj(obj: UpdateRowDetails): object;
}
