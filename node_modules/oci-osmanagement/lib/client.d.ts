/**
 * OS Management API
 * API for the OS Management service. Use these API operations for working
with Managed instances and Managed instance groups.

 * OpenAPI spec version: 20190801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { OsManagementWaiter } from "./osmanagement-waiter";
export declare enum OsManagementApiKeys {
}
export declare class OsManagementClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": OsManagementWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new OsManagementWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): OsManagementWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): OsManagementWaiter;
    /**
     * Adds a given list of Software Packages to a specific Software Source.
     *
     * @param AddPackagesToSoftwareSourceRequest
     * @return AddPackagesToSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/AddPackagesToSoftwareSource.ts.html |here} to see how to use AddPackagesToSoftwareSource API.
     */
    addPackagesToSoftwareSource(addPackagesToSoftwareSourceRequest: requests.AddPackagesToSoftwareSourceRequest): Promise<responses.AddPackagesToSoftwareSourceResponse>;
    /**
     * Adds a child software source to a managed instance. After the software
     * source has been added, then packages from that software source can be
     * installed on the managed instance.
     *
     * @param AttachChildSoftwareSourceToManagedInstanceRequest
     * @return AttachChildSoftwareSourceToManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/AttachChildSoftwareSourceToManagedInstance.ts.html |here} to see how to use AttachChildSoftwareSourceToManagedInstance API.
     */
    attachChildSoftwareSourceToManagedInstance(attachChildSoftwareSourceToManagedInstanceRequest: requests.AttachChildSoftwareSourceToManagedInstanceRequest): Promise<responses.AttachChildSoftwareSourceToManagedInstanceResponse>;
    /**
     * Adds a Managed Instance to a Managed Instance Group. After the Managed
     * Instance has been added, then operations can be performed on the Managed
     * Instance Group which will then apply to all Managed Instances in the
     * group.
     *
     * @param AttachManagedInstanceToManagedInstanceGroupRequest
     * @return AttachManagedInstanceToManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/AttachManagedInstanceToManagedInstanceGroup.ts.html |here} to see how to use AttachManagedInstanceToManagedInstanceGroup API.
     */
    attachManagedInstanceToManagedInstanceGroup(attachManagedInstanceToManagedInstanceGroupRequest: requests.AttachManagedInstanceToManagedInstanceGroupRequest): Promise<responses.AttachManagedInstanceToManagedInstanceGroupResponse>;
    /**
     * Adds a parent software source to a managed instance. After the software
     * source has been added, then packages from that software source can be
     * installed on the managed instance. Software sources that have this
     * software source as a parent will be able to be added to this managed instance.
     *
     * @param AttachParentSoftwareSourceToManagedInstanceRequest
     * @return AttachParentSoftwareSourceToManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/AttachParentSoftwareSourceToManagedInstance.ts.html |here} to see how to use AttachParentSoftwareSourceToManagedInstance API.
     */
    attachParentSoftwareSourceToManagedInstance(attachParentSoftwareSourceToManagedInstanceRequest: requests.AttachParentSoftwareSourceToManagedInstanceRequest): Promise<responses.AttachParentSoftwareSourceToManagedInstanceResponse>;
    /**
     * Moves a resource into a different compartment. When provided, If-Match
     * is checked against ETag values of the resource.
     *
     * @param ChangeManagedInstanceGroupCompartmentRequest
     * @return ChangeManagedInstanceGroupCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ChangeManagedInstanceGroupCompartment.ts.html |here} to see how to use ChangeManagedInstanceGroupCompartment API.
     */
    changeManagedInstanceGroupCompartment(changeManagedInstanceGroupCompartmentRequest: requests.ChangeManagedInstanceGroupCompartmentRequest): Promise<responses.ChangeManagedInstanceGroupCompartmentResponse>;
    /**
     * Moves a resource into a different compartment. When provided, If-Match
     * is checked against ETag values of the resource.
     *
     * @param ChangeScheduledJobCompartmentRequest
     * @return ChangeScheduledJobCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ChangeScheduledJobCompartment.ts.html |here} to see how to use ChangeScheduledJobCompartment API.
     */
    changeScheduledJobCompartment(changeScheduledJobCompartmentRequest: requests.ChangeScheduledJobCompartmentRequest): Promise<responses.ChangeScheduledJobCompartmentResponse>;
    /**
     * Moves a resource into a different compartment. When provided, If-Match
     * is checked against ETag values of the resource.
     *
     * @param ChangeSoftwareSourceCompartmentRequest
     * @return ChangeSoftwareSourceCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ChangeSoftwareSourceCompartment.ts.html |here} to see how to use ChangeSoftwareSourceCompartment API.
     */
    changeSoftwareSourceCompartment(changeSoftwareSourceCompartmentRequest: requests.ChangeSoftwareSourceCompartmentRequest): Promise<responses.ChangeSoftwareSourceCompartmentResponse>;
    /**
     * Creates a new Managed Instance Group on the management system.
     * This will not contain any managed instances after it is first created,
     * and they must be added later.
     *
     * @param CreateManagedInstanceGroupRequest
     * @return CreateManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/CreateManagedInstanceGroup.ts.html |here} to see how to use CreateManagedInstanceGroup API.
     */
    createManagedInstanceGroup(createManagedInstanceGroupRequest: requests.CreateManagedInstanceGroupRequest): Promise<responses.CreateManagedInstanceGroupResponse>;
    /**
     * Creates a new Scheduled Job to perform a specific package operation on
     * a set of managed instances or managed instance groups.  Can be created
     * as a one-time execution in the future, or as a recurring execution
     * that repeats on a defined interval.
     *
     * @param CreateScheduledJobRequest
     * @return CreateScheduledJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/CreateScheduledJob.ts.html |here} to see how to use CreateScheduledJob API.
     */
    createScheduledJob(createScheduledJobRequest: requests.CreateScheduledJobRequest): Promise<responses.CreateScheduledJobResponse>;
    /**
     * Creates a new custom Software Source on the management system.
     * This will not contain any packages after it is first created,
     * and they must be added later.
     *
     * @param CreateSoftwareSourceRequest
     * @return CreateSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/CreateSoftwareSource.ts.html |here} to see how to use CreateSoftwareSource API.
     */
    createSoftwareSource(createSoftwareSourceRequest: requests.CreateSoftwareSourceRequest): Promise<responses.CreateSoftwareSourceResponse>;
    /**
     * Deletes a Managed Instance Group from the management system
     *
     * @param DeleteManagedInstanceGroupRequest
     * @return DeleteManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/DeleteManagedInstanceGroup.ts.html |here} to see how to use DeleteManagedInstanceGroup API.
     */
    deleteManagedInstanceGroup(deleteManagedInstanceGroupRequest: requests.DeleteManagedInstanceGroupRequest): Promise<responses.DeleteManagedInstanceGroupResponse>;
    /**
     * Cancels an existing Scheduled Job on the management system
     *
     * @param DeleteScheduledJobRequest
     * @return DeleteScheduledJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/DeleteScheduledJob.ts.html |here} to see how to use DeleteScheduledJob API.
     */
    deleteScheduledJob(deleteScheduledJobRequest: requests.DeleteScheduledJobRequest): Promise<responses.DeleteScheduledJobResponse>;
    /**
     * Deletes a custom Software Source on the management system
     *
     * @param DeleteSoftwareSourceRequest
     * @return DeleteSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/DeleteSoftwareSource.ts.html |here} to see how to use DeleteSoftwareSource API.
     */
    deleteSoftwareSource(deleteSoftwareSourceRequest: requests.DeleteSoftwareSourceRequest): Promise<responses.DeleteSoftwareSourceResponse>;
    /**
     * Removes a child software source from a managed instance. Packages will no longer be able to be
     * installed from these software sources.
     *
     * @param DetachChildSoftwareSourceFromManagedInstanceRequest
     * @return DetachChildSoftwareSourceFromManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/DetachChildSoftwareSourceFromManagedInstance.ts.html |here} to see how to use DetachChildSoftwareSourceFromManagedInstance API.
     */
    detachChildSoftwareSourceFromManagedInstance(detachChildSoftwareSourceFromManagedInstanceRequest: requests.DetachChildSoftwareSourceFromManagedInstanceRequest): Promise<responses.DetachChildSoftwareSourceFromManagedInstanceResponse>;
    /**
     * Removes a Managed Instance from a Managed Instance Group.
     *
     * @param DetachManagedInstanceFromManagedInstanceGroupRequest
     * @return DetachManagedInstanceFromManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/DetachManagedInstanceFromManagedInstanceGroup.ts.html |here} to see how to use DetachManagedInstanceFromManagedInstanceGroup API.
     */
    detachManagedInstanceFromManagedInstanceGroup(detachManagedInstanceFromManagedInstanceGroupRequest: requests.DetachManagedInstanceFromManagedInstanceGroupRequest): Promise<responses.DetachManagedInstanceFromManagedInstanceGroupResponse>;
    /**
     * Removes a software source from a managed instance. All child software sources will also be removed
     * from the managed instance. Packages will no longer be able to be installed from these software sources.
     *
     * @param DetachParentSoftwareSourceFromManagedInstanceRequest
     * @return DetachParentSoftwareSourceFromManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/DetachParentSoftwareSourceFromManagedInstance.ts.html |here} to see how to use DetachParentSoftwareSourceFromManagedInstance API.
     */
    detachParentSoftwareSourceFromManagedInstance(detachParentSoftwareSourceFromManagedInstanceRequest: requests.DetachParentSoftwareSourceFromManagedInstanceRequest): Promise<responses.DetachParentSoftwareSourceFromManagedInstanceResponse>;
    /**
     * Returns a specific erratum.
     *
     * @param GetErratumRequest
     * @return GetErratumResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/GetErratum.ts.html |here} to see how to use GetErratum API.
     */
    getErratum(getErratumRequest: requests.GetErratumRequest): Promise<responses.GetErratumResponse>;
    /**
     * Returns a specific Managed Instance.
     *
     * @param GetManagedInstanceRequest
     * @return GetManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/GetManagedInstance.ts.html |here} to see how to use GetManagedInstance API.
     */
    getManagedInstance(getManagedInstanceRequest: requests.GetManagedInstanceRequest): Promise<responses.GetManagedInstanceResponse>;
    /**
     * Returns a specific Managed Instance Group.
     *
     * @param GetManagedInstanceGroupRequest
     * @return GetManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/GetManagedInstanceGroup.ts.html |here} to see how to use GetManagedInstanceGroup API.
     */
    getManagedInstanceGroup(getManagedInstanceGroupRequest: requests.GetManagedInstanceGroupRequest): Promise<responses.GetManagedInstanceGroupResponse>;
    /**
     * Gets the detailed information for the Scheduled Job with the given ID.
     *
     * @param GetScheduledJobRequest
     * @return GetScheduledJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/GetScheduledJob.ts.html |here} to see how to use GetScheduledJob API.
     */
    getScheduledJob(getScheduledJobRequest: requests.GetScheduledJobRequest): Promise<responses.GetScheduledJobResponse>;
    /**
     * Returns a specific Software Package.
     *
     * @param GetSoftwarePackageRequest
     * @return GetSoftwarePackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/GetSoftwarePackage.ts.html |here} to see how to use GetSoftwarePackage API.
     */
    getSoftwarePackage(getSoftwarePackageRequest: requests.GetSoftwarePackageRequest): Promise<responses.GetSoftwarePackageResponse>;
    /**
     * Returns a specific Software Source.
     *
     * @param GetSoftwareSourceRequest
     * @return GetSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/GetSoftwareSource.ts.html |here} to see how to use GetSoftwareSource API.
     */
    getSoftwareSource(getSoftwareSourceRequest: requests.GetSoftwareSourceRequest): Promise<responses.GetSoftwareSourceResponse>;
    /**
     * Returns a Windows Update object.
     *
     * @param GetWindowsUpdateRequest
     * @return GetWindowsUpdateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/GetWindowsUpdate.ts.html |here} to see how to use GetWindowsUpdate API.
     */
    getWindowsUpdate(getWindowsUpdateRequest: requests.GetWindowsUpdateRequest): Promise<responses.GetWindowsUpdateResponse>;
    /**
     * Gets the detailed information for the work request with the given ID.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Install all of the available package updates for the managed instance.
     *
     * @param InstallAllPackageUpdatesOnManagedInstanceRequest
     * @return InstallAllPackageUpdatesOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/InstallAllPackageUpdatesOnManagedInstance.ts.html |here} to see how to use InstallAllPackageUpdatesOnManagedInstance API.
     */
    installAllPackageUpdatesOnManagedInstance(installAllPackageUpdatesOnManagedInstanceRequest: requests.InstallAllPackageUpdatesOnManagedInstanceRequest): Promise<responses.InstallAllPackageUpdatesOnManagedInstanceResponse>;
    /**
     * Install all of the available Windows updates for the managed instance.
     *
     * @param InstallAllWindowsUpdatesOnManagedInstanceRequest
     * @return InstallAllWindowsUpdatesOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/InstallAllWindowsUpdatesOnManagedInstance.ts.html |here} to see how to use InstallAllWindowsUpdatesOnManagedInstance API.
     */
    installAllWindowsUpdatesOnManagedInstance(installAllWindowsUpdatesOnManagedInstanceRequest: requests.InstallAllWindowsUpdatesOnManagedInstanceRequest): Promise<responses.InstallAllWindowsUpdatesOnManagedInstanceResponse>;
    /**
     * Installs a package on a managed instance.
     *
     * @param InstallPackageOnManagedInstanceRequest
     * @return InstallPackageOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/InstallPackageOnManagedInstance.ts.html |here} to see how to use InstallPackageOnManagedInstance API.
     */
    installPackageOnManagedInstance(installPackageOnManagedInstanceRequest: requests.InstallPackageOnManagedInstanceRequest): Promise<responses.InstallPackageOnManagedInstanceResponse>;
    /**
     * Updates a package on a managed instance.
     *
     * @param InstallPackageUpdateOnManagedInstanceRequest
     * @return InstallPackageUpdateOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/InstallPackageUpdateOnManagedInstance.ts.html |here} to see how to use InstallPackageUpdateOnManagedInstance API.
     */
    installPackageUpdateOnManagedInstance(installPackageUpdateOnManagedInstanceRequest: requests.InstallPackageUpdateOnManagedInstanceRequest): Promise<responses.InstallPackageUpdateOnManagedInstanceResponse>;
    /**
     * Installs a Windows update on a managed instance.
     *
     * @param InstallWindowsUpdateOnManagedInstanceRequest
     * @return InstallWindowsUpdateOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/InstallWindowsUpdateOnManagedInstance.ts.html |here} to see how to use InstallWindowsUpdateOnManagedInstance API.
     */
    installWindowsUpdateOnManagedInstance(installWindowsUpdateOnManagedInstanceRequest: requests.InstallWindowsUpdateOnManagedInstanceRequest): Promise<responses.InstallWindowsUpdateOnManagedInstanceResponse>;
    /**
     * Returns a list of packages available for install on the Managed Instance.
     *
     * @param ListAvailablePackagesForManagedInstanceRequest
     * @return ListAvailablePackagesForManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListAvailablePackagesForManagedInstance.ts.html |here} to see how to use ListAvailablePackagesForManagedInstance API.
     */
    listAvailablePackagesForManagedInstance(listAvailablePackagesForManagedInstanceRequest: requests.ListAvailablePackagesForManagedInstanceRequest): Promise<responses.ListAvailablePackagesForManagedInstanceResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.InstallablePackageSummary objects
     * contained in responses from the listAvailablePackagesForManagedInstance operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailablePackagesForManagedInstance(request: requests.ListAvailablePackagesForManagedInstanceRequest): AsyncIterableIterator<models.InstallablePackageSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAvailablePackagesForManagedInstance operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailablePackagesForManagedInstanceResponses(request: requests.ListAvailablePackagesForManagedInstanceRequest): AsyncIterableIterator<responses.ListAvailablePackagesForManagedInstanceResponse>;
    /**
     * Returns a list of available software sources for a Managed Instance.
     *
     * @param ListAvailableSoftwareSourcesForManagedInstanceRequest
     * @return ListAvailableSoftwareSourcesForManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListAvailableSoftwareSourcesForManagedInstance.ts.html |here} to see how to use ListAvailableSoftwareSourcesForManagedInstance API.
     */
    listAvailableSoftwareSourcesForManagedInstance(listAvailableSoftwareSourcesForManagedInstanceRequest: requests.ListAvailableSoftwareSourcesForManagedInstanceRequest): Promise<responses.ListAvailableSoftwareSourcesForManagedInstanceResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AvailableSoftwareSourceSummary objects
     * contained in responses from the listAvailableSoftwareSourcesForManagedInstance operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailableSoftwareSourcesForManagedInstance(request: requests.ListAvailableSoftwareSourcesForManagedInstanceRequest): AsyncIterableIterator<models.AvailableSoftwareSourceSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAvailableSoftwareSourcesForManagedInstance operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailableSoftwareSourcesForManagedInstanceResponses(request: requests.ListAvailableSoftwareSourcesForManagedInstanceRequest): AsyncIterableIterator<responses.ListAvailableSoftwareSourcesForManagedInstanceResponse>;
    /**
     * Returns a list of available updates for a Managed Instance.
     *
     * @param ListAvailableUpdatesForManagedInstanceRequest
     * @return ListAvailableUpdatesForManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListAvailableUpdatesForManagedInstance.ts.html |here} to see how to use ListAvailableUpdatesForManagedInstance API.
     */
    listAvailableUpdatesForManagedInstance(listAvailableUpdatesForManagedInstanceRequest: requests.ListAvailableUpdatesForManagedInstanceRequest): Promise<responses.ListAvailableUpdatesForManagedInstanceResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AvailableUpdateSummary objects
     * contained in responses from the listAvailableUpdatesForManagedInstance operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailableUpdatesForManagedInstance(request: requests.ListAvailableUpdatesForManagedInstanceRequest): AsyncIterableIterator<models.AvailableUpdateSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAvailableUpdatesForManagedInstance operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailableUpdatesForManagedInstanceResponses(request: requests.ListAvailableUpdatesForManagedInstanceRequest): AsyncIterableIterator<responses.ListAvailableUpdatesForManagedInstanceResponse>;
    /**
     * Returns a list of available Windows updates for a Managed Instance. This is only applicable to Windows instances.
     *
     * @param ListAvailableWindowsUpdatesForManagedInstanceRequest
     * @return ListAvailableWindowsUpdatesForManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListAvailableWindowsUpdatesForManagedInstance.ts.html |here} to see how to use ListAvailableWindowsUpdatesForManagedInstance API.
     */
    listAvailableWindowsUpdatesForManagedInstance(listAvailableWindowsUpdatesForManagedInstanceRequest: requests.ListAvailableWindowsUpdatesForManagedInstanceRequest): Promise<responses.ListAvailableWindowsUpdatesForManagedInstanceResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.AvailableWindowsUpdateSummary objects
     * contained in responses from the listAvailableWindowsUpdatesForManagedInstance operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailableWindowsUpdatesForManagedInstance(request: requests.ListAvailableWindowsUpdatesForManagedInstanceRequest): AsyncIterableIterator<models.AvailableWindowsUpdateSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listAvailableWindowsUpdatesForManagedInstance operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllAvailableWindowsUpdatesForManagedInstanceResponses(request: requests.ListAvailableWindowsUpdatesForManagedInstanceRequest): AsyncIterableIterator<responses.ListAvailableWindowsUpdatesForManagedInstanceResponse>;
    /**
     * Returns a list of all of the currently available Errata in the system
     *
     * @param ListErrataRequest
     * @return ListErrataResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListErrata.ts.html |here} to see how to use ListErrata API.
     */
    listErrata(listErrataRequest: requests.ListErrataRequest): Promise<responses.ListErrataResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ErratumSummary objects
     * contained in responses from the listErrata operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllErrata(request: requests.ListErrataRequest): AsyncIterableIterator<models.ErratumSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listErrata operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllErrataResponses(request: requests.ListErrataRequest): AsyncIterableIterator<responses.ListErrataResponse>;
    /**
     * Returns a list of errata relevant to the Managed Instance.
     *
     * @param ListManagedInstanceErrataRequest
     * @return ListManagedInstanceErrataResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListManagedInstanceErrata.ts.html |here} to see how to use ListManagedInstanceErrata API.
     */
    listManagedInstanceErrata(listManagedInstanceErrataRequest: requests.ListManagedInstanceErrataRequest): Promise<responses.ListManagedInstanceErrataResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ErratumSummary objects
     * contained in responses from the listManagedInstanceErrata operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagedInstanceErrata(request: requests.ListManagedInstanceErrataRequest): AsyncIterableIterator<models.ErratumSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listManagedInstanceErrata operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagedInstanceErrataResponses(request: requests.ListManagedInstanceErrataRequest): AsyncIterableIterator<responses.ListManagedInstanceErrataResponse>;
    /**
     * Returns a list of all Managed Instance Groups.
     *
     * @param ListManagedInstanceGroupsRequest
     * @return ListManagedInstanceGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListManagedInstanceGroups.ts.html |here} to see how to use ListManagedInstanceGroups API.
     */
    listManagedInstanceGroups(listManagedInstanceGroupsRequest: requests.ListManagedInstanceGroupsRequest): Promise<responses.ListManagedInstanceGroupsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ManagedInstanceGroupSummary objects
     * contained in responses from the listManagedInstanceGroups operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagedInstanceGroups(request: requests.ListManagedInstanceGroupsRequest): AsyncIterableIterator<models.ManagedInstanceGroupSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listManagedInstanceGroups operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagedInstanceGroupsResponses(request: requests.ListManagedInstanceGroupsRequest): AsyncIterableIterator<responses.ListManagedInstanceGroupsResponse>;
    /**
     * Returns a list of all Managed Instances.
     *
     * @param ListManagedInstancesRequest
     * @return ListManagedInstancesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListManagedInstances.ts.html |here} to see how to use ListManagedInstances API.
     */
    listManagedInstances(listManagedInstancesRequest: requests.ListManagedInstancesRequest): Promise<responses.ListManagedInstancesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ManagedInstanceSummary objects
     * contained in responses from the listManagedInstances operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagedInstances(request: requests.ListManagedInstancesRequest): AsyncIterableIterator<models.ManagedInstanceSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listManagedInstances operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllManagedInstancesResponses(request: requests.ListManagedInstancesRequest): AsyncIterableIterator<responses.ListManagedInstancesResponse>;
    /**
     * Returns a list of installed packages on the Managed Instance.
     *
     * @param ListPackagesInstalledOnManagedInstanceRequest
     * @return ListPackagesInstalledOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListPackagesInstalledOnManagedInstance.ts.html |here} to see how to use ListPackagesInstalledOnManagedInstance API.
     */
    listPackagesInstalledOnManagedInstance(listPackagesInstalledOnManagedInstanceRequest: requests.ListPackagesInstalledOnManagedInstanceRequest): Promise<responses.ListPackagesInstalledOnManagedInstanceResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.InstalledPackageSummary objects
     * contained in responses from the listPackagesInstalledOnManagedInstance operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPackagesInstalledOnManagedInstance(request: requests.ListPackagesInstalledOnManagedInstanceRequest): AsyncIterableIterator<models.InstalledPackageSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listPackagesInstalledOnManagedInstance operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllPackagesInstalledOnManagedInstanceResponses(request: requests.ListPackagesInstalledOnManagedInstanceRequest): AsyncIterableIterator<responses.ListPackagesInstalledOnManagedInstanceResponse>;
    /**
     * Returns a list of all of the currently active Scheduled Jobs in the system
     *
     * @param ListScheduledJobsRequest
     * @return ListScheduledJobsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListScheduledJobs.ts.html |here} to see how to use ListScheduledJobs API.
     */
    listScheduledJobs(listScheduledJobsRequest: requests.ListScheduledJobsRequest): Promise<responses.ListScheduledJobsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ScheduledJobSummary objects
     * contained in responses from the listScheduledJobs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllScheduledJobs(request: requests.ListScheduledJobsRequest): AsyncIterableIterator<models.ScheduledJobSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listScheduledJobs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllScheduledJobsResponses(request: requests.ListScheduledJobsRequest): AsyncIterableIterator<responses.ListScheduledJobsResponse>;
    /**
     * Lists Software Packages in a Software Source
     *
     * @param ListSoftwareSourcePackagesRequest
     * @return ListSoftwareSourcePackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListSoftwareSourcePackages.ts.html |here} to see how to use ListSoftwareSourcePackages API.
     */
    listSoftwareSourcePackages(listSoftwareSourcePackagesRequest: requests.ListSoftwareSourcePackagesRequest): Promise<responses.ListSoftwareSourcePackagesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SoftwarePackageSummary objects
     * contained in responses from the listSoftwareSourcePackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSoftwareSourcePackages(request: requests.ListSoftwareSourcePackagesRequest): AsyncIterableIterator<models.SoftwarePackageSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listSoftwareSourcePackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSoftwareSourcePackagesResponses(request: requests.ListSoftwareSourcePackagesRequest): AsyncIterableIterator<responses.ListSoftwareSourcePackagesResponse>;
    /**
     * Returns a list of all Software Sources.
     *
     * @param ListSoftwareSourcesRequest
     * @return ListSoftwareSourcesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListSoftwareSources.ts.html |here} to see how to use ListSoftwareSources API.
     */
    listSoftwareSources(listSoftwareSourcesRequest: requests.ListSoftwareSourcesRequest): Promise<responses.ListSoftwareSourcesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SoftwareSourceSummary objects
     * contained in responses from the listSoftwareSources operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSoftwareSources(request: requests.ListSoftwareSourcesRequest): AsyncIterableIterator<models.SoftwareSourceSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listSoftwareSources operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSoftwareSourcesResponses(request: requests.ListSoftwareSourcesRequest): AsyncIterableIterator<responses.ListSoftwareSourcesResponse>;
    /**
     * Returns a list of all of the Scheduled Jobs whose next execution time is at or before the specified time.
     *
     * @param ListUpcomingScheduledJobsRequest
     * @return ListUpcomingScheduledJobsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListUpcomingScheduledJobs.ts.html |here} to see how to use ListUpcomingScheduledJobs API.
     */
    listUpcomingScheduledJobs(listUpcomingScheduledJobsRequest: requests.ListUpcomingScheduledJobsRequest): Promise<responses.ListUpcomingScheduledJobsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ScheduledJobSummary objects
     * contained in responses from the listUpcomingScheduledJobs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllUpcomingScheduledJobs(request: requests.ListUpcomingScheduledJobsRequest): AsyncIterableIterator<models.ScheduledJobSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listUpcomingScheduledJobs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllUpcomingScheduledJobsResponses(request: requests.ListUpcomingScheduledJobsRequest): AsyncIterableIterator<responses.ListUpcomingScheduledJobsResponse>;
    /**
     * Returns a list of Windows Updates.
     *
     * @param ListWindowsUpdatesRequest
     * @return ListWindowsUpdatesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListWindowsUpdates.ts.html |here} to see how to use ListWindowsUpdates API.
     */
    listWindowsUpdates(listWindowsUpdatesRequest: requests.ListWindowsUpdatesRequest): Promise<responses.ListWindowsUpdatesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WindowsUpdateSummary objects
     * contained in responses from the listWindowsUpdates operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWindowsUpdates(request: requests.ListWindowsUpdatesRequest): AsyncIterableIterator<models.WindowsUpdateSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWindowsUpdates operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWindowsUpdatesResponses(request: requests.ListWindowsUpdatesRequest): AsyncIterableIterator<responses.ListWindowsUpdatesResponse>;
    /**
     * Returns a list of installed Windows updates for a Managed Instance. This is only applicable to Windows instances.
     *
     * @param ListWindowsUpdatesInstalledOnManagedInstanceRequest
     * @return ListWindowsUpdatesInstalledOnManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListWindowsUpdatesInstalledOnManagedInstance.ts.html |here} to see how to use ListWindowsUpdatesInstalledOnManagedInstance API.
     */
    listWindowsUpdatesInstalledOnManagedInstance(listWindowsUpdatesInstalledOnManagedInstanceRequest: requests.ListWindowsUpdatesInstalledOnManagedInstanceRequest): Promise<responses.ListWindowsUpdatesInstalledOnManagedInstanceResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.InstalledWindowsUpdateSummary objects
     * contained in responses from the listWindowsUpdatesInstalledOnManagedInstance operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWindowsUpdatesInstalledOnManagedInstance(request: requests.ListWindowsUpdatesInstalledOnManagedInstanceRequest): AsyncIterableIterator<models.InstalledWindowsUpdateSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWindowsUpdatesInstalledOnManagedInstance operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWindowsUpdatesInstalledOnManagedInstanceResponses(request: requests.ListWindowsUpdatesInstalledOnManagedInstanceRequest): AsyncIterableIterator<responses.ListWindowsUpdatesInstalledOnManagedInstanceResponse>;
    /**
     * Gets the errors for the work request with the given ID.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestError objects
     * contained in responses from the listWorkRequestErrors operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrors(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<models.WorkRequestError>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestErrors operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestErrorsResponses(request: requests.ListWorkRequestErrorsRequest): AsyncIterableIterator<responses.ListWorkRequestErrorsResponse>;
    /**
     * Lists the log entries for the work request with the given ID.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestLogEntry objects
     * contained in responses from the listWorkRequestLogs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogs(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<models.WorkRequestLogEntry>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequestLogs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestLogsResponses(request: requests.ListWorkRequestLogsRequest): AsyncIterableIterator<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects
     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequests(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<models.WorkRequestSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllWorkRequestsResponses(request: requests.ListWorkRequestsRequest): AsyncIterableIterator<responses.ListWorkRequestsResponse>;
    /**
     * Removes an installed package from a managed instance.
     *
     * @param RemovePackageFromManagedInstanceRequest
     * @return RemovePackageFromManagedInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/RemovePackageFromManagedInstance.ts.html |here} to see how to use RemovePackageFromManagedInstance API.
     */
    removePackageFromManagedInstance(removePackageFromManagedInstanceRequest: requests.RemovePackageFromManagedInstanceRequest): Promise<responses.RemovePackageFromManagedInstanceResponse>;
    /**
     * Removes a given list of Software Packages from a specific Software Source.
     *
     * @param RemovePackagesFromSoftwareSourceRequest
     * @return RemovePackagesFromSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/RemovePackagesFromSoftwareSource.ts.html |here} to see how to use RemovePackagesFromSoftwareSource API.
     */
    removePackagesFromSoftwareSource(removePackagesFromSoftwareSourceRequest: requests.RemovePackagesFromSoftwareSourceRequest): Promise<responses.RemovePackagesFromSoftwareSourceResponse>;
    /**
     * This will trigger an already created Scheduled Job to being executing
     * immediately instead of waiting for its next regularly scheduled time.
     *
     * @param RunScheduledJobNowRequest
     * @return RunScheduledJobNowResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/RunScheduledJobNow.ts.html |here} to see how to use RunScheduledJobNow API.
     */
    runScheduledJobNow(runScheduledJobNowRequest: requests.RunScheduledJobNowRequest): Promise<responses.RunScheduledJobNowResponse>;
    /**
     * Searches all of the available Software Sources and returns any/all Software Packages matching
     * the search criteria.
     *
     * @param SearchSoftwarePackagesRequest
     * @return SearchSoftwarePackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/SearchSoftwarePackages.ts.html |here} to see how to use SearchSoftwarePackages API.
     */
    searchSoftwarePackages(searchSoftwarePackagesRequest: requests.SearchSoftwarePackagesRequest): Promise<responses.SearchSoftwarePackagesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SoftwarePackageSearchSummary objects
     * contained in responses from the searchSoftwarePackages operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    searchAllSoftwarePackages(request: requests.SearchSoftwarePackagesRequest): AsyncIterableIterator<models.SoftwarePackageSearchSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the searchSoftwarePackages operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    searchAllSoftwarePackagesResponses(request: requests.SearchSoftwarePackagesRequest): AsyncIterableIterator<responses.SearchSoftwarePackagesResponse>;
    /**
     * This will force an already created Scheduled Job to skip its
     * next regularly scheduled execution
     *
     * @param SkipNextScheduledJobExecutionRequest
     * @return SkipNextScheduledJobExecutionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/SkipNextScheduledJobExecution.ts.html |here} to see how to use SkipNextScheduledJobExecution API.
     */
    skipNextScheduledJobExecution(skipNextScheduledJobExecutionRequest: requests.SkipNextScheduledJobExecutionRequest): Promise<responses.SkipNextScheduledJobExecutionResponse>;
    /**
     * Updates a specific Managed Instance Group.
     *
     * @param UpdateManagedInstanceGroupRequest
     * @return UpdateManagedInstanceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/UpdateManagedInstanceGroup.ts.html |here} to see how to use UpdateManagedInstanceGroup API.
     */
    updateManagedInstanceGroup(updateManagedInstanceGroupRequest: requests.UpdateManagedInstanceGroupRequest): Promise<responses.UpdateManagedInstanceGroupResponse>;
    /**
     * Updates an existing Scheduled Job on the management system.
     *
     * @param UpdateScheduledJobRequest
     * @return UpdateScheduledJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/UpdateScheduledJob.ts.html |here} to see how to use UpdateScheduledJob API.
     */
    updateScheduledJob(updateScheduledJobRequest: requests.UpdateScheduledJobRequest): Promise<responses.UpdateScheduledJobResponse>;
    /**
     * Updates an existing custom Software Source on the management system.
     *
     * @param UpdateSoftwareSourceRequest
     * @return UpdateSoftwareSourceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/osmanagement/UpdateSoftwareSource.ts.html |here} to see how to use UpdateSoftwareSource API.
     */
    updateSoftwareSource(updateSoftwareSourceRequest: requests.UpdateSoftwareSourceRequest): Promise<responses.UpdateSoftwareSourceResponse>;
}
