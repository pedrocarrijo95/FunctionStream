/**
 * OS Management API
 * API for the OS Management service. Use these API operations for working
with Managed instances and Managed instance groups.

 * OpenAPI spec version: 20190801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details for a software package
 */
export interface SoftwarePackage {
    /**
     * Package name
     */
    "displayName": string;
    /**
     * Unique identifier for the package. NOTE - This is not an OCID
     */
    "name": string;
    /**
     * Type of the package
     */
    "type": string;
    /**
     * Version of the package
     */
    "version": string;
    /**
     * the architecture for which this software was built
     */
    "architecture"?: string;
    /**
     * date of the last update to the package
     */
    "lastModifiedDate"?: string;
    /**
     * checksum of the package
     */
    "checksum"?: string;
    /**
     * type of the checksum
     */
    "checksumType"?: string;
    /**
     * description of the package
     */
    "description"?: string;
    /**
     * size of the package in bytes Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "sizeInBytes"?: number;
    /**
     * list of dependencies for the software package
     */
    "dependencies"?: Array<model.SoftwarePackageDependency>;
    /**
     * list of files for the software package
     */
    "files"?: Array<model.SoftwarePackageFile>;
    /**
     * list of software sources that provide the software package
     */
    "softwareSources"?: Array<model.SoftwareSourceId>;
}
export declare namespace SoftwarePackage {
    function getJsonObj(obj: SoftwarePackage): object;
}
