/**
 * Web Application Acceleration and Security Services API
 * OCI Web Application Acceleration and Security Services
 * OpenAPI spec version: 20181116
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details of the SSL certificate.
 * **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
 */
export interface Certificate {
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the certificate.
     */
    "id": string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the certificate's compartment.
     */
    "compartmentId": string;
    /**
     * The user-friendly name of the certificate.
     */
    "displayName": string;
    "issuedBy"?: string;
    "subjectName"?: model.CertificateSubjectName;
    "issuerName"?: model.CertificateIssuerName;
    /**
     * A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     */
    "serialNumber": string;
    /**
     * The version of the encoded certificate. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "version": number;
    /**
     * The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     */
    "signatureAlgorithm": string;
    /**
     * The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     */
    "timeNotValidBefore": Date;
    /**
     * The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     */
    "timeNotValidAfter": Date;
    "publicKeyInfo"?: model.CertificatePublicKeyInfo;
    /**
     * Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     */
    "extensions"?: Array<model.CertificateExtensions>;
    /**
      * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
  * For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: `{\"Department\": \"Finance\"}`
  *
      */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
      * Defined tags for this resource. Each key is predefined and scoped to a namespace.
  * For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
  *
      */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * The current lifecycle state of the SSL certificate.
     */
    "lifecycleState"?: model.LifecycleStates;
    /**
     * The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     */
    "timeCreated"?: Date;
    /**
     * This indicates whether trust verification was disabled during the creation of SSL certificate.
     * If `true` SSL certificate trust verification was disabled and this SSL certificate is most likely self-signed.
     *
     */
    "isTrustVerificationDisabled"?: boolean;
    /**
     * The data of the SSL certificate.
     */
    "certificateData"?: string;
}
export declare namespace Certificate {
    function getJsonObj(obj: Certificate): object;
}
