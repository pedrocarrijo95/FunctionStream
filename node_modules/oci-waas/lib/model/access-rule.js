"use strict";
/**
 * Web Application Acceleration and Security Services API
 * OCI Web Application Acceleration and Security Services
 * OpenAPI spec version: 20181116
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessRule = void 0;
const model = __importStar(require("../model"));
var AccessRule;
(function (AccessRule) {
    let Action;
    (function (Action) {
        Action["Allow"] = "ALLOW";
        Action["Detect"] = "DETECT";
        Action["Block"] = "BLOCK";
        Action["Bypass"] = "BYPASS";
        Action["Redirect"] = "REDIRECT";
        Action["ShowCaptcha"] = "SHOW_CAPTCHA";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Action["UnknownValue"] = "UNKNOWN_VALUE";
    })(Action = AccessRule.Action || (AccessRule.Action = {}));
    let BlockAction;
    (function (BlockAction) {
        BlockAction["SetResponseCode"] = "SET_RESPONSE_CODE";
        BlockAction["ShowErrorPage"] = "SHOW_ERROR_PAGE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        BlockAction["UnknownValue"] = "UNKNOWN_VALUE";
    })(BlockAction = AccessRule.BlockAction || (AccessRule.BlockAction = {}));
    let BypassChallenges;
    (function (BypassChallenges) {
        BypassChallenges["JsChallenge"] = "JS_CHALLENGE";
        BypassChallenges["DeviceFingerprintChallenge"] = "DEVICE_FINGERPRINT_CHALLENGE";
        BypassChallenges["HumanInteractionChallenge"] = "HUMAN_INTERACTION_CHALLENGE";
        BypassChallenges["Captcha"] = "CAPTCHA";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        BypassChallenges["UnknownValue"] = "UNKNOWN_VALUE";
    })(BypassChallenges = AccessRule.BypassChallenges || (AccessRule.BypassChallenges = {}));
    let RedirectResponseCode;
    (function (RedirectResponseCode) {
        RedirectResponseCode["MovedPermanently"] = "MOVED_PERMANENTLY";
        RedirectResponseCode["Found"] = "FOUND";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        RedirectResponseCode["UnknownValue"] = "UNKNOWN_VALUE";
    })(RedirectResponseCode = AccessRule.RedirectResponseCode || (AccessRule.RedirectResponseCode = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "criteria": obj.criteria
                ? obj.criteria.map(item => {
                    return model.AccessRuleCriteria.getJsonObj(item);
                })
                : undefined,
            "responseHeaderManipulation": obj.responseHeaderManipulation
                ? obj.responseHeaderManipulation.map(item => {
                    return model.HeaderManipulationAction.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    AccessRule.getJsonObj = getJsonObj;
})(AccessRule = exports.AccessRule || (exports.AccessRule = {}));
//# sourceMappingURL=access-rule.js.map