"use strict";
/**
 * Web Application Acceleration and Security Services API
 * OCI Web Application Acceleration and Security Services
 * OpenAPI spec version: 20181116
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyConfig = void 0;
const model = __importStar(require("../model"));
var PolicyConfig;
(function (PolicyConfig) {
    let TlsProtocols;
    (function (TlsProtocols) {
        TlsProtocols["TlsV1"] = "TLS_V1";
        TlsProtocols["TlsV11"] = "TLS_V1_1";
        TlsProtocols["TlsV12"] = "TLS_V1_2";
        TlsProtocols["TlsV13"] = "TLS_V1_3";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        TlsProtocols["UnknownValue"] = "UNKNOWN_VALUE";
    })(TlsProtocols = PolicyConfig.TlsProtocols || (PolicyConfig.TlsProtocols = {}));
    let ClientAddressHeader;
    (function (ClientAddressHeader) {
        ClientAddressHeader["XForwardedFor"] = "X_FORWARDED_FOR";
        ClientAddressHeader["XClientIp"] = "X_CLIENT_IP";
        ClientAddressHeader["XRealIp"] = "X_REAL_IP";
        ClientAddressHeader["ClientIp"] = "CLIENT_IP";
        ClientAddressHeader["TrueClientIp"] = "TRUE_CLIENT_IP";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ClientAddressHeader["UnknownValue"] = "UNKNOWN_VALUE";
    })(ClientAddressHeader = PolicyConfig.ClientAddressHeader || (PolicyConfig.ClientAddressHeader = {}));
    let CipherGroup;
    (function (CipherGroup) {
        CipherGroup["Default"] = "DEFAULT";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        CipherGroup["UnknownValue"] = "UNKNOWN_VALUE";
    })(CipherGroup = PolicyConfig.CipherGroup || (PolicyConfig.CipherGroup = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "loadBalancingMethod": obj.loadBalancingMethod
                ? model.LoadBalancingMethod.getJsonObj(obj.loadBalancingMethod)
                : undefined,
            "healthChecks": obj.healthChecks
                ? model.HealthCheck.getJsonObj(obj.healthChecks)
                : undefined
        });
        return jsonObj;
    }
    PolicyConfig.getJsonObj = getJsonObj;
})(PolicyConfig = exports.PolicyConfig || (exports.PolicyConfig = {}));
//# sourceMappingURL=policy-config.js.map