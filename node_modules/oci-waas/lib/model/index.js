"use strict";
/**
 * Web Application Acceleration and Security Services API
 * OCI Web Application Acceleration and Security Services
 * OpenAPI spec version: 20181116
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProtectionSettings = exports.ProtectionRuleExclusion = exports.ProtectionRuleAction = exports.ProtectionRule = exports.PolicyConfig = exports.OriginGroupOrigins = exports.OriginGroup = exports.Origin = exports.LoadBalancingMethod = exports.LifecycleStates = exports.JsChallenge = exports.HumanInteractionChallenge = exports.HttpRedirectTarget = exports.HttpRedirectSummary = exports.HttpRedirect = exports.HealthCheck = exports.HeaderManipulationAction = exports.Header = exports.GoodBot = exports.EdgeSubnet = exports.DeviceFingerprintChallenge = exports.CustomProtectionRuleSummary = exports.CustomProtectionRuleSetting = exports.CustomProtectionRule = exports.CreateWaasPolicyDetails = exports.CreateHttpRedirectDetails = exports.CreateCustomProtectionRuleDetails = exports.CreateCertificateDetails = exports.CreateAddressListDetails = exports.ChangeWaasPolicyCompartmentDetails = exports.ChangeHttpRedirectCompartmentDetails = exports.ChangeCustomProtectionRuleCompartmentDetails = exports.ChangeCertificateCompartmentDetails = exports.ChangeAddressListCompartmentDetails = exports.CertificateSummary = exports.CertificateSubjectName = exports.CertificatePublicKeyInfo = exports.CertificateIssuerName = exports.CertificateExtensions = exports.Certificate = exports.Captcha = exports.CachingRuleSummary = exports.CachingRuleCriteria = exports.CachingRule = exports.BlockChallengeSettings = exports.AddressRateLimiting = exports.AddressListSummary = exports.AddressList = exports.AccessRuleCriteria = exports.AccessRule = void 0;
exports.StickyCookieLoadBalancingMethod = exports.RoundRobinLoadBalancingMethod = exports.RemoveHttpResponseHeaderAction = exports.IPHashLoadBalancingMethod = exports.ExtendHttpResponseHeaderAction = exports.AddHttpResponseHeaderAction = exports.WorkRequestSummary = exports.WorkRequestStatusValues = exports.WorkRequestResource = exports.WorkRequestOperationTypes = exports.WorkRequestLogEntry = exports.WorkRequestError = exports.WorkRequest = exports.Whitelist = exports.WafTrafficDatum = exports.WafRequest = exports.WafMeterDatum = exports.WafLog = exports.WafConfigDetails = exports.WafConfig = exports.WafBlockedRequest = exports.WaasPolicySummary = exports.WaasPolicyCustomProtectionRuleSummary = exports.WaasPolicy = exports.UpdateWaasPolicyDetails = exports.UpdateHttpRedirectDetails = exports.UpdateCustomProtectionRuleDetails = exports.UpdateCertificateDetails = exports.UpdateAddressListDetails = exports.ThreatFeedAction = exports.ThreatFeed = exports.Recommendation = exports.PurgeCache = void 0;
const AccessRule = __importStar(require("./access-rule"));
exports.AccessRule = AccessRule.AccessRule;
const AccessRuleCriteria = __importStar(require("./access-rule-criteria"));
exports.AccessRuleCriteria = AccessRuleCriteria.AccessRuleCriteria;
const AddressList = __importStar(require("./address-list"));
exports.AddressList = AddressList.AddressList;
const AddressListSummary = __importStar(require("./address-list-summary"));
exports.AddressListSummary = AddressListSummary.AddressListSummary;
const AddressRateLimiting = __importStar(require("./address-rate-limiting"));
exports.AddressRateLimiting = AddressRateLimiting.AddressRateLimiting;
const BlockChallengeSettings = __importStar(require("./block-challenge-settings"));
exports.BlockChallengeSettings = BlockChallengeSettings.BlockChallengeSettings;
const CachingRule = __importStar(require("./caching-rule"));
exports.CachingRule = CachingRule.CachingRule;
const CachingRuleCriteria = __importStar(require("./caching-rule-criteria"));
exports.CachingRuleCriteria = CachingRuleCriteria.CachingRuleCriteria;
const CachingRuleSummary = __importStar(require("./caching-rule-summary"));
exports.CachingRuleSummary = CachingRuleSummary.CachingRuleSummary;
const Captcha = __importStar(require("./captcha"));
exports.Captcha = Captcha.Captcha;
const Certificate = __importStar(require("./certificate"));
exports.Certificate = Certificate.Certificate;
const CertificateExtensions = __importStar(require("./certificate_extensions"));
exports.CertificateExtensions = CertificateExtensions.CertificateExtensions;
const CertificateIssuerName = __importStar(require("./certificate-issuer-name"));
exports.CertificateIssuerName = CertificateIssuerName.CertificateIssuerName;
const CertificatePublicKeyInfo = __importStar(require("./certificate_public-key-info"));
exports.CertificatePublicKeyInfo = CertificatePublicKeyInfo.CertificatePublicKeyInfo;
const CertificateSubjectName = __importStar(require("./certificate-subject-name"));
exports.CertificateSubjectName = CertificateSubjectName.CertificateSubjectName;
const CertificateSummary = __importStar(require("./certificate-summary"));
exports.CertificateSummary = CertificateSummary.CertificateSummary;
const ChangeAddressListCompartmentDetails = __importStar(require("./change-address-list-compartment-details"));
exports.ChangeAddressListCompartmentDetails = ChangeAddressListCompartmentDetails.ChangeAddressListCompartmentDetails;
const ChangeCertificateCompartmentDetails = __importStar(require("./change-certificate-compartment-details"));
exports.ChangeCertificateCompartmentDetails = ChangeCertificateCompartmentDetails.ChangeCertificateCompartmentDetails;
const ChangeCustomProtectionRuleCompartmentDetails = __importStar(require("./change-custom-protection-rule-compartment-details"));
exports.ChangeCustomProtectionRuleCompartmentDetails = ChangeCustomProtectionRuleCompartmentDetails.ChangeCustomProtectionRuleCompartmentDetails;
const ChangeHttpRedirectCompartmentDetails = __importStar(require("./change-http-redirect-compartment-details"));
exports.ChangeHttpRedirectCompartmentDetails = ChangeHttpRedirectCompartmentDetails.ChangeHttpRedirectCompartmentDetails;
const ChangeWaasPolicyCompartmentDetails = __importStar(require("./change-waas-policy-compartment-details"));
exports.ChangeWaasPolicyCompartmentDetails = ChangeWaasPolicyCompartmentDetails.ChangeWaasPolicyCompartmentDetails;
const CreateAddressListDetails = __importStar(require("./create-address-list-details"));
exports.CreateAddressListDetails = CreateAddressListDetails.CreateAddressListDetails;
const CreateCertificateDetails = __importStar(require("./create-certificate-details"));
exports.CreateCertificateDetails = CreateCertificateDetails.CreateCertificateDetails;
const CreateCustomProtectionRuleDetails = __importStar(require("./create-custom-protection-rule-details"));
exports.CreateCustomProtectionRuleDetails = CreateCustomProtectionRuleDetails.CreateCustomProtectionRuleDetails;
const CreateHttpRedirectDetails = __importStar(require("./create-http-redirect-details"));
exports.CreateHttpRedirectDetails = CreateHttpRedirectDetails.CreateHttpRedirectDetails;
const CreateWaasPolicyDetails = __importStar(require("./create-waas-policy-details"));
exports.CreateWaasPolicyDetails = CreateWaasPolicyDetails.CreateWaasPolicyDetails;
const CustomProtectionRule = __importStar(require("./custom-protection-rule"));
exports.CustomProtectionRule = CustomProtectionRule.CustomProtectionRule;
const CustomProtectionRuleSetting = __importStar(require("./custom-protection-rule-setting"));
exports.CustomProtectionRuleSetting = CustomProtectionRuleSetting.CustomProtectionRuleSetting;
const CustomProtectionRuleSummary = __importStar(require("./custom-protection-rule-summary"));
exports.CustomProtectionRuleSummary = CustomProtectionRuleSummary.CustomProtectionRuleSummary;
const DeviceFingerprintChallenge = __importStar(require("./device-fingerprint-challenge"));
exports.DeviceFingerprintChallenge = DeviceFingerprintChallenge.DeviceFingerprintChallenge;
const EdgeSubnet = __importStar(require("./edge-subnet"));
exports.EdgeSubnet = EdgeSubnet.EdgeSubnet;
const GoodBot = __importStar(require("./good-bot"));
exports.GoodBot = GoodBot.GoodBot;
const Header = __importStar(require("./header"));
exports.Header = Header.Header;
const HeaderManipulationAction = __importStar(require("./header-manipulation-action"));
exports.HeaderManipulationAction = HeaderManipulationAction.HeaderManipulationAction;
const HealthCheck = __importStar(require("./health-check"));
exports.HealthCheck = HealthCheck.HealthCheck;
const HttpRedirect = __importStar(require("./http-redirect"));
exports.HttpRedirect = HttpRedirect.HttpRedirect;
const HttpRedirectSummary = __importStar(require("./http-redirect-summary"));
exports.HttpRedirectSummary = HttpRedirectSummary.HttpRedirectSummary;
const HttpRedirectTarget = __importStar(require("./http-redirect-target"));
exports.HttpRedirectTarget = HttpRedirectTarget.HttpRedirectTarget;
const HumanInteractionChallenge = __importStar(require("./human-interaction-challenge"));
exports.HumanInteractionChallenge = HumanInteractionChallenge.HumanInteractionChallenge;
const JsChallenge = __importStar(require("./js-challenge"));
exports.JsChallenge = JsChallenge.JsChallenge;
const LifecycleStates = __importStar(require("./lifecycle-states"));
exports.LifecycleStates = LifecycleStates.LifecycleStates;
const LoadBalancingMethod = __importStar(require("./load-balancing-method"));
exports.LoadBalancingMethod = LoadBalancingMethod.LoadBalancingMethod;
const Origin = __importStar(require("./origin"));
exports.Origin = Origin.Origin;
const OriginGroup = __importStar(require("./origin-group"));
exports.OriginGroup = OriginGroup.OriginGroup;
const OriginGroupOrigins = __importStar(require("./origin-group_origins"));
exports.OriginGroupOrigins = OriginGroupOrigins.OriginGroupOrigins;
const PolicyConfig = __importStar(require("./policy-config"));
exports.PolicyConfig = PolicyConfig.PolicyConfig;
const ProtectionRule = __importStar(require("./protection-rule"));
exports.ProtectionRule = ProtectionRule.ProtectionRule;
const ProtectionRuleAction = __importStar(require("./protection-rule-action"));
exports.ProtectionRuleAction = ProtectionRuleAction.ProtectionRuleAction;
const ProtectionRuleExclusion = __importStar(require("./protection-rule-exclusion"));
exports.ProtectionRuleExclusion = ProtectionRuleExclusion.ProtectionRuleExclusion;
const ProtectionSettings = __importStar(require("./protection-settings"));
exports.ProtectionSettings = ProtectionSettings.ProtectionSettings;
const PurgeCache = __importStar(require("./purge-cache"));
exports.PurgeCache = PurgeCache.PurgeCache;
const Recommendation = __importStar(require("./recommendation"));
exports.Recommendation = Recommendation.Recommendation;
const ThreatFeed = __importStar(require("./threat-feed"));
exports.ThreatFeed = ThreatFeed.ThreatFeed;
const ThreatFeedAction = __importStar(require("./threat-feed-action"));
exports.ThreatFeedAction = ThreatFeedAction.ThreatFeedAction;
const UpdateAddressListDetails = __importStar(require("./update-address-list-details"));
exports.UpdateAddressListDetails = UpdateAddressListDetails.UpdateAddressListDetails;
const UpdateCertificateDetails = __importStar(require("./update-certificate-details"));
exports.UpdateCertificateDetails = UpdateCertificateDetails.UpdateCertificateDetails;
const UpdateCustomProtectionRuleDetails = __importStar(require("./update-custom-protection-rule-details"));
exports.UpdateCustomProtectionRuleDetails = UpdateCustomProtectionRuleDetails.UpdateCustomProtectionRuleDetails;
const UpdateHttpRedirectDetails = __importStar(require("./update-http-redirect-details"));
exports.UpdateHttpRedirectDetails = UpdateHttpRedirectDetails.UpdateHttpRedirectDetails;
const UpdateWaasPolicyDetails = __importStar(require("./update-waas-policy-details"));
exports.UpdateWaasPolicyDetails = UpdateWaasPolicyDetails.UpdateWaasPolicyDetails;
const WaasPolicy = __importStar(require("./waas-policy"));
exports.WaasPolicy = WaasPolicy.WaasPolicy;
const WaasPolicyCustomProtectionRuleSummary = __importStar(require("./waas-policy-custom-protection-rule-summary"));
exports.WaasPolicyCustomProtectionRuleSummary = WaasPolicyCustomProtectionRuleSummary.WaasPolicyCustomProtectionRuleSummary;
const WaasPolicySummary = __importStar(require("./waas-policy-summary"));
exports.WaasPolicySummary = WaasPolicySummary.WaasPolicySummary;
const WafBlockedRequest = __importStar(require("./waf-blocked-request"));
exports.WafBlockedRequest = WafBlockedRequest.WafBlockedRequest;
const WafConfig = __importStar(require("./waf-config"));
exports.WafConfig = WafConfig.WafConfig;
const WafConfigDetails = __importStar(require("./waf-config-details"));
exports.WafConfigDetails = WafConfigDetails.WafConfigDetails;
const WafLog = __importStar(require("./waf-log"));
exports.WafLog = WafLog.WafLog;
const WafMeterDatum = __importStar(require("./waf-meter-datum"));
exports.WafMeterDatum = WafMeterDatum.WafMeterDatum;
const WafRequest = __importStar(require("./waf-request"));
exports.WafRequest = WafRequest.WafRequest;
const WafTrafficDatum = __importStar(require("./waf-traffic-datum"));
exports.WafTrafficDatum = WafTrafficDatum.WafTrafficDatum;
const Whitelist = __importStar(require("./whitelist"));
exports.Whitelist = Whitelist.Whitelist;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestLogEntry = __importStar(require("./work-request-log-entry"));
exports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
const WorkRequestOperationTypes = __importStar(require("./work-request-operation-types"));
exports.WorkRequestOperationTypes = WorkRequestOperationTypes.WorkRequestOperationTypes;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
const WorkRequestStatusValues = __importStar(require("./work-request-status-values"));
exports.WorkRequestStatusValues = WorkRequestStatusValues.WorkRequestStatusValues;
const WorkRequestSummary = __importStar(require("./work-request-summary"));
exports.WorkRequestSummary = WorkRequestSummary.WorkRequestSummary;
const AddHttpResponseHeaderAction = __importStar(require("./add-http-response-header-action"));
exports.AddHttpResponseHeaderAction = AddHttpResponseHeaderAction.AddHttpResponseHeaderAction;
const ExtendHttpResponseHeaderAction = __importStar(require("./extend-http-response-header-action"));
exports.ExtendHttpResponseHeaderAction = ExtendHttpResponseHeaderAction.ExtendHttpResponseHeaderAction;
const IPHashLoadBalancingMethod = __importStar(require("./i-phash-load-balancing-method"));
exports.IPHashLoadBalancingMethod = IPHashLoadBalancingMethod.IPHashLoadBalancingMethod;
const RemoveHttpResponseHeaderAction = __importStar(require("./remove-http-response-header-action"));
exports.RemoveHttpResponseHeaderAction = RemoveHttpResponseHeaderAction.RemoveHttpResponseHeaderAction;
const RoundRobinLoadBalancingMethod = __importStar(require("./round-robin-load-balancing-method"));
exports.RoundRobinLoadBalancingMethod = RoundRobinLoadBalancingMethod.RoundRobinLoadBalancingMethod;
const StickyCookieLoadBalancingMethod = __importStar(require("./sticky-cookie-load-balancing-method"));
exports.StickyCookieLoadBalancingMethod = StickyCookieLoadBalancingMethod.StickyCookieLoadBalancingMethod;
//# sourceMappingURL=index.js.map