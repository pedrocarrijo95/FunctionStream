/**
 * Web Application Acceleration and Security Services API
 * OCI Web Application Acceleration and Security Services
 * OpenAPI spec version: 20181116
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * A caching rule criteria condition and value.
 */
export interface CachingRuleCriteria {
    /**
      * The condition of the caching rule criteria.
  * - **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field.
  * <p>
  - **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field.
  * <p>
  - **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
  * <p>
  - **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
  * <p>
  URLs must start with a `/`. URLs can't contain restricted double slashes `//`. URLs can't contain the restricted `'` `&` `?` symbols. Resources to cache can only be specified by a URL, any query parameters are ignored.
      */
    "condition": CachingRuleCriteria.Condition;
    /**
     * The value of the caching rule criteria.
     */
    "value": string;
}
export declare namespace CachingRuleCriteria {
    enum Condition {
        UrlIs = "URL_IS",
        UrlStartsWith = "URL_STARTS_WITH",
        UrlPartEndsWith = "URL_PART_ENDS_WITH",
        UrlPartContains = "URL_PART_CONTAINS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: CachingRuleCriteria): object;
}
