"use strict";
/**
 * Autoscaling API
 * APIs for dynamically scaling Compute resources to meet application requirements. For more information about
autoscaling, see [Autoscaling](/Content/Compute/Tasks/autoscalinginstancepools.htm). For information about the
Compute service, see [Overview of the Compute Service](/Content/Compute/Concepts/computeoverview.htm).

**Note:** Autoscaling is not available in US Government Cloud tenancies. For more information, see
[Oracle Cloud Infrastructure US Government Cloud](/Content/General/Concepts/govoverview.htm).

 * OpenAPI spec version: 20181001
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateThresholdPolicyDetails = exports.UpdateScheduledPolicyDetails = exports.ThresholdPolicy = exports.ScheduledPolicy = exports.ResourcePowerAction = exports.InstancePoolResource = exports.CronExecutionSchedule = exports.CreateThresholdPolicyDetails = exports.CreateScheduledPolicyDetails = exports.UpdateConditionDetails = exports.UpdateAutoScalingPolicyDetails = exports.UpdateAutoScalingConfigurationDetails = exports.Threshold = exports.ResourceAction = exports.Resource = exports.Metric = exports.ExecutionSchedule = exports.CreateConditionDetails = exports.CreateAutoScalingPolicyDetails = exports.CreateAutoScalingConfigurationDetails = exports.Condition = exports.ChangeAutoScalingCompartmentDetails = exports.Capacity = exports.AutoScalingPolicySummary = exports.AutoScalingPolicy = exports.AutoScalingConfigurationSummary = exports.AutoScalingConfiguration = exports.Action = void 0;
const Action = __importStar(require("./action"));
exports.Action = Action.Action;
const AutoScalingConfiguration = __importStar(require("./auto-scaling-configuration"));
exports.AutoScalingConfiguration = AutoScalingConfiguration.AutoScalingConfiguration;
const AutoScalingConfigurationSummary = __importStar(require("./auto-scaling-configuration-summary"));
exports.AutoScalingConfigurationSummary = AutoScalingConfigurationSummary.AutoScalingConfigurationSummary;
const AutoScalingPolicy = __importStar(require("./auto-scaling-policy"));
exports.AutoScalingPolicy = AutoScalingPolicy.AutoScalingPolicy;
const AutoScalingPolicySummary = __importStar(require("./auto-scaling-policy-summary"));
exports.AutoScalingPolicySummary = AutoScalingPolicySummary.AutoScalingPolicySummary;
const Capacity = __importStar(require("./capacity"));
exports.Capacity = Capacity.Capacity;
const ChangeAutoScalingCompartmentDetails = __importStar(require("./change-auto-scaling-compartment-details"));
exports.ChangeAutoScalingCompartmentDetails = ChangeAutoScalingCompartmentDetails.ChangeAutoScalingCompartmentDetails;
const Condition = __importStar(require("./condition"));
exports.Condition = Condition.Condition;
const CreateAutoScalingConfigurationDetails = __importStar(require("./create-auto-scaling-configuration-details"));
exports.CreateAutoScalingConfigurationDetails = CreateAutoScalingConfigurationDetails.CreateAutoScalingConfigurationDetails;
const CreateAutoScalingPolicyDetails = __importStar(require("./create-auto-scaling-policy-details"));
exports.CreateAutoScalingPolicyDetails = CreateAutoScalingPolicyDetails.CreateAutoScalingPolicyDetails;
const CreateConditionDetails = __importStar(require("./create-condition-details"));
exports.CreateConditionDetails = CreateConditionDetails.CreateConditionDetails;
const ExecutionSchedule = __importStar(require("./execution-schedule"));
exports.ExecutionSchedule = ExecutionSchedule.ExecutionSchedule;
const Metric = __importStar(require("./metric"));
exports.Metric = Metric.Metric;
const Resource = __importStar(require("./resource"));
exports.Resource = Resource.Resource;
const ResourceAction = __importStar(require("./resource-action"));
exports.ResourceAction = ResourceAction.ResourceAction;
const Threshold = __importStar(require("./threshold"));
exports.Threshold = Threshold.Threshold;
const UpdateAutoScalingConfigurationDetails = __importStar(require("./update-auto-scaling-configuration-details"));
exports.UpdateAutoScalingConfigurationDetails = UpdateAutoScalingConfigurationDetails.UpdateAutoScalingConfigurationDetails;
const UpdateAutoScalingPolicyDetails = __importStar(require("./update-auto-scaling-policy-details"));
exports.UpdateAutoScalingPolicyDetails = UpdateAutoScalingPolicyDetails.UpdateAutoScalingPolicyDetails;
const UpdateConditionDetails = __importStar(require("./update-condition-details"));
exports.UpdateConditionDetails = UpdateConditionDetails.UpdateConditionDetails;
const CreateScheduledPolicyDetails = __importStar(require("./create-scheduled-policy-details"));
exports.CreateScheduledPolicyDetails = CreateScheduledPolicyDetails.CreateScheduledPolicyDetails;
const CreateThresholdPolicyDetails = __importStar(require("./create-threshold-policy-details"));
exports.CreateThresholdPolicyDetails = CreateThresholdPolicyDetails.CreateThresholdPolicyDetails;
const CronExecutionSchedule = __importStar(require("./cron-execution-schedule"));
exports.CronExecutionSchedule = CronExecutionSchedule.CronExecutionSchedule;
const InstancePoolResource = __importStar(require("./instance-pool-resource"));
exports.InstancePoolResource = InstancePoolResource.InstancePoolResource;
const ResourcePowerAction = __importStar(require("./resource-power-action"));
exports.ResourcePowerAction = ResourcePowerAction.ResourcePowerAction;
const ScheduledPolicy = __importStar(require("./scheduled-policy"));
exports.ScheduledPolicy = ScheduledPolicy.ScheduledPolicy;
const ThresholdPolicy = __importStar(require("./threshold-policy"));
exports.ThresholdPolicy = ThresholdPolicy.ThresholdPolicy;
const UpdateScheduledPolicyDetails = __importStar(require("./update-scheduled-policy-details"));
exports.UpdateScheduledPolicyDetails = UpdateScheduledPolicyDetails.UpdateScheduledPolicyDetails;
const UpdateThresholdPolicyDetails = __importStar(require("./update-threshold-policy-details"));
exports.UpdateThresholdPolicyDetails = UpdateThresholdPolicyDetails.UpdateThresholdPolicyDetails;
//# sourceMappingURL=index.js.map