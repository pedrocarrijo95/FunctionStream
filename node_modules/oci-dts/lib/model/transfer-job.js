"use strict";
/**
 * Data Transfer Service API
 * Data Transfer Service API Specification
 * OpenAPI spec version: 1.0.015
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferJob = void 0;
var TransferJob;
(function (TransferJob) {
    let DeviceType;
    (function (DeviceType) {
        DeviceType["Disk"] = "DISK";
        DeviceType["Appliance"] = "APPLIANCE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DeviceType["UnknownValue"] = "UNKNOWN_VALUE";
    })(DeviceType = TransferJob.DeviceType || (TransferJob.DeviceType = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Initiated"] = "INITIATED";
        LifecycleState["Preparing"] = "PREPARING";
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["Closed"] = "CLOSED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = TransferJob.LifecycleState || (TransferJob.LifecycleState = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    TransferJob.getJsonObj = getJsonObj;
})(TransferJob = exports.TransferJob || (exports.TransferJob = {}));
//# sourceMappingURL=transfer-job.js.map