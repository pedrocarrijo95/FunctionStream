/**
 * Data Transfer Service API
 * Data Transfer Service API Specification
 * OpenAPI spec version: 1.0.015
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { ApplianceExportJobWaiter } from "./applianceexportjob-waiter";
import { TransferApplianceWaiter } from "./transferappliance-waiter";
import { TransferApplianceEntitlementWaiter } from "./transferapplianceentitlement-waiter";
import { TransferDeviceWaiter } from "./transferdevice-waiter";
import { TransferJobWaiter } from "./transferjob-waiter";
import { TransferPackageWaiter } from "./transferpackage-waiter";
export declare enum ApplianceExportJobApiKeys {
}
export declare class ApplianceExportJobClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ApplianceExportJobWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ApplianceExportJobWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ApplianceExportJobWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ApplianceExportJobWaiter;
    /**
     * Moves a ApplianceExportJob into a different compartment.
     * @param ChangeApplianceExportJobCompartmentRequest
     * @return ChangeApplianceExportJobCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/ChangeApplianceExportJobCompartment.ts.html |here} to see how to use ChangeApplianceExportJobCompartment API.
     */
    changeApplianceExportJobCompartment(changeApplianceExportJobCompartmentRequest: requests.ChangeApplianceExportJobCompartmentRequest): Promise<responses.ChangeApplianceExportJobCompartmentResponse>;
    /**
     * Creates a new Appliance Export Job that corresponds with customer's logical dataset
     * @param CreateApplianceExportJobRequest
     * @return CreateApplianceExportJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/CreateApplianceExportJob.ts.html |here} to see how to use CreateApplianceExportJob API.
     */
    createApplianceExportJob(createApplianceExportJobRequest: requests.CreateApplianceExportJobRequest): Promise<responses.CreateApplianceExportJobResponse>;
    /**
     * deletes a Appliance Export Job
     * @param DeleteApplianceExportJobRequest
     * @return DeleteApplianceExportJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/DeleteApplianceExportJob.ts.html |here} to see how to use DeleteApplianceExportJob API.
     */
    deleteApplianceExportJob(deleteApplianceExportJobRequest: requests.DeleteApplianceExportJobRequest): Promise<responses.DeleteApplianceExportJobResponse>;
    /**
     * Describes a Appliance Export Job in detail
     * @param GetApplianceExportJobRequest
     * @return GetApplianceExportJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/GetApplianceExportJob.ts.html |here} to see how to use GetApplianceExportJob API.
     */
    getApplianceExportJob(getApplianceExportJobRequest: requests.GetApplianceExportJobRequest): Promise<responses.GetApplianceExportJobResponse>;
    /**
     * Lists Appliance Export Jobs in a given compartment
     * @param ListApplianceExportJobsRequest
     * @return ListApplianceExportJobsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/ListApplianceExportJobs.ts.html |here} to see how to use ListApplianceExportJobs API.
     */
    listApplianceExportJobs(listApplianceExportJobsRequest: requests.ListApplianceExportJobsRequest): Promise<responses.ListApplianceExportJobsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ApplianceExportJobSummary objects
     * contained in responses from the listApplianceExportJobs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllApplianceExportJobs(request: requests.ListApplianceExportJobsRequest): AsyncIterableIterator<models.ApplianceExportJobSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listApplianceExportJobs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllApplianceExportJobsResponses(request: requests.ListApplianceExportJobsRequest): AsyncIterableIterator<responses.ListApplianceExportJobsResponse>;
    /**
     * Updates a Appliance Export Job that corresponds with customer's logical dataset.
     * @param UpdateApplianceExportJobRequest
     * @return UpdateApplianceExportJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/UpdateApplianceExportJob.ts.html |here} to see how to use UpdateApplianceExportJob API.
     */
    updateApplianceExportJob(updateApplianceExportJobRequest: requests.UpdateApplianceExportJobRequest): Promise<responses.UpdateApplianceExportJobResponse>;
}
export declare enum ShippingVendorsApiKeys {
}
export declare class ShippingVendorsClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Lists available shipping vendors for Transfer Package delivery
     * @param ListShippingVendorsRequest
     * @return ListShippingVendorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/ListShippingVendors.ts.html |here} to see how to use ListShippingVendors API.
     */
    listShippingVendors(listShippingVendorsRequest: requests.ListShippingVendorsRequest): Promise<responses.ListShippingVendorsResponse>;
}
export declare enum TransferApplianceApiKeys {
}
export declare class TransferApplianceClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": TransferApplianceWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new TransferApplianceWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): TransferApplianceWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): TransferApplianceWaiter;
    /**
     * Create a new Transfer Appliance
     * @param CreateTransferApplianceRequest
     * @return CreateTransferApplianceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/CreateTransferAppliance.ts.html |here} to see how to use CreateTransferAppliance API.
     */
    createTransferAppliance(createTransferApplianceRequest: requests.CreateTransferApplianceRequest): Promise<responses.CreateTransferApplianceResponse>;
    /**
     * Creates an X.509 certificate from a public key
     * @param CreateTransferApplianceAdminCredentialsRequest
     * @return CreateTransferApplianceAdminCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/CreateTransferApplianceAdminCredentials.ts.html |here} to see how to use CreateTransferApplianceAdminCredentials API.
     */
    createTransferApplianceAdminCredentials(createTransferApplianceAdminCredentialsRequest: requests.CreateTransferApplianceAdminCredentialsRequest): Promise<responses.CreateTransferApplianceAdminCredentialsResponse>;
    /**
     * deletes a transfer Appliance
     * @param DeleteTransferApplianceRequest
     * @return DeleteTransferApplianceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/DeleteTransferAppliance.ts.html |here} to see how to use DeleteTransferAppliance API.
     */
    deleteTransferAppliance(deleteTransferApplianceRequest: requests.DeleteTransferApplianceRequest): Promise<responses.DeleteTransferApplianceResponse>;
    /**
     * Describes a transfer appliance in detail
     * @param GetTransferApplianceRequest
     * @return GetTransferApplianceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/GetTransferAppliance.ts.html |here} to see how to use GetTransferAppliance API.
     */
    getTransferAppliance(getTransferApplianceRequest: requests.GetTransferApplianceRequest): Promise<responses.GetTransferApplianceResponse>;
    /**
     * Gets the x.509 certificate for the Transfer Appliance's dedicated Certificate Authority (CA)
     * @param GetTransferApplianceCertificateAuthorityCertificateRequest
     * @return GetTransferApplianceCertificateAuthorityCertificateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/GetTransferApplianceCertificateAuthorityCertificate.ts.html |here} to see how to use GetTransferApplianceCertificateAuthorityCertificate API.
     */
    getTransferApplianceCertificateAuthorityCertificate(getTransferApplianceCertificateAuthorityCertificateRequest: requests.GetTransferApplianceCertificateAuthorityCertificateRequest): Promise<responses.GetTransferApplianceCertificateAuthorityCertificateResponse>;
    /**
     * Describes a transfer appliance encryptionPassphrase in detail
     * @param GetTransferApplianceEncryptionPassphraseRequest
     * @return GetTransferApplianceEncryptionPassphraseResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/GetTransferApplianceEncryptionPassphrase.ts.html |here} to see how to use GetTransferApplianceEncryptionPassphrase API.
     */
    getTransferApplianceEncryptionPassphrase(getTransferApplianceEncryptionPassphraseRequest: requests.GetTransferApplianceEncryptionPassphraseRequest): Promise<responses.GetTransferApplianceEncryptionPassphraseResponse>;
    /**
     * Lists Transfer Appliances associated with a transferJob
     * @param ListTransferAppliancesRequest
     * @return ListTransferAppliancesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/ListTransferAppliances.ts.html |here} to see how to use ListTransferAppliances API.
     */
    listTransferAppliances(listTransferAppliancesRequest: requests.ListTransferAppliancesRequest): Promise<responses.ListTransferAppliancesResponse>;
    /**
     * Updates a Transfer Appliance
     * @param UpdateTransferApplianceRequest
     * @return UpdateTransferApplianceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/UpdateTransferAppliance.ts.html |here} to see how to use UpdateTransferAppliance API.
     */
    updateTransferAppliance(updateTransferApplianceRequest: requests.UpdateTransferApplianceRequest): Promise<responses.UpdateTransferApplianceResponse>;
}
export declare enum TransferApplianceEntitlementApiKeys {
}
export declare class TransferApplianceEntitlementClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": TransferApplianceEntitlementWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new TransferApplianceEntitlementWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): TransferApplianceEntitlementWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): TransferApplianceEntitlementWaiter;
    /**
     * Create the Entitlement to use a Transfer Appliance. It requires some offline process of review and signatures before request is granted.
     * @param CreateTransferApplianceEntitlementRequest
     * @return CreateTransferApplianceEntitlementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/CreateTransferApplianceEntitlement.ts.html |here} to see how to use CreateTransferApplianceEntitlement API.
     */
    createTransferApplianceEntitlement(createTransferApplianceEntitlementRequest: requests.CreateTransferApplianceEntitlementRequest): Promise<responses.CreateTransferApplianceEntitlementResponse>;
    /**
     * Describes the Transfer Appliance Entitlement in detail
     * @param GetTransferApplianceEntitlementRequest
     * @return GetTransferApplianceEntitlementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/GetTransferApplianceEntitlement.ts.html |here} to see how to use GetTransferApplianceEntitlement API.
     */
    getTransferApplianceEntitlement(getTransferApplianceEntitlementRequest: requests.GetTransferApplianceEntitlementRequest): Promise<responses.GetTransferApplianceEntitlementResponse>;
    /**
     * Lists Transfer Transfer Appliance Entitlement
     * @param ListTransferApplianceEntitlementRequest
     * @return ListTransferApplianceEntitlementResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/ListTransferApplianceEntitlement.ts.html |here} to see how to use ListTransferApplianceEntitlement API.
     */
    listTransferApplianceEntitlement(listTransferApplianceEntitlementRequest: requests.ListTransferApplianceEntitlementRequest): Promise<responses.ListTransferApplianceEntitlementResponse>;
}
export declare enum TransferDeviceApiKeys {
}
export declare class TransferDeviceClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": TransferDeviceWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new TransferDeviceWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): TransferDeviceWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): TransferDeviceWaiter;
    /**
     * Create a new Transfer Device
     * @param CreateTransferDeviceRequest
     * @return CreateTransferDeviceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/CreateTransferDevice.ts.html |here} to see how to use CreateTransferDevice API.
     */
    createTransferDevice(createTransferDeviceRequest: requests.CreateTransferDeviceRequest): Promise<responses.CreateTransferDeviceResponse>;
    /**
     * deletes a transfer Device
     * @param DeleteTransferDeviceRequest
     * @return DeleteTransferDeviceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/DeleteTransferDevice.ts.html |here} to see how to use DeleteTransferDevice API.
     */
    deleteTransferDevice(deleteTransferDeviceRequest: requests.DeleteTransferDeviceRequest): Promise<responses.DeleteTransferDeviceResponse>;
    /**
     * Describes a transfer package in detail
     * @param GetTransferDeviceRequest
     * @return GetTransferDeviceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/GetTransferDevice.ts.html |here} to see how to use GetTransferDevice API.
     */
    getTransferDevice(getTransferDeviceRequest: requests.GetTransferDeviceRequest): Promise<responses.GetTransferDeviceResponse>;
    /**
     * Lists Transfer Devices associated with a transferJob
     * @param ListTransferDevicesRequest
     * @return ListTransferDevicesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/ListTransferDevices.ts.html |here} to see how to use ListTransferDevices API.
     */
    listTransferDevices(listTransferDevicesRequest: requests.ListTransferDevicesRequest): Promise<responses.ListTransferDevicesResponse>;
    /**
     * Updates a Transfer Device
     * @param UpdateTransferDeviceRequest
     * @return UpdateTransferDeviceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/UpdateTransferDevice.ts.html |here} to see how to use UpdateTransferDevice API.
     */
    updateTransferDevice(updateTransferDeviceRequest: requests.UpdateTransferDeviceRequest): Promise<responses.UpdateTransferDeviceResponse>;
}
export declare enum TransferJobApiKeys {
}
export declare class TransferJobClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": TransferJobWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new TransferJobWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): TransferJobWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): TransferJobWaiter;
    /**
     * Moves a TransferJob into a different compartment.
     * @param ChangeTransferJobCompartmentRequest
     * @return ChangeTransferJobCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/ChangeTransferJobCompartment.ts.html |here} to see how to use ChangeTransferJobCompartment API.
     */
    changeTransferJobCompartment(changeTransferJobCompartmentRequest: requests.ChangeTransferJobCompartmentRequest): Promise<responses.ChangeTransferJobCompartmentResponse>;
    /**
     * Create a new Transfer Job that corresponds with customer's logical dataset e.g. a DB or a filesystem.
     * @param CreateTransferJobRequest
     * @return CreateTransferJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/CreateTransferJob.ts.html |here} to see how to use CreateTransferJob API.
     */
    createTransferJob(createTransferJobRequest: requests.CreateTransferJobRequest): Promise<responses.CreateTransferJobResponse>;
    /**
     * deletes a transfer job
     * @param DeleteTransferJobRequest
     * @return DeleteTransferJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/DeleteTransferJob.ts.html |here} to see how to use DeleteTransferJob API.
     */
    deleteTransferJob(deleteTransferJobRequest: requests.DeleteTransferJobRequest): Promise<responses.DeleteTransferJobResponse>;
    /**
     * Describes a transfer job in detail
     * @param GetTransferJobRequest
     * @return GetTransferJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/GetTransferJob.ts.html |here} to see how to use GetTransferJob API.
     */
    getTransferJob(getTransferJobRequest: requests.GetTransferJobRequest): Promise<responses.GetTransferJobResponse>;
    /**
     * Lists Transfer Jobs in a given compartment
     * @param ListTransferJobsRequest
     * @return ListTransferJobsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/ListTransferJobs.ts.html |here} to see how to use ListTransferJobs API.
     */
    listTransferJobs(listTransferJobsRequest: requests.ListTransferJobsRequest): Promise<responses.ListTransferJobsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.TransferJobSummary objects
     * contained in responses from the listTransferJobs operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllTransferJobs(request: requests.ListTransferJobsRequest): AsyncIterableIterator<models.TransferJobSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listTransferJobs operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllTransferJobsResponses(request: requests.ListTransferJobsRequest): AsyncIterableIterator<responses.ListTransferJobsResponse>;
    /**
     * Updates a Transfer Job that corresponds with customer's logical dataset e.g. a DB or a filesystem.
     * @param UpdateTransferJobRequest
     * @return UpdateTransferJobResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/UpdateTransferJob.ts.html |here} to see how to use UpdateTransferJob API.
     */
    updateTransferJob(updateTransferJobRequest: requests.UpdateTransferJobRequest): Promise<responses.UpdateTransferJobResponse>;
}
export declare enum TransferPackageApiKeys {
}
export declare class TransferPackageClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": TransferPackageWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new TransferPackageWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): TransferPackageWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): TransferPackageWaiter;
    /**
     * Attaches Devices to a Transfer Package
     * @param AttachDevicesToTransferPackageRequest
     * @return AttachDevicesToTransferPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/AttachDevicesToTransferPackage.ts.html |here} to see how to use AttachDevicesToTransferPackage API.
     */
    attachDevicesToTransferPackage(attachDevicesToTransferPackageRequest: requests.AttachDevicesToTransferPackageRequest): Promise<responses.AttachDevicesToTransferPackageResponse>;
    /**
     * Create a new Transfer Package
     * @param CreateTransferPackageRequest
     * @return CreateTransferPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/CreateTransferPackage.ts.html |here} to see how to use CreateTransferPackage API.
     */
    createTransferPackage(createTransferPackageRequest: requests.CreateTransferPackageRequest): Promise<responses.CreateTransferPackageResponse>;
    /**
     * deletes a transfer Package
     * @param DeleteTransferPackageRequest
     * @return DeleteTransferPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/DeleteTransferPackage.ts.html |here} to see how to use DeleteTransferPackage API.
     */
    deleteTransferPackage(deleteTransferPackageRequest: requests.DeleteTransferPackageRequest): Promise<responses.DeleteTransferPackageResponse>;
    /**
     * Detaches Devices from a Transfer Package
     * @param DetachDevicesFromTransferPackageRequest
     * @return DetachDevicesFromTransferPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/DetachDevicesFromTransferPackage.ts.html |here} to see how to use DetachDevicesFromTransferPackage API.
     */
    detachDevicesFromTransferPackage(detachDevicesFromTransferPackageRequest: requests.DetachDevicesFromTransferPackageRequest): Promise<responses.DetachDevicesFromTransferPackageResponse>;
    /**
     * Describes a transfer package in detail
     * @param GetTransferPackageRequest
     * @return GetTransferPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/GetTransferPackage.ts.html |here} to see how to use GetTransferPackage API.
     */
    getTransferPackage(getTransferPackageRequest: requests.GetTransferPackageRequest): Promise<responses.GetTransferPackageResponse>;
    /**
     * Lists Transfer Packages associated with a transferJob
     * @param ListTransferPackagesRequest
     * @return ListTransferPackagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/ListTransferPackages.ts.html |here} to see how to use ListTransferPackages API.
     */
    listTransferPackages(listTransferPackagesRequest: requests.ListTransferPackagesRequest): Promise<responses.ListTransferPackagesResponse>;
    /**
     * Updates a Transfer Package
     * @param UpdateTransferPackageRequest
     * @return UpdateTransferPackageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/dts/UpdateTransferPackage.ts.html |here} to see how to use UpdateTransferPackage API.
     */
    updateTransferPackage(updateTransferPackageRequest: requests.UpdateTransferPackageRequest): Promise<responses.UpdateTransferPackageResponse>;
}
