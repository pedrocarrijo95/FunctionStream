/**
 * Data Integration API
 * Use the Data Integration Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The rule type config.
 */
export interface RuleTypeConfig extends model.DynamicTypeHandler {
    /**
     * The key of the object.
     */
    "key"?: string;
    /**
     * The model version of an object.
     */
    "modelVersion"?: string;
    "parentRef"?: model.ParentReference;
    /**
     * Reference to a typed object, this can be either a key value to an object within the document, a shall referenced to a `TypedObject` or a full `TypedObject` definition.
     */
    "scope"?: any;
    /**
     * Specifies whether it is ordered by rule.
     */
    "isOrderByRule"?: boolean;
    /**
     * The projection rules.
     */
    "projectionRules"?: Array<model.ProjectionRule>;
    "configValues"?: model.ConfigValues;
    /**
     * The status of an object that can be set to value 1 for shallow references across objects, other values reserved. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "objectStatus"?: number;
    "modelType": string;
}
export declare namespace RuleTypeConfig {
    function getJsonObj(obj: RuleTypeConfig, isParentJsonObj?: boolean): object;
    const modelType = "RULE_TYPE_CONFIGS";
}
