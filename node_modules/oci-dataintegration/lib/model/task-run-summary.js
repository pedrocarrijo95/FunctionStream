"use strict";
/**
 * Data Integration API
 * Use the Data Integration Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskRunSummary = void 0;
const model = __importStar(require("../model"));
var TaskRunSummary;
(function (TaskRunSummary) {
    let Status;
    (function (Status) {
        Status["NotStarted"] = "NOT_STARTED";
        Status["Queued"] = "QUEUED";
        Status["Running"] = "RUNNING";
        Status["Terminating"] = "TERMINATING";
        Status["Terminated"] = "TERMINATED";
        Status["Success"] = "SUCCESS";
        Status["Error"] = "ERROR";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Status["UnknownValue"] = "UNKNOWN_VALUE";
    })(Status = TaskRunSummary.Status || (TaskRunSummary.Status = {}));
    let TaskType;
    (function (TaskType) {
        TaskType["IntegrationTask"] = "INTEGRATION_TASK";
        TaskType["DataLoaderTask"] = "DATA_LOADER_TASK";
        TaskType["PipelineTask"] = "PIPELINE_TASK";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        TaskType["UnknownValue"] = "UNKNOWN_VALUE";
    })(TaskType = TaskRunSummary.TaskType || (TaskRunSummary.TaskType = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "parentRef": obj.parentRef ? model.ParentReference.getJsonObj(obj.parentRef) : undefined,
            "metadata": obj.metadata ? model.ObjectMetadata.getJsonObj(obj.metadata) : undefined
        });
        return jsonObj;
    }
    TaskRunSummary.getJsonObj = getJsonObj;
})(TaskRunSummary = exports.TaskRunSummary || (exports.TaskRunSummary = {}));
//# sourceMappingURL=task-run-summary.js.map