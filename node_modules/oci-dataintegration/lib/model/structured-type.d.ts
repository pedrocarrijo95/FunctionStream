/**
 * Data Integration API
 * Use the Data Integration Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A `StructuredType` object represents a data type that exists in a physical data asset object such as a table column, but is more complex. For example, an Oracle database `OBJECT` type. It can be composed of multiple `DataType` objects.
 */
export interface StructuredType {
    "schema"?: model.ConfiguredType | model.JavaType | model.DynamicType | model.DerivedType | model.DataType | model.CompositeType;
    /**
     * The data type.
     */
    "dtType"?: StructuredType.DtType;
    /**
     * The data type system name.
     */
    "typeSystemName"?: string;
    "configDefinition"?: model.ConfigDefinition;
}
export declare namespace StructuredType {
    enum DtType {
        Primitive = "PRIMITIVE",
        Structured = "STRUCTURED"
    }
    function getJsonObj(obj: StructuredType): object;
}
