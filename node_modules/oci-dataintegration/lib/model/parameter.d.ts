/**
 * Data Integration API
 * Use the Data Integration Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Parameters are created and assigned values that can be configured for each integration task.
 */
export interface Parameter extends model.TypedObject {
    "type"?: model.ConfiguredType | model.JavaType | model.DynamicType | model.DerivedType | model.DataType | model.CompositeType;
    /**
     * The default value of the parameter.
     */
    "defaultValue"?: any;
    /**
     * The default value of the parameter which can be an object in DIS, such as a data entity.
     */
    "rootObjectDefaultValue"?: any;
    /**
     * Specifies whether the parameter is input value.
     */
    "isInput"?: boolean;
    /**
     * Specifies whether the parameter is output value.
     */
    "isOutput"?: boolean;
    /**
     * The output aggregation type.
     */
    "outputAggregationType"?: Parameter.OutputAggregationType;
    /**
     * The type of value the parameter was created for.
     */
    "typeName"?: string;
    "modelType": string;
}
export declare namespace Parameter {
    enum OutputAggregationType {
        Min = "MIN",
        Max = "MAX",
        Count = "COUNT",
        Sum = "SUM",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Parameter, isParentJsonObj?: boolean): object;
    const modelType = "PARAMETER";
}
