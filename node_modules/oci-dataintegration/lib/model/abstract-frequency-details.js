"use strict";
/**
 * Data Integration API
 * Use the Data Integration Service APIs to perform common extract, load, and transform (ETL) tasks.
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractFrequencyDetails = void 0;
const model = __importStar(require("../model"));
var AbstractFrequencyDetails;
(function (AbstractFrequencyDetails) {
    let Frequency;
    (function (Frequency) {
        Frequency["Hourly"] = "HOURLY";
        Frequency["Daily"] = "DAILY";
        Frequency["Monthly"] = "MONTHLY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Frequency["UnknownValue"] = "UNKNOWN_VALUE";
    })(Frequency = AbstractFrequencyDetails.Frequency || (AbstractFrequencyDetails.Frequency = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        if ("modelType" in obj && obj.modelType) {
            switch (obj.modelType) {
                case "MONTHLY":
                    return model.MonthlyFrequencyDetails.getJsonObj(jsonObj, true);
                case "DAILY":
                    return model.DailyFrequencyDetails.getJsonObj(jsonObj, true);
                case "HOURLY":
                    return model.HourlyFrequencyDetails.getJsonObj(jsonObj, true);
                default:
                    throw Error("Unknown value for: " + obj.modelType);
            }
        }
        return jsonObj;
    }
    AbstractFrequencyDetails.getJsonObj = getJsonObj;
})(AbstractFrequencyDetails = exports.AbstractFrequencyDetails || (exports.AbstractFrequencyDetails = {}));
//# sourceMappingURL=abstract-frequency-details.js.map