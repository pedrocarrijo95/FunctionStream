/**
 * API Gateway API
 * API for the API Gateway service. Use this API to manage gateways, deployments, and related items.
For more information, see
[Overview of API Gateway](/iaas/Content/APIGateway/Concepts/apigatewayoverview.htm).

 * OpenAPI spec version: 20190501
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Connection details for an external RESP based cache store for Response Caching.
 *
 */
export interface ExternalRespCache extends model.ResponseCacheDetails {
    /**
     * The set of cache store members to connect to. At present only a single server is supported.
     *
     */
    "servers": Array<model.ResponseCacheRespServer>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
     *
     */
    "authenticationSecretId": string;
    /**
     * The version number of the authentication secret to use.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "authenticationSecretVersionNumber": number;
    /**
     * Defines if the connection should be over SSL.
     *
     */
    "isSslEnabled"?: boolean;
    /**
     * Defines whether or not to uphold SSL verification.
     *
     */
    "isSslVerifyDisabled"?: boolean;
    /**
     * Defines the timeout for establishing a connection with the Response Cache.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "connectTimeoutInMs"?: number;
    /**
     * Defines the timeout for reading data from the Response Cache.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "readTimeoutInMs"?: number;
    /**
     * Defines the timeout for transmitting data to the Response Cache.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "sendTimeoutInMs"?: number;
    "type": string;
}
export declare namespace ExternalRespCache {
    function getJsonObj(obj: ExternalRespCache, isParentJsonObj?: boolean): object;
    const type = "EXTERNAL_RESP_CACHE";
}
