/**
 * API Gateway API
 * API for the API Gateway service. Use this API to manage gateways, deployments, and related items.
For more information, see
[Overview of API Gateway](/iaas/Content/APIGateway/Concepts/apigatewayoverview.htm).

 * OpenAPI spec version: 20190501
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Validate a JWT token present in the header or query parameter. A valid
 * policy must specify either tokenHeader or tokenQueryParam.
 *
 */
export interface JwtAuthenticationPolicy extends model.AuthenticationPolicy {
    /**
     * The name of the header containing the authentication token.
     */
    "tokenHeader"?: string;
    /**
     * The name of the query parameter containing the authentication token.
     */
    "tokenQueryParam"?: string;
    /**
     * The authentication scheme that is to be used when authenticating
     * the token. This must to be provided if \"tokenHeader\" is specified.
     *
     */
    "tokenAuthScheme"?: string;
    /**
     * A list of parties that could have issued the token.
     */
    "issuers": Array<string>;
    /**
     * The list of intended recipients for the token.
     */
    "audiences": Array<string>;
    /**
     * A list of claims which should be validated to consider the token valid.
     */
    "verifyClaims"?: Array<model.JsonWebTokenClaim>;
    /**
     * The maximum expected time difference between the system clocks
     * of the token issuer and the API Gateway.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "maxClockSkewInSeconds"?: number;
    "publicKeys": model.StaticPublicKeySet | model.RemoteJsonWebKeySet;
    "type": string;
}
export declare namespace JwtAuthenticationPolicy {
    function getJsonObj(obj: JwtAuthenticationPolicy, isParentJsonObj?: boolean): object;
    const type = "JWT_AUTHENTICATION";
}
