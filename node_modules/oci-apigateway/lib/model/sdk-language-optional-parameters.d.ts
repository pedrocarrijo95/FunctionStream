/**
 * API Gateway API
 * API for the API Gateway service. Use this API to manage gateways, deployments, and related items.
For more information, see
[Overview of API Gateway](/iaas/Content/APIGateway/Concepts/apigatewayoverview.htm).

 * OpenAPI spec version: 20190501
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * List of additional applicable parameters for any given target language.
 */
export interface SdkLanguageOptionalParameters {
    /**
     * Name of the parameter.
     *
     */
    "paramName": string;
    /**
     * Display name of the parameter.
     *
     */
    "displayName"?: string;
    /**
     * Description for the parameter.
     *
     */
    "description"?: string;
    /**
     * Information on whether the parameter is required or not.
     *
     */
    "isRequired"?: boolean;
    /**
     * Maximum size as input value for this parameter.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "maxSize"?: number;
    /**
     * The input type for this param.
     * - Input type is ENUM when only specific list of input strings are allowed.
     * - Input type is EMAIL when input type is an email ID.
     * - Input type is URI when input type is an URI.
     * - Input type is STRING in all other cases.
     *
     */
    "inputType"?: SdkLanguageOptionalParameters.InputType;
    /**
     * List of allowed input values.
     * Example: `[{\"name\": \"name1\", \"description\": \"description1\"}, ...]`
     *
     */
    "allowedValues"?: Array<model.SdkLanguageOptionalParametersAllowedValue>;
}
export declare namespace SdkLanguageOptionalParameters {
    enum InputType {
        Enum = "ENUM",
        Email = "EMAIL",
        Uri = "URI",
        String = "STRING",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: SdkLanguageOptionalParameters): object;
}
