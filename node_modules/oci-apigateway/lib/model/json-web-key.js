"use strict";
/**
 * API Gateway API
 * API for the API Gateway service. Use this API to manage gateways, deployments, and related items.
For more information, see
[Overview of API Gateway](/iaas/Content/APIGateway/Concepts/apigatewayoverview.htm).

 * OpenAPI spec version: 20190501
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonWebKey = void 0;
const model = __importStar(require("../model"));
var JsonWebKey;
(function (JsonWebKey) {
    let Kty;
    (function (Kty) {
        Kty["Rsa"] = "RSA";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Kty["UnknownValue"] = "UNKNOWN_VALUE";
    })(Kty = JsonWebKey.Kty || (JsonWebKey.Kty = {}));
    let Use;
    (function (Use) {
        Use["Sig"] = "sig";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Use["UnknownValue"] = "UNKNOWN_VALUE";
    })(Use = JsonWebKey.Use || (JsonWebKey.Use = {}));
    let KeyOps;
    (function (KeyOps) {
        KeyOps["Verify"] = "verify";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        KeyOps["UnknownValue"] = "UNKNOWN_VALUE";
    })(KeyOps = JsonWebKey.KeyOps || (JsonWebKey.KeyOps = {}));
    function getJsonObj(obj, isParentJsonObj) {
        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj ? obj : model.StaticPublicKey.getJsonObj(obj))), {
            "key_ops": obj.keyOps
        });
        delete jsonObj.keyOps;
        return jsonObj;
    }
    JsonWebKey.getJsonObj = getJsonObj;
    JsonWebKey.format = "JSON_WEB_KEY";
})(JsonWebKey = exports.JsonWebKey || (exports.JsonWebKey = {}));
//# sourceMappingURL=json-web-key.js.map