"use strict";
/**
 * Blockchain Platform Control Plane API
 * Blockchain Platform Control Plane API
 * OpenAPI spec version: 20191010
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockchainPlatform = void 0;
const model = __importStar(require("../model"));
var BlockchainPlatform;
(function (BlockchainPlatform) {
    let PlatformRole;
    (function (PlatformRole) {
        PlatformRole["Founder"] = "FOUNDER";
        PlatformRole["Participant"] = "PARTICIPANT";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PlatformRole["UnknownValue"] = "UNKNOWN_VALUE";
    })(PlatformRole = BlockchainPlatform.PlatformRole || (BlockchainPlatform.PlatformRole = {}));
    let ComputeShape;
    (function (ComputeShape) {
        ComputeShape["Standard"] = "STANDARD";
        ComputeShape["EnterpriseSmall"] = "ENTERPRISE_SMALL";
        ComputeShape["EnterpriseMedium"] = "ENTERPRISE_MEDIUM";
        ComputeShape["EnterpriseLarge"] = "ENTERPRISE_LARGE";
        ComputeShape["EnterpriseExtraLarge"] = "ENTERPRISE_EXTRA_LARGE";
        ComputeShape["EnterpriseCustom"] = "ENTERPRISE_CUSTOM";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ComputeShape["UnknownValue"] = "UNKNOWN_VALUE";
    })(ComputeShape = BlockchainPlatform.ComputeShape || (BlockchainPlatform.ComputeShape = {}));
    let PlatformShapeType;
    (function (PlatformShapeType) {
        PlatformShapeType["Default"] = "DEFAULT";
        PlatformShapeType["Custom"] = "CUSTOM";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PlatformShapeType["UnknownValue"] = "UNKNOWN_VALUE";
    })(PlatformShapeType = BlockchainPlatform.PlatformShapeType || (BlockchainPlatform.PlatformShapeType = {}));
    let LoadBalancerShape;
    (function (LoadBalancerShape) {
        LoadBalancerShape["Lb100Mbps"] = "LB_100_MBPS";
        LoadBalancerShape["Lb400Mbps"] = "LB_400_MBPS";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LoadBalancerShape["UnknownValue"] = "UNKNOWN_VALUE";
    })(LoadBalancerShape = BlockchainPlatform.LoadBalancerShape || (BlockchainPlatform.LoadBalancerShape = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Creating"] = "CREATING";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Active"] = "ACTIVE";
        LifecycleState["Deleting"] = "DELETING";
        LifecycleState["Deleted"] = "DELETED";
        LifecycleState["Scaling"] = "SCALING";
        LifecycleState["Inactive"] = "INACTIVE";
        LifecycleState["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = BlockchainPlatform.LifecycleState || (BlockchainPlatform.LifecycleState = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "componentDetails": obj.componentDetails
                ? model.BlockchainPlatformComponentDetails.getJsonObj(obj.componentDetails)
                : undefined,
            "replicas": obj.replicas ? model.ReplicaDetails.getJsonObj(obj.replicas) : undefined,
            "hostOcpuUtilizationInfo": obj.hostOcpuUtilizationInfo
                ? obj.hostOcpuUtilizationInfo.map(item => {
                    return model.OcpuUtilizationInfo.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    BlockchainPlatform.getJsonObj = getJsonObj;
})(BlockchainPlatform = exports.BlockchainPlatform || (exports.BlockchainPlatform = {}));
//# sourceMappingURL=blockchain-platform.js.map