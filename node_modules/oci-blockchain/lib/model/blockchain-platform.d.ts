/**
 * Blockchain Platform Control Plane API
 * Blockchain Platform Control Plane API
 * OpenAPI spec version: 20191010
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Blockchain Platform Instance Description.
 */
export interface BlockchainPlatform {
    /**
     * unique identifier that is immutable on creation
     */
    "id": string;
    /**
     * Platform Instance Display name, can be renamed
     */
    "displayName": string;
    /**
     * Compartment Identifier
     */
    "compartmentId": string;
    /**
     * Platform Instance Description
     */
    "description"?: string;
    /**
     * Bring your own license
     */
    "isByol"?: boolean;
    /**
     * The time the the Platform Instance was created. An RFC3339 formatted datetime string
     */
    "timeCreated"?: Date;
    /**
     * The time the Platform Instance was updated. An RFC3339 formatted datetime string
     */
    "timeUpdated"?: Date;
    /**
     * The version of the Platform Instance.
     */
    "serviceVersion"?: string;
    /**
     * Role of platform - FOUNDER or PARTICIPANT
     */
    "platformRole": BlockchainPlatform.PlatformRole;
    /**
     * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
     */
    "computeShape": BlockchainPlatform.ComputeShape;
    /**
     * Type of Platform shape - DEFAULT or CUSTOM
     */
    "platformShapeType"?: BlockchainPlatform.PlatformShapeType;
    /**
     * Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     */
    "loadBalancerShape"?: BlockchainPlatform.LoadBalancerShape;
    /**
     * Service endpoint URL, valid post-provisioning
     */
    "serviceEndpoint"?: string;
    /**
     * The current state of the Platform Instance.
     */
    "lifecycleState"?: BlockchainPlatform.LifecycleState;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    "lifecycleDetails"?: string;
    /**
     * Storage size in TBs Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "storageSizeInTBs"?: number;
    /**
     * Storage used in TBs Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "storageUsedInTBs"?: number;
    /**
     * True for multi-AD blockchain plaforms, false for single-AD
     */
    "isMultiAD"?: boolean;
    /**
     * Number of total OCPUs allocated to the platform cluster Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalOcpuCapacity"?: number;
    "componentDetails"?: model.BlockchainPlatformComponentDetails;
    "replicas"?: model.ReplicaDetails;
    /**
     * List of OcpuUtilization for all hosts
     */
    "hostOcpuUtilizationInfo"?: Array<model.OcpuUtilizationInfo>;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: `{\"bar-key\": \"value\"}`
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace BlockchainPlatform {
    enum PlatformRole {
        Founder = "FOUNDER",
        Participant = "PARTICIPANT",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum ComputeShape {
        Standard = "STANDARD",
        EnterpriseSmall = "ENTERPRISE_SMALL",
        EnterpriseMedium = "ENTERPRISE_MEDIUM",
        EnterpriseLarge = "ENTERPRISE_LARGE",
        EnterpriseExtraLarge = "ENTERPRISE_EXTRA_LARGE",
        EnterpriseCustom = "ENTERPRISE_CUSTOM",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum PlatformShapeType {
        Default = "DEFAULT",
        Custom = "CUSTOM",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LoadBalancerShape {
        Lb100Mbps = "LB_100_MBPS",
        Lb400Mbps = "LB_400_MBPS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleState {
        Creating = "CREATING",
        Updating = "UPDATING",
        Active = "ACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Scaling = "SCALING",
        Inactive = "INACTIVE",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: BlockchainPlatform): object;
}
