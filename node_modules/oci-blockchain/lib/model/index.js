"use strict";
/**
 * Blockchain Platform Control Plane API
 * Blockchain Platform Control Plane API
 * OpenAPI spec version: 20191010
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkRequestSummary = exports.WorkRequestResourceSubTypeDetail = exports.WorkRequestResource = exports.WorkRequestLogEntryCollection = exports.WorkRequestLogEntry = exports.WorkRequestErrorCollection = exports.WorkRequestError = exports.WorkRequestCollection = exports.WorkRequest = exports.UpdatePeerDetails = exports.UpdateOsnDetails = exports.UpdateBlockchainPlatformDetails = exports.ScaledPlatformMeteringPreview = exports.ScaledBlockchainPlatformPreview = exports.ScaleStorageDetails = exports.ScaleBlockchainPlatformDetails = exports.ReplicaDetails = exports.PeerSummary = exports.PeerRole = exports.PeerCollection = exports.Peer = exports.OsnSummary = exports.OsnCollection = exports.Osn = exports.OcpuUtilizationInfo = exports.OcpuAllocationNumberParam = exports.ModifyPeerDetails = exports.MetadataDetails = exports.CreatePeerDetails = exports.CreateOsnDetails = exports.CreateBlockchainPlatformDetails = exports.ChangeBlockchainPlatformCompartmentDetails = exports.BlockchainPlatformSummary = exports.BlockchainPlatformComponentDetails = exports.BlockchainPlatformCollection = exports.BlockchainPlatformByHostname = exports.BlockchainPlatform = exports.AvailabilityDomain = void 0;
const AvailabilityDomain = __importStar(require("./availability-domain"));
exports.AvailabilityDomain = AvailabilityDomain.AvailabilityDomain;
const BlockchainPlatform = __importStar(require("./blockchain-platform"));
exports.BlockchainPlatform = BlockchainPlatform.BlockchainPlatform;
const BlockchainPlatformByHostname = __importStar(require("./blockchain-platform-by-hostname"));
exports.BlockchainPlatformByHostname = BlockchainPlatformByHostname.BlockchainPlatformByHostname;
const BlockchainPlatformCollection = __importStar(require("./blockchain-platform-collection"));
exports.BlockchainPlatformCollection = BlockchainPlatformCollection.BlockchainPlatformCollection;
const BlockchainPlatformComponentDetails = __importStar(require("./blockchain-platform-component-details"));
exports.BlockchainPlatformComponentDetails = BlockchainPlatformComponentDetails.BlockchainPlatformComponentDetails;
const BlockchainPlatformSummary = __importStar(require("./blockchain-platform-summary"));
exports.BlockchainPlatformSummary = BlockchainPlatformSummary.BlockchainPlatformSummary;
const ChangeBlockchainPlatformCompartmentDetails = __importStar(require("./change-blockchain-platform-compartment-details"));
exports.ChangeBlockchainPlatformCompartmentDetails = ChangeBlockchainPlatformCompartmentDetails.ChangeBlockchainPlatformCompartmentDetails;
const CreateBlockchainPlatformDetails = __importStar(require("./create-blockchain-platform-details"));
exports.CreateBlockchainPlatformDetails = CreateBlockchainPlatformDetails.CreateBlockchainPlatformDetails;
const CreateOsnDetails = __importStar(require("./create-osn-details"));
exports.CreateOsnDetails = CreateOsnDetails.CreateOsnDetails;
const CreatePeerDetails = __importStar(require("./create-peer-details"));
exports.CreatePeerDetails = CreatePeerDetails.CreatePeerDetails;
const MetadataDetails = __importStar(require("./metadata-details"));
exports.MetadataDetails = MetadataDetails.MetadataDetails;
const ModifyPeerDetails = __importStar(require("./modify-peer-details"));
exports.ModifyPeerDetails = ModifyPeerDetails.ModifyPeerDetails;
const OcpuAllocationNumberParam = __importStar(require("./ocpu-allocation-number-param"));
exports.OcpuAllocationNumberParam = OcpuAllocationNumberParam.OcpuAllocationNumberParam;
const OcpuUtilizationInfo = __importStar(require("./ocpu-utilization-info"));
exports.OcpuUtilizationInfo = OcpuUtilizationInfo.OcpuUtilizationInfo;
const Osn = __importStar(require("./osn"));
exports.Osn = Osn.Osn;
const OsnCollection = __importStar(require("./osn-collection"));
exports.OsnCollection = OsnCollection.OsnCollection;
const OsnSummary = __importStar(require("./osn-summary"));
exports.OsnSummary = OsnSummary.OsnSummary;
const Peer = __importStar(require("./peer"));
exports.Peer = Peer.Peer;
const PeerCollection = __importStar(require("./peer-collection"));
exports.PeerCollection = PeerCollection.PeerCollection;
const PeerRole = __importStar(require("./peer-role"));
exports.PeerRole = PeerRole.PeerRole;
const PeerSummary = __importStar(require("./peer-summary"));
exports.PeerSummary = PeerSummary.PeerSummary;
const ReplicaDetails = __importStar(require("./replica-details"));
exports.ReplicaDetails = ReplicaDetails.ReplicaDetails;
const ScaleBlockchainPlatformDetails = __importStar(require("./scale-blockchain-platform-details"));
exports.ScaleBlockchainPlatformDetails = ScaleBlockchainPlatformDetails.ScaleBlockchainPlatformDetails;
const ScaleStorageDetails = __importStar(require("./scale-storage-details"));
exports.ScaleStorageDetails = ScaleStorageDetails.ScaleStorageDetails;
const ScaledBlockchainPlatformPreview = __importStar(require("./scaled-blockchain-platform-preview"));
exports.ScaledBlockchainPlatformPreview = ScaledBlockchainPlatformPreview.ScaledBlockchainPlatformPreview;
const ScaledPlatformMeteringPreview = __importStar(require("./scaled-platform-metering-preview"));
exports.ScaledPlatformMeteringPreview = ScaledPlatformMeteringPreview.ScaledPlatformMeteringPreview;
const UpdateBlockchainPlatformDetails = __importStar(require("./update-blockchain-platform-details"));
exports.UpdateBlockchainPlatformDetails = UpdateBlockchainPlatformDetails.UpdateBlockchainPlatformDetails;
const UpdateOsnDetails = __importStar(require("./update-osn-details"));
exports.UpdateOsnDetails = UpdateOsnDetails.UpdateOsnDetails;
const UpdatePeerDetails = __importStar(require("./update-peer-details"));
exports.UpdatePeerDetails = UpdatePeerDetails.UpdatePeerDetails;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestCollection = __importStar(require("./work-request-collection"));
exports.WorkRequestCollection = WorkRequestCollection.WorkRequestCollection;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestErrorCollection = __importStar(require("./work-request-error-collection"));
exports.WorkRequestErrorCollection = WorkRequestErrorCollection.WorkRequestErrorCollection;
const WorkRequestLogEntry = __importStar(require("./work-request-log-entry"));
exports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
const WorkRequestLogEntryCollection = __importStar(require("./work-request-log-entry-collection"));
exports.WorkRequestLogEntryCollection = WorkRequestLogEntryCollection.WorkRequestLogEntryCollection;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
const WorkRequestResourceSubTypeDetail = __importStar(require("./work-request-resource-sub-type-detail"));
exports.WorkRequestResourceSubTypeDetail = WorkRequestResourceSubTypeDetail.WorkRequestResourceSubTypeDetail;
const WorkRequestSummary = __importStar(require("./work-request-summary"));
exports.WorkRequestSummary = WorkRequestSummary.WorkRequestSummary;
//# sourceMappingURL=index.js.map