/**
 * Blockchain Platform Control Plane API
 * Blockchain Platform Control Plane API
 * OpenAPI spec version: 20191010
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Blockchain Platform details for creating a new service.
 */
export interface CreateBlockchainPlatformDetails {
    /**
     * Platform Instance Display name, can be renamed
     */
    "displayName": string;
    /**
     * Compartment Identifier
     */
    "compartmentId": string;
    /**
     * Platform Instance Description
     */
    "description"?: string;
    /**
     * Role of platform - founder or participant
     */
    "platformRole": string;
    /**
     * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
     */
    "computeShape": string;
    /**
     * Bring your own license
     */
    "isByol"?: boolean;
    /**
     * IDCS access token with Identity Domain Administrator role
     */
    "idcsAccessToken": string;
    /**
     * Identifier for a federated user
     */
    "federatedUserId"?: string;
    /**
     * Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file.
     * The Archive file is a zip file containing third part CA Certificates,
     * the ca key and certificate files used when issuing enrollment certificates
     * (ECerts) and transaction certificates (TCerts). The chainfile (if it exists)
     * contains the certificate chain which should be trusted for this CA, where
     * the 1st in the chain is always the root CA certificate.
     * File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
     *
     */
    "caCertArchiveText"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: `{\"bar-key\": \"value\"}`
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace CreateBlockchainPlatformDetails {
    function getJsonObj(obj: CreateBlockchainPlatformDetails): object;
}
