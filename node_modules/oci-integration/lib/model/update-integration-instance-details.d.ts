/**
 * Oracle Integration API
 * Oracle Integration API.
 * OpenAPI spec version: 20190131
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The information to be updated.
 */
export interface UpdateIntegrationInstanceDetails {
    /**
     * Integration Instance Identifier.
     */
    "displayName"?: string;
    /**
     * Standard or Enterprise type
     */
    "integrationInstanceType"?: UpdateIntegrationInstanceDetails.IntegrationInstanceType;
    /**
     * Simple key-value pair that is applied without any predefined name,
     * type or scope. Exists for cross-compatibility only.
     * Example: `{\"bar-key\": \"value\"}`
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to
     * namespaces.
     * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Bring your own license.
     */
    "isByol"?: boolean;
    /**
     * The number of configured message packs Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "messagePacks"?: number;
    /**
     * The file server is enabled or not.
     */
    "isFileServerEnabled"?: boolean;
    /**
     * Visual Builder is enabled or not.
     */
    "isVisualBuilderEnabled"?: boolean;
    "customEndpoint"?: model.UpdateCustomEndpointDetails;
    /**
     * A list of alternate custom endpoints to be used for the integration instance URL
     * (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     *
     */
    "alternateCustomEndpoints"?: Array<model.UpdateCustomEndpointDetails>;
}
export declare namespace UpdateIntegrationInstanceDetails {
    enum IntegrationInstanceType {
        Standard = "STANDARD",
        Enterprise = "ENTERPRISE"
    }
    function getJsonObj(obj: UpdateIntegrationInstanceDetails): object;
}
