/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Details of Upload File.
 */
export interface UploadFileSummary {
    /**
     * Unique internal identifier to refer upload file.
     */
    "reference": string;
    /**
     * Name of the file
     */
    "name": string;
    /**
     * Processing status of the file.
     */
    "status"?: UploadFileSummary.Status;
    /**
     * Number of estimated chunks for this file. A chunk is a portion of the log file used for the processing. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "totalChunks"?: number;
    /**
     * Number of chunks processed. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "chunksConsumed"?: number;
    /**
     * Number of chunks processed successfully. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "chunksSuccess"?: number;
    /**
     * Number of chunks failed processing. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "chunksFail"?: number;
    /**
     * The time when this file processing started.
     */
    "timeStarted"?: Date;
    /**
     * Name of the log source used for processing this file.
     */
    "sourceName"?: string;
    /**
     * Name of the entity type.
     */
    "entityType"?: string;
    /**
     * Name of the entity associated with the file.
     */
    "entityName"?: string;
    /**
     * (Deprecated) Name of the log namespace associated with the file.
     */
    "logNamespace"?: string;
    /**
     * Log group OCID associated with the file.
     */
    "logGroupId"?: string;
    /**
     * Name of the log group associated with the file.
     */
    "logGroupName"?: string;
    /**
     * The details about upload processing failure.
     */
    "failureDetails"?: string;
}
export declare namespace UploadFileSummary {
    enum Status {
        InProgress = "IN_PROGRESS",
        Successful = "SUCCESSFUL",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: UploadFileSummary): object;
}
