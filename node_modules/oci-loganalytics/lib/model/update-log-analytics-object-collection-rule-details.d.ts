/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Configuration of the collection rule to be updated.
 *
 */
export interface UpdateLogAnalyticsObjectCollectionRuleDetails {
    /**
     * A string that describes the details of the rule.
     * Avoid entering confidential information.
     *
     */
    "description"?: string;
    /**
     * Logging Analytics Log group OCID to associate the processed logs with.
     */
    "logGroupId"?: string;
    /**
     * Name of the Logging Analytics Source to use for the processing.
     */
    "logSourceName"?: string;
    /**
     * Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     */
    "entityId"?: string;
    /**
     * An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing.
     * It is recommended to set this value as ISO_8859_1 when configuring content of the objects having more numeric characters,
     * and very few alphabets.
     * For e.g. this applies when configuring VCN Flow Logs.
     *
     */
    "charEncoding"?: string;
    /**
     * Whether or not this rule is currently enabled.
     *
     */
    "isEnabled"?: boolean;
    /**
     * Use this to override some property values which are defined at bucket level to the scope of object.
     * Supported propeties for override are: logSourceName, charEncoding, entityId.
     * Supported matchType for override are \"contains\".
     *
     */
    "overrides"?: {
        [key: string]: Array<model.PropertyOverride>;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: `{\"bar-key\": \"value\"}`
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
}
export declare namespace UpdateLogAnalyticsObjectCollectionRuleDetails {
    function getJsonObj(obj: UpdateLogAnalyticsObjectCollectionRuleDetails): object;
}
