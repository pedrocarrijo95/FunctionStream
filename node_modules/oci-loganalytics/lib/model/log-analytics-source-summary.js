"use strict";
/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogAnalyticsSourceSummary = void 0;
const model = __importStar(require("../model"));
var LogAnalyticsSourceSummary;
(function (LogAnalyticsSourceSummary) {
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "labelConditions": obj.labelConditions
                ? obj.labelConditions.map(item => {
                    return model.LogAnalyticsSourceLabelCondition.getJsonObj(item);
                })
                : undefined,
            "associationEntity": obj.associationEntity
                ? obj.associationEntity.map(item => {
                    return model.LogAnalyticsAssociation.getJsonObj(item);
                })
                : undefined,
            "dataFilterDefinitions": obj.dataFilterDefinitions
                ? obj.dataFilterDefinitions.map(item => {
                    return model.LogAnalyticsSourceDataFilter.getJsonObj(item);
                })
                : undefined,
            "extendedFieldDefinitions": obj.extendedFieldDefinitions
                ? obj.extendedFieldDefinitions.map(item => {
                    return model.LogAnalyticsSourceExtendedFieldDefinition.getJsonObj(item);
                })
                : undefined,
            "labels": obj.labels
                ? obj.labels.map(item => {
                    return model.LogAnalyticsLabelView.getJsonObj(item);
                })
                : undefined,
            "metricDefinitions": obj.metricDefinitions
                ? obj.metricDefinitions.map(item => {
                    return model.LogAnalyticsMetric.getJsonObj(item);
                })
                : undefined,
            "metrics": obj.metrics
                ? obj.metrics.map(item => {
                    return model.LogAnalyticsSourceMetric.getJsonObj(item);
                })
                : undefined,
            "oobParsers": obj.oobParsers
                ? obj.oobParsers.map(item => {
                    return model.LogAnalyticsParser.getJsonObj(item);
                })
                : undefined,
            "parameters": obj.parameters
                ? obj.parameters.map(item => {
                    return model.LogAnalyticsParameter.getJsonObj(item);
                })
                : undefined,
            "patterns": obj.patterns
                ? obj.patterns.map(item => {
                    return model.LogAnalyticsSourcePattern.getJsonObj(item);
                })
                : undefined,
            "functions": obj.functions
                ? obj.functions.map(item => {
                    return model.LogAnalyticsSourceFunction.getJsonObj(item);
                })
                : undefined,
            "parsers": obj.parsers
                ? obj.parsers.map(item => {
                    return model.LogAnalyticsParser.getJsonObj(item);
                })
                : undefined,
            "metadataFields": obj.metadataFields
                ? obj.metadataFields.map(item => {
                    return model.LogAnalyticsSourceMetadataField.getJsonObj(item);
                })
                : undefined,
            "labelDefinitions": obj.labelDefinitions
                ? obj.labelDefinitions.map(item => {
                    return model.LogAnalyticsLabelDefinition.getJsonObj(item);
                })
                : undefined,
            "entityTypes": obj.entityTypes
                ? obj.entityTypes.map(item => {
                    return model.LogAnalyticsSourceEntityType.getJsonObj(item);
                })
                : undefined,
            "userParsers": obj.userParsers
                ? obj.userParsers.map(item => {
                    return model.LogAnalyticsParser.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    LogAnalyticsSourceSummary.getJsonObj = getJsonObj;
})(LogAnalyticsSourceSummary = exports.LogAnalyticsSourceSummary || (exports.LogAnalyticsSourceSummary = {}));
//# sourceMappingURL=log-analytics-source-summary.js.map