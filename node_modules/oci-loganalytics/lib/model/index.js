"use strict";
/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EstimateRecallDataSizeResult = exports.EstimateRecallDataSizeDetails = exports.EstimatePurgeDataSizeResult = exports.EstimatePurgeDataSizeDetails = exports.ErrorDetails = exports.EntityTypeProperty = exports.EntityLifecycleStates = exports.EntityCloudType = exports.EnableAutoAssociationDetails = exports.EnableAutoAssociationDetail = exports.EmBridgeLifecycleStates = exports.EmBridgeLatestImportProcessingStatus = exports.EfdRegexResult = exports.DisableAutoAssociationDetails = exports.DisableAutoAssociationDetail = exports.DeleteLogAnalyticsAssociationDetails = exports.DeleteLogAnalyticsAssociation = exports.CreationSourceType = exports.CreationSource = exports.CreateScheduledTaskDetails = exports.CreateLogAnalyticsObjectCollectionRuleDetails = exports.CreateLogAnalyticsLogGroupDetails = exports.CreateLogAnalyticsEntityTypeDetails = exports.CreateLogAnalyticsEntityDetails = exports.CreateLogAnalyticsEmBridgeDetails = exports.ColumnNameCollection = exports.ColumnName = exports.CharEncodingCollection = exports.ChangeScheduledTaskCompartmentDetails = exports.ChangeLogAnalyticsObjectCollectionRuleCompartmentDetails = exports.ChangeLogAnalyticsLogGroupCompartmentDetails = exports.ChangeLogAnalyticsEntityCompartmentDetails = exports.ChangeLogAnalyticsEmBridgeCompartmentDetails = exports.BucketRange = exports.AutoLookups = exports.AutoAssociationState = exports.AutoAssociationCollection = exports.AssociationSummaryReport = exports.AssociableEntityCollection = exports.AssociableEntity = exports.Argument = exports.ArchivingConfiguration = exports.AddEntityAssociationDetails = exports.ActionTypes = exports.Action = exports.AbstractParserTestResultLogLine = exports.AbstractParserTestResultLogEntry = exports.AbstractField = exports.AbstractCommandDescriptor = exports.AbstractColumn = void 0;
exports.LogAnalyticsField = exports.LogAnalyticsExtendedField = exports.LogAnalyticsEntityTypeSummary = exports.LogAnalyticsEntityTypeCollection = exports.LogAnalyticsEntityType = exports.LogAnalyticsEntitySummaryReport = exports.LogAnalyticsEntitySummary = exports.LogAnalyticsEntityCollection = exports.LogAnalyticsEntity = exports.LogAnalyticsEmBridgeSummaryReport = exports.LogAnalyticsEmBridgeSummary = exports.LogAnalyticsEmBridgeCollection = exports.LogAnalyticsEmBridge = exports.LogAnalyticsConfigWorkRequestSummary = exports.LogAnalyticsConfigWorkRequestPayload = exports.LogAnalyticsConfigWorkRequestCollection = exports.LogAnalyticsConfigWorkRequest = exports.LogAnalyticsAssociationParameterCollection = exports.LogAnalyticsAssociationParameter = exports.LogAnalyticsAssociationCollection = exports.LogAnalyticsAssociation = exports.LogAnalyticsAssociatedEntityCollection = exports.LogAnalyticsAssociatedEntity = exports.LifecycleStates = exports.LabelSummaryReport = exports.LabelSourceSummary = exports.LabelSourceCollection = exports.LabelPriorityCollection = exports.LabelPriority = exports.LabelNames = exports.JobModeFilter = exports.JobMode = exports.Indexes = exports.FilterOutput = exports.FilterDetails = exports.Filter = exports.FileValidationResponse = exports.FieldValue = exports.FieldSummaryReport = exports.ExtractLogHeaderResults = exports.ExtractLogHeaderDetails = exports.ExtractLogFieldResults = exports.ExtendedFieldsValidationResult = exports.ExportDetails = exports.ExportContent = exports.EventTypeDetails = exports.EventTypeCollection = exports.EventType = exports.EstimateReleaseDataSizeResult = exports.EstimateReleaseDataSizeDetails = void 0;
exports.LogAnalyticsSourceMetadataField = exports.LogAnalyticsSourceLabelCondition = exports.LogAnalyticsSourceFunction = exports.LogAnalyticsSourceExtendedFieldDefinitionCollection = exports.LogAnalyticsSourceExtendedFieldDefinition = exports.LogAnalyticsSourceEntityType = exports.LogAnalyticsSourceDataFilter = exports.LogAnalyticsSourceCollection = exports.LogAnalyticsSource = exports.LogAnalyticsPatternFilter = exports.LogAnalyticsParserSummary = exports.LogAnalyticsParserMetaPluginParameter = exports.LogAnalyticsParserMetaPluginCollection = exports.LogAnalyticsParserMetaPlugin = exports.LogAnalyticsParserFunctionParameter = exports.LogAnalyticsParserFunctionCollection = exports.LogAnalyticsParserFunction = exports.LogAnalyticsParserFilter = exports.LogAnalyticsParserField = exports.LogAnalyticsParserCollection = exports.LogAnalyticsParser = exports.LogAnalyticsParameter = exports.LogAnalyticsOperationTypes = exports.LogAnalyticsObjectCollectionRuleSummary = exports.LogAnalyticsObjectCollectionRuleCollection = exports.LogAnalyticsObjectCollectionRule = exports.LogAnalyticsMetric = exports.LogAnalyticsMetaSourceTypeCollection = exports.LogAnalyticsMetaSourceType = exports.LogAnalyticsMetaFunctionCollection = exports.LogAnalyticsMetaFunctionArgument = exports.LogAnalyticsMetaFunction = exports.LogAnalyticsLookupFields = exports.LogAnalyticsLookupCollection = exports.LogAnalyticsLookup = exports.LogAnalyticsLogGroupSummaryCollection = exports.LogAnalyticsLogGroupSummary = exports.LogAnalyticsLogGroup = exports.LogAnalyticsLabelView = exports.LogAnalyticsLabelSummary = exports.LogAnalyticsLabelOperatorCollection = exports.LogAnalyticsLabelOperator = exports.LogAnalyticsLabelDefinition = exports.LogAnalyticsLabelCollection = exports.LogAnalyticsLabelAlias = exports.LogAnalyticsLabel = exports.LogAnalyticsImportCustomContent = exports.LogAnalyticsImportCustomChangeList = exports.LogAnalyticsFieldSummary = exports.LogAnalyticsFieldCollection = void 0;
exports.SourceValidateResults = exports.SourceValidateDetails = exports.SourceSummaryReport = exports.SourceMappingResponse = exports.ScopeFilter = exports.SchedulerResource = exports.ScheduledTaskSummary = exports.ScheduledTaskCollection = exports.ScheduledTask = exports.Schedule = exports.ResultColumn = exports.RemoveEntityAssociationsDetails = exports.ReleaseRecalledDataDetails = exports.RegexMatchResult = exports.RecalledDataCollection = exports.RecalledData = exports.RecallArchivedDataDetails = exports.QueryWorkRequestSummary = exports.QueryWorkRequestCollection = exports.QueryWorkRequest = exports.QueryOperationType = exports.QueryDetails = exports.QueryAggregation = exports.PurgeStorageDataDetails = exports.PropertyOverride = exports.PayloadType = exports.ParserTestResult = exports.ParserSummaryReport = exports.ParsedField = exports.ParsedContent = exports.ParseQueryOutput = exports.ParseQueryDetails = exports.OperationStatus = exports.ObjectCollectionRuleLifecycleStates = exports.ObjectCollectionRuleCollectionTypes = exports.NamespaceSummary = exports.NamespaceCollection = exports.Namespace = exports.MetricExtraction = exports.MatchInfo = exports.LookupSummaryReport = exports.LookupField = exports.LogSetCollection = exports.LogGroupSummaryReport = exports.LogAnalyticsWarningCollection = exports.LogAnalyticsWarning = exports.LogAnalyticsSourceSummary = exports.LogAnalyticsSourcePatternCollection = exports.LogAnalyticsSourcePattern = exports.LogAnalyticsSourceMetric = void 0;
exports.WorkRequestLog = exports.WorkRequestErrorCollection = exports.WorkRequestError = exports.WorkRequestCollection = exports.WorkRequest = exports.WarningReferenceDetails = exports.Violation = exports.VerifyOutput = exports.ValueType = exports.UsageStatusItem = exports.UpsertLogAnalyticsSourceDetails = exports.UpsertLogAnalyticsParserDetails = exports.UpsertLogAnalyticsLabelDetails = exports.UpsertLogAnalyticsFieldDetails = exports.UpsertLogAnalyticsAssociationDetails = exports.UpsertLogAnalyticsAssociation = exports.UploadWarningSummary = exports.UploadWarningCollection = exports.UploadSummary = exports.UploadFileSummary = exports.UploadFileStatus = exports.UploadFileCollection = exports.UploadCollection = exports.Upload = exports.UpdateStorageDetails = exports.UpdateScheduledTaskDetails = exports.UpdateLookupMetadataDetails = exports.UpdateLogAnalyticsObjectCollectionRuleDetails = exports.UpdateLogAnalyticsLogGroupDetails = exports.UpdateLogAnalyticsEntityTypeDetails = exports.UpdateLogAnalyticsEntityDetails = exports.UpdateLogAnalyticsEmBridgeDetails = exports.UiParserTestMetadata = exports.TimezoneCollection = exports.TimeRange = exports.TestParserPayloadDetails = exports.TaskType = exports.SuggestOutput = exports.SuggestDetails = exports.Success = exports.SubSystemName = exports.StorageWorkRequestSummary = exports.StorageWorkRequestCollection = exports.StorageWorkRequest = exports.StorageUsage = exports.StorageOperationType = exports.StorageDataType = exports.Storage = exports.StepInfo = exports.StatusSummary = void 0;
exports.RenameCommandDescriptor = exports.RegexCommandDescriptor = exports.PurgeAction = exports.NlpCommandDescriptor = exports.MultiSearchCommandDescriptor = exports.MapCommandDescriptor = exports.MacroCommandDescriptor = exports.LookupCommandDescriptor = exports.LiteralArgument = exports.LinkDetailsCommandDescriptor = exports.LinkCommandDescriptor = exports.HighlightRowsCommandDescriptor = exports.HighlightGroupsCommandDescriptor = exports.HighlightCommandDescriptor = exports.HeadCommandDescriptor = exports.FunctionField = exports.FixedFrequencySchedule = exports.FieldsCommandDescriptor = exports.FieldsAddRemoveField = exports.FieldSummaryCommandDescriptor = exports.FieldArgument = exports.Field = exports.ExtractCommandDescriptor = exports.EventStatsCommandDescriptor = exports.EvalCommandDescriptor = exports.DistinctCommandDescriptor = exports.DemoModeCommandDescriptor = exports.DeltaCommandDescriptor = exports.DeleteCommandDescriptor = exports.CronSchedule = exports.CreateViewCommandDescriptor = exports.CreateStandardTaskDetails = exports.CreateAccelerationTaskDetails = exports.CommandDescriptor = exports.Column = exports.ClusterSplitCommandDescriptor = exports.ClusterDetailsCommandDescriptor = exports.ClusterCompareCommandDescriptor = exports.ClusterCommandDescriptor = exports.ClassifyCommandDescriptor = exports.ClassifyColumn = exports.ChartDataColumn = exports.ChartColumn = exports.BucketCommandDescriptor = exports.BottomCommandDescriptor = exports.AddFieldsCommandDescriptor = exports.WorkRequestSummary = exports.WorkRequestStatus = exports.WorkRequestResource = exports.WorkRequestLogCollection = void 0;
exports.WhereCommandDescriptor = exports.UpdateStandardTaskDetails = exports.TrendColumn = exports.TopCommandDescriptor = exports.TimeStatsCommandDescriptor = exports.TimeCompareCommandDescriptor = exports.TimeColumn = exports.TailCommandDescriptor = exports.StreamAction = exports.StatsCommandDescriptor = exports.StandardTask = exports.SortField = exports.SortCommandDescriptor = exports.SearchLookupCommandDescriptor = exports.SearchCommandDescriptor = void 0;
const AbstractColumn = __importStar(require("./abstract-column"));
exports.AbstractColumn = AbstractColumn.AbstractColumn;
const AbstractCommandDescriptor = __importStar(require("./abstract-command-descriptor"));
exports.AbstractCommandDescriptor = AbstractCommandDescriptor.AbstractCommandDescriptor;
const AbstractField = __importStar(require("./abstract-field"));
exports.AbstractField = AbstractField.AbstractField;
const AbstractParserTestResultLogEntry = __importStar(require("./abstract-parser-test-result-log-entry"));
exports.AbstractParserTestResultLogEntry = AbstractParserTestResultLogEntry.AbstractParserTestResultLogEntry;
const AbstractParserTestResultLogLine = __importStar(require("./abstract-parser-test-result-log-line"));
exports.AbstractParserTestResultLogLine = AbstractParserTestResultLogLine.AbstractParserTestResultLogLine;
const Action = __importStar(require("./action"));
exports.Action = Action.Action;
const ActionTypes = __importStar(require("./action-types"));
exports.ActionTypes = ActionTypes.ActionTypes;
const AddEntityAssociationDetails = __importStar(require("./add-entity-association-details"));
exports.AddEntityAssociationDetails = AddEntityAssociationDetails.AddEntityAssociationDetails;
const ArchivingConfiguration = __importStar(require("./archiving-configuration"));
exports.ArchivingConfiguration = ArchivingConfiguration.ArchivingConfiguration;
const Argument = __importStar(require("./argument"));
exports.Argument = Argument.Argument;
const AssociableEntity = __importStar(require("./associable-entity"));
exports.AssociableEntity = AssociableEntity.AssociableEntity;
const AssociableEntityCollection = __importStar(require("./associable-entity-collection"));
exports.AssociableEntityCollection = AssociableEntityCollection.AssociableEntityCollection;
const AssociationSummaryReport = __importStar(require("./association-summary-report"));
exports.AssociationSummaryReport = AssociationSummaryReport.AssociationSummaryReport;
const AutoAssociationCollection = __importStar(require("./auto-association-collection"));
exports.AutoAssociationCollection = AutoAssociationCollection.AutoAssociationCollection;
const AutoAssociationState = __importStar(require("./auto-association-state"));
exports.AutoAssociationState = AutoAssociationState.AutoAssociationState;
const AutoLookups = __importStar(require("./auto-lookups"));
exports.AutoLookups = AutoLookups.AutoLookups;
const BucketRange = __importStar(require("./bucket-range"));
exports.BucketRange = BucketRange.BucketRange;
const ChangeLogAnalyticsEmBridgeCompartmentDetails = __importStar(require("./change-log-analytics-em-bridge-compartment-details"));
exports.ChangeLogAnalyticsEmBridgeCompartmentDetails = ChangeLogAnalyticsEmBridgeCompartmentDetails.ChangeLogAnalyticsEmBridgeCompartmentDetails;
const ChangeLogAnalyticsEntityCompartmentDetails = __importStar(require("./change-log-analytics-entity-compartment-details"));
exports.ChangeLogAnalyticsEntityCompartmentDetails = ChangeLogAnalyticsEntityCompartmentDetails.ChangeLogAnalyticsEntityCompartmentDetails;
const ChangeLogAnalyticsLogGroupCompartmentDetails = __importStar(require("./change-log-analytics-log-group-compartment-details"));
exports.ChangeLogAnalyticsLogGroupCompartmentDetails = ChangeLogAnalyticsLogGroupCompartmentDetails.ChangeLogAnalyticsLogGroupCompartmentDetails;
const ChangeLogAnalyticsObjectCollectionRuleCompartmentDetails = __importStar(require("./change-log-analytics-object-collection-rule-compartment-details"));
exports.ChangeLogAnalyticsObjectCollectionRuleCompartmentDetails = ChangeLogAnalyticsObjectCollectionRuleCompartmentDetails.ChangeLogAnalyticsObjectCollectionRuleCompartmentDetails;
const ChangeScheduledTaskCompartmentDetails = __importStar(require("./change-scheduled-task-compartment-details"));
exports.ChangeScheduledTaskCompartmentDetails = ChangeScheduledTaskCompartmentDetails.ChangeScheduledTaskCompartmentDetails;
const CharEncodingCollection = __importStar(require("./char-encoding-collection"));
exports.CharEncodingCollection = CharEncodingCollection.CharEncodingCollection;
const ColumnName = __importStar(require("./column-name"));
exports.ColumnName = ColumnName.ColumnName;
const ColumnNameCollection = __importStar(require("./column-name-collection"));
exports.ColumnNameCollection = ColumnNameCollection.ColumnNameCollection;
const CreateLogAnalyticsEmBridgeDetails = __importStar(require("./create-log-analytics-em-bridge-details"));
exports.CreateLogAnalyticsEmBridgeDetails = CreateLogAnalyticsEmBridgeDetails.CreateLogAnalyticsEmBridgeDetails;
const CreateLogAnalyticsEntityDetails = __importStar(require("./create-log-analytics-entity-details"));
exports.CreateLogAnalyticsEntityDetails = CreateLogAnalyticsEntityDetails.CreateLogAnalyticsEntityDetails;
const CreateLogAnalyticsEntityTypeDetails = __importStar(require("./create-log-analytics-entity-type-details"));
exports.CreateLogAnalyticsEntityTypeDetails = CreateLogAnalyticsEntityTypeDetails.CreateLogAnalyticsEntityTypeDetails;
const CreateLogAnalyticsLogGroupDetails = __importStar(require("./create-log-analytics-log-group-details"));
exports.CreateLogAnalyticsLogGroupDetails = CreateLogAnalyticsLogGroupDetails.CreateLogAnalyticsLogGroupDetails;
const CreateLogAnalyticsObjectCollectionRuleDetails = __importStar(require("./create-log-analytics-object-collection-rule-details"));
exports.CreateLogAnalyticsObjectCollectionRuleDetails = CreateLogAnalyticsObjectCollectionRuleDetails.CreateLogAnalyticsObjectCollectionRuleDetails;
const CreateScheduledTaskDetails = __importStar(require("./create-scheduled-task-details"));
exports.CreateScheduledTaskDetails = CreateScheduledTaskDetails.CreateScheduledTaskDetails;
const CreationSource = __importStar(require("./creation-source"));
exports.CreationSource = CreationSource.CreationSource;
const CreationSourceType = __importStar(require("./creation-source-type"));
exports.CreationSourceType = CreationSourceType.CreationSourceType;
const DeleteLogAnalyticsAssociation = __importStar(require("./delete-log-analytics-association"));
exports.DeleteLogAnalyticsAssociation = DeleteLogAnalyticsAssociation.DeleteLogAnalyticsAssociation;
const DeleteLogAnalyticsAssociationDetails = __importStar(require("./delete-log-analytics-association-details"));
exports.DeleteLogAnalyticsAssociationDetails = DeleteLogAnalyticsAssociationDetails.DeleteLogAnalyticsAssociationDetails;
const DisableAutoAssociationDetail = __importStar(require("./disable-auto-association-detail"));
exports.DisableAutoAssociationDetail = DisableAutoAssociationDetail.DisableAutoAssociationDetail;
const DisableAutoAssociationDetails = __importStar(require("./disable-auto-association-details"));
exports.DisableAutoAssociationDetails = DisableAutoAssociationDetails.DisableAutoAssociationDetails;
const EfdRegexResult = __importStar(require("./efd-regex-result"));
exports.EfdRegexResult = EfdRegexResult.EfdRegexResult;
const EmBridgeLatestImportProcessingStatus = __importStar(require("./em-bridge-latest-import-processing-status"));
exports.EmBridgeLatestImportProcessingStatus = EmBridgeLatestImportProcessingStatus.EmBridgeLatestImportProcessingStatus;
const EmBridgeLifecycleStates = __importStar(require("./em-bridge-lifecycle-states"));
exports.EmBridgeLifecycleStates = EmBridgeLifecycleStates.EmBridgeLifecycleStates;
const EnableAutoAssociationDetail = __importStar(require("./enable-auto-association-detail"));
exports.EnableAutoAssociationDetail = EnableAutoAssociationDetail.EnableAutoAssociationDetail;
const EnableAutoAssociationDetails = __importStar(require("./enable-auto-association-details"));
exports.EnableAutoAssociationDetails = EnableAutoAssociationDetails.EnableAutoAssociationDetails;
const EntityCloudType = __importStar(require("./entity-cloud-type"));
exports.EntityCloudType = EntityCloudType.EntityCloudType;
const EntityLifecycleStates = __importStar(require("./entity-lifecycle-states"));
exports.EntityLifecycleStates = EntityLifecycleStates.EntityLifecycleStates;
const EntityTypeProperty = __importStar(require("./entity-type-property"));
exports.EntityTypeProperty = EntityTypeProperty.EntityTypeProperty;
const ErrorDetails = __importStar(require("./error-details"));
exports.ErrorDetails = ErrorDetails.ErrorDetails;
const EstimatePurgeDataSizeDetails = __importStar(require("./estimate-purge-data-size-details"));
exports.EstimatePurgeDataSizeDetails = EstimatePurgeDataSizeDetails.EstimatePurgeDataSizeDetails;
const EstimatePurgeDataSizeResult = __importStar(require("./estimate-purge-data-size-result"));
exports.EstimatePurgeDataSizeResult = EstimatePurgeDataSizeResult.EstimatePurgeDataSizeResult;
const EstimateRecallDataSizeDetails = __importStar(require("./estimate-recall-data-size-details"));
exports.EstimateRecallDataSizeDetails = EstimateRecallDataSizeDetails.EstimateRecallDataSizeDetails;
const EstimateRecallDataSizeResult = __importStar(require("./estimate-recall-data-size-result"));
exports.EstimateRecallDataSizeResult = EstimateRecallDataSizeResult.EstimateRecallDataSizeResult;
const EstimateReleaseDataSizeDetails = __importStar(require("./estimate-release-data-size-details"));
exports.EstimateReleaseDataSizeDetails = EstimateReleaseDataSizeDetails.EstimateReleaseDataSizeDetails;
const EstimateReleaseDataSizeResult = __importStar(require("./estimate-release-data-size-result"));
exports.EstimateReleaseDataSizeResult = EstimateReleaseDataSizeResult.EstimateReleaseDataSizeResult;
const EventType = __importStar(require("./event-type"));
exports.EventType = EventType.EventType;
const EventTypeCollection = __importStar(require("./event-type-collection"));
exports.EventTypeCollection = EventTypeCollection.EventTypeCollection;
const EventTypeDetails = __importStar(require("./event-type-details"));
exports.EventTypeDetails = EventTypeDetails.EventTypeDetails;
const ExportContent = __importStar(require("./export-content"));
exports.ExportContent = ExportContent.ExportContent;
const ExportDetails = __importStar(require("./export-details"));
exports.ExportDetails = ExportDetails.ExportDetails;
const ExtendedFieldsValidationResult = __importStar(require("./extended-fields-validation-result"));
exports.ExtendedFieldsValidationResult = ExtendedFieldsValidationResult.ExtendedFieldsValidationResult;
const ExtractLogFieldResults = __importStar(require("./extract-log-field-results"));
exports.ExtractLogFieldResults = ExtractLogFieldResults.ExtractLogFieldResults;
const ExtractLogHeaderDetails = __importStar(require("./extract-log-header-details"));
exports.ExtractLogHeaderDetails = ExtractLogHeaderDetails.ExtractLogHeaderDetails;
const ExtractLogHeaderResults = __importStar(require("./extract-log-header-results"));
exports.ExtractLogHeaderResults = ExtractLogHeaderResults.ExtractLogHeaderResults;
const FieldSummaryReport = __importStar(require("./field-summary-report"));
exports.FieldSummaryReport = FieldSummaryReport.FieldSummaryReport;
const FieldValue = __importStar(require("./field-value"));
exports.FieldValue = FieldValue.FieldValue;
const FileValidationResponse = __importStar(require("./file-validation-response"));
exports.FileValidationResponse = FileValidationResponse.FileValidationResponse;
const Filter = __importStar(require("./filter"));
exports.Filter = Filter.Filter;
const FilterDetails = __importStar(require("./filter-details"));
exports.FilterDetails = FilterDetails.FilterDetails;
const FilterOutput = __importStar(require("./filter-output"));
exports.FilterOutput = FilterOutput.FilterOutput;
const Indexes = __importStar(require("./indexes"));
exports.Indexes = Indexes.Indexes;
const JobMode = __importStar(require("./job-mode"));
exports.JobMode = JobMode.JobMode;
const JobModeFilter = __importStar(require("./job-mode-filter"));
exports.JobModeFilter = JobModeFilter.JobModeFilter;
const LabelNames = __importStar(require("./label-names"));
exports.LabelNames = LabelNames.LabelNames;
const LabelPriority = __importStar(require("./label-priority"));
exports.LabelPriority = LabelPriority.LabelPriority;
const LabelPriorityCollection = __importStar(require("./label-priority-collection"));
exports.LabelPriorityCollection = LabelPriorityCollection.LabelPriorityCollection;
const LabelSourceCollection = __importStar(require("./label-source-collection"));
exports.LabelSourceCollection = LabelSourceCollection.LabelSourceCollection;
const LabelSourceSummary = __importStar(require("./label-source-summary"));
exports.LabelSourceSummary = LabelSourceSummary.LabelSourceSummary;
const LabelSummaryReport = __importStar(require("./label-summary-report"));
exports.LabelSummaryReport = LabelSummaryReport.LabelSummaryReport;
const LifecycleStates = __importStar(require("./lifecycle-states"));
exports.LifecycleStates = LifecycleStates.LifecycleStates;
const LogAnalyticsAssociatedEntity = __importStar(require("./log-analytics-associated-entity"));
exports.LogAnalyticsAssociatedEntity = LogAnalyticsAssociatedEntity.LogAnalyticsAssociatedEntity;
const LogAnalyticsAssociatedEntityCollection = __importStar(require("./log-analytics-associated-entity-collection"));
exports.LogAnalyticsAssociatedEntityCollection = LogAnalyticsAssociatedEntityCollection.LogAnalyticsAssociatedEntityCollection;
const LogAnalyticsAssociation = __importStar(require("./log-analytics-association"));
exports.LogAnalyticsAssociation = LogAnalyticsAssociation.LogAnalyticsAssociation;
const LogAnalyticsAssociationCollection = __importStar(require("./log-analytics-association-collection"));
exports.LogAnalyticsAssociationCollection = LogAnalyticsAssociationCollection.LogAnalyticsAssociationCollection;
const LogAnalyticsAssociationParameter = __importStar(require("./log-analytics-association-parameter"));
exports.LogAnalyticsAssociationParameter = LogAnalyticsAssociationParameter.LogAnalyticsAssociationParameter;
const LogAnalyticsAssociationParameterCollection = __importStar(require("./log-analytics-association-parameter-collection"));
exports.LogAnalyticsAssociationParameterCollection = LogAnalyticsAssociationParameterCollection.LogAnalyticsAssociationParameterCollection;
const LogAnalyticsConfigWorkRequest = __importStar(require("./log-analytics-config-work-request"));
exports.LogAnalyticsConfigWorkRequest = LogAnalyticsConfigWorkRequest.LogAnalyticsConfigWorkRequest;
const LogAnalyticsConfigWorkRequestCollection = __importStar(require("./log-analytics-config-work-request-collection"));
exports.LogAnalyticsConfigWorkRequestCollection = LogAnalyticsConfigWorkRequestCollection.LogAnalyticsConfigWorkRequestCollection;
const LogAnalyticsConfigWorkRequestPayload = __importStar(require("./log-analytics-config-work-request-payload"));
exports.LogAnalyticsConfigWorkRequestPayload = LogAnalyticsConfigWorkRequestPayload.LogAnalyticsConfigWorkRequestPayload;
const LogAnalyticsConfigWorkRequestSummary = __importStar(require("./log-analytics-config-work-request-summary"));
exports.LogAnalyticsConfigWorkRequestSummary = LogAnalyticsConfigWorkRequestSummary.LogAnalyticsConfigWorkRequestSummary;
const LogAnalyticsEmBridge = __importStar(require("./log-analytics-em-bridge"));
exports.LogAnalyticsEmBridge = LogAnalyticsEmBridge.LogAnalyticsEmBridge;
const LogAnalyticsEmBridgeCollection = __importStar(require("./log-analytics-em-bridge-collection"));
exports.LogAnalyticsEmBridgeCollection = LogAnalyticsEmBridgeCollection.LogAnalyticsEmBridgeCollection;
const LogAnalyticsEmBridgeSummary = __importStar(require("./log-analytics-em-bridge-summary"));
exports.LogAnalyticsEmBridgeSummary = LogAnalyticsEmBridgeSummary.LogAnalyticsEmBridgeSummary;
const LogAnalyticsEmBridgeSummaryReport = __importStar(require("./log-analytics-em-bridge-summary-report"));
exports.LogAnalyticsEmBridgeSummaryReport = LogAnalyticsEmBridgeSummaryReport.LogAnalyticsEmBridgeSummaryReport;
const LogAnalyticsEntity = __importStar(require("./log-analytics-entity"));
exports.LogAnalyticsEntity = LogAnalyticsEntity.LogAnalyticsEntity;
const LogAnalyticsEntityCollection = __importStar(require("./log-analytics-entity-collection"));
exports.LogAnalyticsEntityCollection = LogAnalyticsEntityCollection.LogAnalyticsEntityCollection;
const LogAnalyticsEntitySummary = __importStar(require("./log-analytics-entity-summary"));
exports.LogAnalyticsEntitySummary = LogAnalyticsEntitySummary.LogAnalyticsEntitySummary;
const LogAnalyticsEntitySummaryReport = __importStar(require("./log-analytics-entity-summary-report"));
exports.LogAnalyticsEntitySummaryReport = LogAnalyticsEntitySummaryReport.LogAnalyticsEntitySummaryReport;
const LogAnalyticsEntityType = __importStar(require("./log-analytics-entity-type"));
exports.LogAnalyticsEntityType = LogAnalyticsEntityType.LogAnalyticsEntityType;
const LogAnalyticsEntityTypeCollection = __importStar(require("./log-analytics-entity-type-collection"));
exports.LogAnalyticsEntityTypeCollection = LogAnalyticsEntityTypeCollection.LogAnalyticsEntityTypeCollection;
const LogAnalyticsEntityTypeSummary = __importStar(require("./log-analytics-entity-type-summary"));
exports.LogAnalyticsEntityTypeSummary = LogAnalyticsEntityTypeSummary.LogAnalyticsEntityTypeSummary;
const LogAnalyticsExtendedField = __importStar(require("./log-analytics-extended-field"));
exports.LogAnalyticsExtendedField = LogAnalyticsExtendedField.LogAnalyticsExtendedField;
const LogAnalyticsField = __importStar(require("./log-analytics-field"));
exports.LogAnalyticsField = LogAnalyticsField.LogAnalyticsField;
const LogAnalyticsFieldCollection = __importStar(require("./log-analytics-field-collection"));
exports.LogAnalyticsFieldCollection = LogAnalyticsFieldCollection.LogAnalyticsFieldCollection;
const LogAnalyticsFieldSummary = __importStar(require("./log-analytics-field-summary"));
exports.LogAnalyticsFieldSummary = LogAnalyticsFieldSummary.LogAnalyticsFieldSummary;
const LogAnalyticsImportCustomChangeList = __importStar(require("./log-analytics-import-custom-change-list"));
exports.LogAnalyticsImportCustomChangeList = LogAnalyticsImportCustomChangeList.LogAnalyticsImportCustomChangeList;
const LogAnalyticsImportCustomContent = __importStar(require("./log-analytics-import-custom-content"));
exports.LogAnalyticsImportCustomContent = LogAnalyticsImportCustomContent.LogAnalyticsImportCustomContent;
const LogAnalyticsLabel = __importStar(require("./log-analytics-label"));
exports.LogAnalyticsLabel = LogAnalyticsLabel.LogAnalyticsLabel;
const LogAnalyticsLabelAlias = __importStar(require("./log-analytics-label-alias"));
exports.LogAnalyticsLabelAlias = LogAnalyticsLabelAlias.LogAnalyticsLabelAlias;
const LogAnalyticsLabelCollection = __importStar(require("./log-analytics-label-collection"));
exports.LogAnalyticsLabelCollection = LogAnalyticsLabelCollection.LogAnalyticsLabelCollection;
const LogAnalyticsLabelDefinition = __importStar(require("./log-analytics-label-definition"));
exports.LogAnalyticsLabelDefinition = LogAnalyticsLabelDefinition.LogAnalyticsLabelDefinition;
const LogAnalyticsLabelOperator = __importStar(require("./log-analytics-label-operator"));
exports.LogAnalyticsLabelOperator = LogAnalyticsLabelOperator.LogAnalyticsLabelOperator;
const LogAnalyticsLabelOperatorCollection = __importStar(require("./log-analytics-label-operator-collection"));
exports.LogAnalyticsLabelOperatorCollection = LogAnalyticsLabelOperatorCollection.LogAnalyticsLabelOperatorCollection;
const LogAnalyticsLabelSummary = __importStar(require("./log-analytics-label-summary"));
exports.LogAnalyticsLabelSummary = LogAnalyticsLabelSummary.LogAnalyticsLabelSummary;
const LogAnalyticsLabelView = __importStar(require("./log-analytics-label-view"));
exports.LogAnalyticsLabelView = LogAnalyticsLabelView.LogAnalyticsLabelView;
const LogAnalyticsLogGroup = __importStar(require("./log-analytics-log-group"));
exports.LogAnalyticsLogGroup = LogAnalyticsLogGroup.LogAnalyticsLogGroup;
const LogAnalyticsLogGroupSummary = __importStar(require("./log-analytics-log-group-summary"));
exports.LogAnalyticsLogGroupSummary = LogAnalyticsLogGroupSummary.LogAnalyticsLogGroupSummary;
const LogAnalyticsLogGroupSummaryCollection = __importStar(require("./log-analytics-log-group-summary-collection"));
exports.LogAnalyticsLogGroupSummaryCollection = LogAnalyticsLogGroupSummaryCollection.LogAnalyticsLogGroupSummaryCollection;
const LogAnalyticsLookup = __importStar(require("./log-analytics-lookup"));
exports.LogAnalyticsLookup = LogAnalyticsLookup.LogAnalyticsLookup;
const LogAnalyticsLookupCollection = __importStar(require("./log-analytics-lookup-collection"));
exports.LogAnalyticsLookupCollection = LogAnalyticsLookupCollection.LogAnalyticsLookupCollection;
const LogAnalyticsLookupFields = __importStar(require("./log-analytics-lookup-fields"));
exports.LogAnalyticsLookupFields = LogAnalyticsLookupFields.LogAnalyticsLookupFields;
const LogAnalyticsMetaFunction = __importStar(require("./log-analytics-meta-function"));
exports.LogAnalyticsMetaFunction = LogAnalyticsMetaFunction.LogAnalyticsMetaFunction;
const LogAnalyticsMetaFunctionArgument = __importStar(require("./log-analytics-meta-function-argument"));
exports.LogAnalyticsMetaFunctionArgument = LogAnalyticsMetaFunctionArgument.LogAnalyticsMetaFunctionArgument;
const LogAnalyticsMetaFunctionCollection = __importStar(require("./log-analytics-meta-function-collection"));
exports.LogAnalyticsMetaFunctionCollection = LogAnalyticsMetaFunctionCollection.LogAnalyticsMetaFunctionCollection;
const LogAnalyticsMetaSourceType = __importStar(require("./log-analytics-meta-source-type"));
exports.LogAnalyticsMetaSourceType = LogAnalyticsMetaSourceType.LogAnalyticsMetaSourceType;
const LogAnalyticsMetaSourceTypeCollection = __importStar(require("./log-analytics-meta-source-type-collection"));
exports.LogAnalyticsMetaSourceTypeCollection = LogAnalyticsMetaSourceTypeCollection.LogAnalyticsMetaSourceTypeCollection;
const LogAnalyticsMetric = __importStar(require("./log-analytics-metric"));
exports.LogAnalyticsMetric = LogAnalyticsMetric.LogAnalyticsMetric;
const LogAnalyticsObjectCollectionRule = __importStar(require("./log-analytics-object-collection-rule"));
exports.LogAnalyticsObjectCollectionRule = LogAnalyticsObjectCollectionRule.LogAnalyticsObjectCollectionRule;
const LogAnalyticsObjectCollectionRuleCollection = __importStar(require("./log-analytics-object-collection-rule-collection"));
exports.LogAnalyticsObjectCollectionRuleCollection = LogAnalyticsObjectCollectionRuleCollection.LogAnalyticsObjectCollectionRuleCollection;
const LogAnalyticsObjectCollectionRuleSummary = __importStar(require("./log-analytics-object-collection-rule-summary"));
exports.LogAnalyticsObjectCollectionRuleSummary = LogAnalyticsObjectCollectionRuleSummary.LogAnalyticsObjectCollectionRuleSummary;
const LogAnalyticsOperationTypes = __importStar(require("./log-analytics-operation-types"));
exports.LogAnalyticsOperationTypes = LogAnalyticsOperationTypes.LogAnalyticsOperationTypes;
const LogAnalyticsParameter = __importStar(require("./log-analytics-parameter"));
exports.LogAnalyticsParameter = LogAnalyticsParameter.LogAnalyticsParameter;
const LogAnalyticsParser = __importStar(require("./log-analytics-parser"));
exports.LogAnalyticsParser = LogAnalyticsParser.LogAnalyticsParser;
const LogAnalyticsParserCollection = __importStar(require("./log-analytics-parser-collection"));
exports.LogAnalyticsParserCollection = LogAnalyticsParserCollection.LogAnalyticsParserCollection;
const LogAnalyticsParserField = __importStar(require("./log-analytics-parser-field"));
exports.LogAnalyticsParserField = LogAnalyticsParserField.LogAnalyticsParserField;
const LogAnalyticsParserFilter = __importStar(require("./log-analytics-parser-filter"));
exports.LogAnalyticsParserFilter = LogAnalyticsParserFilter.LogAnalyticsParserFilter;
const LogAnalyticsParserFunction = __importStar(require("./log-analytics-parser-function"));
exports.LogAnalyticsParserFunction = LogAnalyticsParserFunction.LogAnalyticsParserFunction;
const LogAnalyticsParserFunctionCollection = __importStar(require("./log-analytics-parser-function-collection"));
exports.LogAnalyticsParserFunctionCollection = LogAnalyticsParserFunctionCollection.LogAnalyticsParserFunctionCollection;
const LogAnalyticsParserFunctionParameter = __importStar(require("./log-analytics-parser-function-parameter"));
exports.LogAnalyticsParserFunctionParameter = LogAnalyticsParserFunctionParameter.LogAnalyticsParserFunctionParameter;
const LogAnalyticsParserMetaPlugin = __importStar(require("./log-analytics-parser-meta-plugin"));
exports.LogAnalyticsParserMetaPlugin = LogAnalyticsParserMetaPlugin.LogAnalyticsParserMetaPlugin;
const LogAnalyticsParserMetaPluginCollection = __importStar(require("./log-analytics-parser-meta-plugin-collection"));
exports.LogAnalyticsParserMetaPluginCollection = LogAnalyticsParserMetaPluginCollection.LogAnalyticsParserMetaPluginCollection;
const LogAnalyticsParserMetaPluginParameter = __importStar(require("./log-analytics-parser-meta-plugin-parameter"));
exports.LogAnalyticsParserMetaPluginParameter = LogAnalyticsParserMetaPluginParameter.LogAnalyticsParserMetaPluginParameter;
const LogAnalyticsParserSummary = __importStar(require("./log-analytics-parser-summary"));
exports.LogAnalyticsParserSummary = LogAnalyticsParserSummary.LogAnalyticsParserSummary;
const LogAnalyticsPatternFilter = __importStar(require("./log-analytics-pattern-filter"));
exports.LogAnalyticsPatternFilter = LogAnalyticsPatternFilter.LogAnalyticsPatternFilter;
const LogAnalyticsSource = __importStar(require("./log-analytics-source"));
exports.LogAnalyticsSource = LogAnalyticsSource.LogAnalyticsSource;
const LogAnalyticsSourceCollection = __importStar(require("./log-analytics-source-collection"));
exports.LogAnalyticsSourceCollection = LogAnalyticsSourceCollection.LogAnalyticsSourceCollection;
const LogAnalyticsSourceDataFilter = __importStar(require("./log-analytics-source-data-filter"));
exports.LogAnalyticsSourceDataFilter = LogAnalyticsSourceDataFilter.LogAnalyticsSourceDataFilter;
const LogAnalyticsSourceEntityType = __importStar(require("./log-analytics-source-entity-type"));
exports.LogAnalyticsSourceEntityType = LogAnalyticsSourceEntityType.LogAnalyticsSourceEntityType;
const LogAnalyticsSourceExtendedFieldDefinition = __importStar(require("./log-analytics-source-extended-field-definition"));
exports.LogAnalyticsSourceExtendedFieldDefinition = LogAnalyticsSourceExtendedFieldDefinition.LogAnalyticsSourceExtendedFieldDefinition;
const LogAnalyticsSourceExtendedFieldDefinitionCollection = __importStar(require("./log-analytics-source-extended-field-definition-collection"));
exports.LogAnalyticsSourceExtendedFieldDefinitionCollection = LogAnalyticsSourceExtendedFieldDefinitionCollection.LogAnalyticsSourceExtendedFieldDefinitionCollection;
const LogAnalyticsSourceFunction = __importStar(require("./log-analytics-source-function"));
exports.LogAnalyticsSourceFunction = LogAnalyticsSourceFunction.LogAnalyticsSourceFunction;
const LogAnalyticsSourceLabelCondition = __importStar(require("./log-analytics-source-label-condition"));
exports.LogAnalyticsSourceLabelCondition = LogAnalyticsSourceLabelCondition.LogAnalyticsSourceLabelCondition;
const LogAnalyticsSourceMetadataField = __importStar(require("./log-analytics-source-metadata-field"));
exports.LogAnalyticsSourceMetadataField = LogAnalyticsSourceMetadataField.LogAnalyticsSourceMetadataField;
const LogAnalyticsSourceMetric = __importStar(require("./log-analytics-source-metric"));
exports.LogAnalyticsSourceMetric = LogAnalyticsSourceMetric.LogAnalyticsSourceMetric;
const LogAnalyticsSourcePattern = __importStar(require("./log-analytics-source-pattern"));
exports.LogAnalyticsSourcePattern = LogAnalyticsSourcePattern.LogAnalyticsSourcePattern;
const LogAnalyticsSourcePatternCollection = __importStar(require("./log-analytics-source-pattern-collection"));
exports.LogAnalyticsSourcePatternCollection = LogAnalyticsSourcePatternCollection.LogAnalyticsSourcePatternCollection;
const LogAnalyticsSourceSummary = __importStar(require("./log-analytics-source-summary"));
exports.LogAnalyticsSourceSummary = LogAnalyticsSourceSummary.LogAnalyticsSourceSummary;
const LogAnalyticsWarning = __importStar(require("./log-analytics-warning"));
exports.LogAnalyticsWarning = LogAnalyticsWarning.LogAnalyticsWarning;
const LogAnalyticsWarningCollection = __importStar(require("./log-analytics-warning-collection"));
exports.LogAnalyticsWarningCollection = LogAnalyticsWarningCollection.LogAnalyticsWarningCollection;
const LogGroupSummaryReport = __importStar(require("./log-group-summary-report"));
exports.LogGroupSummaryReport = LogGroupSummaryReport.LogGroupSummaryReport;
const LogSetCollection = __importStar(require("./log-set-collection"));
exports.LogSetCollection = LogSetCollection.LogSetCollection;
const LookupField = __importStar(require("./lookup-field"));
exports.LookupField = LookupField.LookupField;
const LookupSummaryReport = __importStar(require("./lookup-summary-report"));
exports.LookupSummaryReport = LookupSummaryReport.LookupSummaryReport;
const MatchInfo = __importStar(require("./match-info"));
exports.MatchInfo = MatchInfo.MatchInfo;
const MetricExtraction = __importStar(require("./metric-extraction"));
exports.MetricExtraction = MetricExtraction.MetricExtraction;
const Namespace = __importStar(require("./namespace"));
exports.Namespace = Namespace.Namespace;
const NamespaceCollection = __importStar(require("./namespace-collection"));
exports.NamespaceCollection = NamespaceCollection.NamespaceCollection;
const NamespaceSummary = __importStar(require("./namespace-summary"));
exports.NamespaceSummary = NamespaceSummary.NamespaceSummary;
const ObjectCollectionRuleCollectionTypes = __importStar(require("./object-collection-rule-collection-types"));
exports.ObjectCollectionRuleCollectionTypes = ObjectCollectionRuleCollectionTypes.ObjectCollectionRuleCollectionTypes;
const ObjectCollectionRuleLifecycleStates = __importStar(require("./object-collection-rule-lifecycle-states"));
exports.ObjectCollectionRuleLifecycleStates = ObjectCollectionRuleLifecycleStates.ObjectCollectionRuleLifecycleStates;
const OperationStatus = __importStar(require("./operation-status"));
exports.OperationStatus = OperationStatus.OperationStatus;
const ParseQueryDetails = __importStar(require("./parse-query-details"));
exports.ParseQueryDetails = ParseQueryDetails.ParseQueryDetails;
const ParseQueryOutput = __importStar(require("./parse-query-output"));
exports.ParseQueryOutput = ParseQueryOutput.ParseQueryOutput;
const ParsedContent = __importStar(require("./parsed-content"));
exports.ParsedContent = ParsedContent.ParsedContent;
const ParsedField = __importStar(require("./parsed-field"));
exports.ParsedField = ParsedField.ParsedField;
const ParserSummaryReport = __importStar(require("./parser-summary-report"));
exports.ParserSummaryReport = ParserSummaryReport.ParserSummaryReport;
const ParserTestResult = __importStar(require("./parser-test-result"));
exports.ParserTestResult = ParserTestResult.ParserTestResult;
const PayloadType = __importStar(require("./payload-type"));
exports.PayloadType = PayloadType.PayloadType;
const PropertyOverride = __importStar(require("./property-override"));
exports.PropertyOverride = PropertyOverride.PropertyOverride;
const PurgeStorageDataDetails = __importStar(require("./purge-storage-data-details"));
exports.PurgeStorageDataDetails = PurgeStorageDataDetails.PurgeStorageDataDetails;
const QueryAggregation = __importStar(require("./query-aggregation"));
exports.QueryAggregation = QueryAggregation.QueryAggregation;
const QueryDetails = __importStar(require("./query-details"));
exports.QueryDetails = QueryDetails.QueryDetails;
const QueryOperationType = __importStar(require("./query-operation-type"));
exports.QueryOperationType = QueryOperationType.QueryOperationType;
const QueryWorkRequest = __importStar(require("./query-work-request"));
exports.QueryWorkRequest = QueryWorkRequest.QueryWorkRequest;
const QueryWorkRequestCollection = __importStar(require("./query-work-request-collection"));
exports.QueryWorkRequestCollection = QueryWorkRequestCollection.QueryWorkRequestCollection;
const QueryWorkRequestSummary = __importStar(require("./query-work-request-summary"));
exports.QueryWorkRequestSummary = QueryWorkRequestSummary.QueryWorkRequestSummary;
const RecallArchivedDataDetails = __importStar(require("./recall-archived-data-details"));
exports.RecallArchivedDataDetails = RecallArchivedDataDetails.RecallArchivedDataDetails;
const RecalledData = __importStar(require("./recalled-data"));
exports.RecalledData = RecalledData.RecalledData;
const RecalledDataCollection = __importStar(require("./recalled-data-collection"));
exports.RecalledDataCollection = RecalledDataCollection.RecalledDataCollection;
const RegexMatchResult = __importStar(require("./regex-match-result"));
exports.RegexMatchResult = RegexMatchResult.RegexMatchResult;
const ReleaseRecalledDataDetails = __importStar(require("./release-recalled-data-details"));
exports.ReleaseRecalledDataDetails = ReleaseRecalledDataDetails.ReleaseRecalledDataDetails;
const RemoveEntityAssociationsDetails = __importStar(require("./remove-entity-associations-details"));
exports.RemoveEntityAssociationsDetails = RemoveEntityAssociationsDetails.RemoveEntityAssociationsDetails;
const ResultColumn = __importStar(require("./result-column"));
exports.ResultColumn = ResultColumn.ResultColumn;
const Schedule = __importStar(require("./schedule"));
exports.Schedule = Schedule.Schedule;
const ScheduledTask = __importStar(require("./scheduled-task"));
exports.ScheduledTask = ScheduledTask.ScheduledTask;
const ScheduledTaskCollection = __importStar(require("./scheduled-task-collection"));
exports.ScheduledTaskCollection = ScheduledTaskCollection.ScheduledTaskCollection;
const ScheduledTaskSummary = __importStar(require("./scheduled-task-summary"));
exports.ScheduledTaskSummary = ScheduledTaskSummary.ScheduledTaskSummary;
const SchedulerResource = __importStar(require("./scheduler-resource"));
exports.SchedulerResource = SchedulerResource.SchedulerResource;
const ScopeFilter = __importStar(require("./scope-filter"));
exports.ScopeFilter = ScopeFilter.ScopeFilter;
const SourceMappingResponse = __importStar(require("./source-mapping-response"));
exports.SourceMappingResponse = SourceMappingResponse.SourceMappingResponse;
const SourceSummaryReport = __importStar(require("./source-summary-report"));
exports.SourceSummaryReport = SourceSummaryReport.SourceSummaryReport;
const SourceValidateDetails = __importStar(require("./source-validate-details"));
exports.SourceValidateDetails = SourceValidateDetails.SourceValidateDetails;
const SourceValidateResults = __importStar(require("./source-validate-results"));
exports.SourceValidateResults = SourceValidateResults.SourceValidateResults;
const StatusSummary = __importStar(require("./status-summary"));
exports.StatusSummary = StatusSummary.StatusSummary;
const StepInfo = __importStar(require("./step-info"));
exports.StepInfo = StepInfo.StepInfo;
const Storage = __importStar(require("./storage"));
exports.Storage = Storage.Storage;
const StorageDataType = __importStar(require("./storage-data-type"));
exports.StorageDataType = StorageDataType.StorageDataType;
const StorageOperationType = __importStar(require("./storage-operation-type"));
exports.StorageOperationType = StorageOperationType.StorageOperationType;
const StorageUsage = __importStar(require("./storage-usage"));
exports.StorageUsage = StorageUsage.StorageUsage;
const StorageWorkRequest = __importStar(require("./storage-work-request"));
exports.StorageWorkRequest = StorageWorkRequest.StorageWorkRequest;
const StorageWorkRequestCollection = __importStar(require("./storage-work-request-collection"));
exports.StorageWorkRequestCollection = StorageWorkRequestCollection.StorageWorkRequestCollection;
const StorageWorkRequestSummary = __importStar(require("./storage-work-request-summary"));
exports.StorageWorkRequestSummary = StorageWorkRequestSummary.StorageWorkRequestSummary;
const SubSystemName = __importStar(require("./sub-system-name"));
exports.SubSystemName = SubSystemName.SubSystemName;
const Success = __importStar(require("./success"));
exports.Success = Success.Success;
const SuggestDetails = __importStar(require("./suggest-details"));
exports.SuggestDetails = SuggestDetails.SuggestDetails;
const SuggestOutput = __importStar(require("./suggest-output"));
exports.SuggestOutput = SuggestOutput.SuggestOutput;
const TaskType = __importStar(require("./task-type"));
exports.TaskType = TaskType.TaskType;
const TestParserPayloadDetails = __importStar(require("./test-parser-payload-details"));
exports.TestParserPayloadDetails = TestParserPayloadDetails.TestParserPayloadDetails;
const TimeRange = __importStar(require("./time-range"));
exports.TimeRange = TimeRange.TimeRange;
const TimezoneCollection = __importStar(require("./timezone-collection"));
exports.TimezoneCollection = TimezoneCollection.TimezoneCollection;
const UiParserTestMetadata = __importStar(require("./ui-parser-test-metadata"));
exports.UiParserTestMetadata = UiParserTestMetadata.UiParserTestMetadata;
const UpdateLogAnalyticsEmBridgeDetails = __importStar(require("./update-log-analytics-em-bridge-details"));
exports.UpdateLogAnalyticsEmBridgeDetails = UpdateLogAnalyticsEmBridgeDetails.UpdateLogAnalyticsEmBridgeDetails;
const UpdateLogAnalyticsEntityDetails = __importStar(require("./update-log-analytics-entity-details"));
exports.UpdateLogAnalyticsEntityDetails = UpdateLogAnalyticsEntityDetails.UpdateLogAnalyticsEntityDetails;
const UpdateLogAnalyticsEntityTypeDetails = __importStar(require("./update-log-analytics-entity-type-details"));
exports.UpdateLogAnalyticsEntityTypeDetails = UpdateLogAnalyticsEntityTypeDetails.UpdateLogAnalyticsEntityTypeDetails;
const UpdateLogAnalyticsLogGroupDetails = __importStar(require("./update-log-analytics-log-group-details"));
exports.UpdateLogAnalyticsLogGroupDetails = UpdateLogAnalyticsLogGroupDetails.UpdateLogAnalyticsLogGroupDetails;
const UpdateLogAnalyticsObjectCollectionRuleDetails = __importStar(require("./update-log-analytics-object-collection-rule-details"));
exports.UpdateLogAnalyticsObjectCollectionRuleDetails = UpdateLogAnalyticsObjectCollectionRuleDetails.UpdateLogAnalyticsObjectCollectionRuleDetails;
const UpdateLookupMetadataDetails = __importStar(require("./update-lookup-metadata-details"));
exports.UpdateLookupMetadataDetails = UpdateLookupMetadataDetails.UpdateLookupMetadataDetails;
const UpdateScheduledTaskDetails = __importStar(require("./update-scheduled-task-details"));
exports.UpdateScheduledTaskDetails = UpdateScheduledTaskDetails.UpdateScheduledTaskDetails;
const UpdateStorageDetails = __importStar(require("./update-storage-details"));
exports.UpdateStorageDetails = UpdateStorageDetails.UpdateStorageDetails;
const Upload = __importStar(require("./upload"));
exports.Upload = Upload.Upload;
const UploadCollection = __importStar(require("./upload-collection"));
exports.UploadCollection = UploadCollection.UploadCollection;
const UploadFileCollection = __importStar(require("./upload-file-collection"));
exports.UploadFileCollection = UploadFileCollection.UploadFileCollection;
const UploadFileStatus = __importStar(require("./upload-file-status"));
exports.UploadFileStatus = UploadFileStatus.UploadFileStatus;
const UploadFileSummary = __importStar(require("./upload-file-summary"));
exports.UploadFileSummary = UploadFileSummary.UploadFileSummary;
const UploadSummary = __importStar(require("./upload-summary"));
exports.UploadSummary = UploadSummary.UploadSummary;
const UploadWarningCollection = __importStar(require("./upload-warning-collection"));
exports.UploadWarningCollection = UploadWarningCollection.UploadWarningCollection;
const UploadWarningSummary = __importStar(require("./upload-warning-summary"));
exports.UploadWarningSummary = UploadWarningSummary.UploadWarningSummary;
const UpsertLogAnalyticsAssociation = __importStar(require("./upsert-log-analytics-association"));
exports.UpsertLogAnalyticsAssociation = UpsertLogAnalyticsAssociation.UpsertLogAnalyticsAssociation;
const UpsertLogAnalyticsAssociationDetails = __importStar(require("./upsert-log-analytics-association-details"));
exports.UpsertLogAnalyticsAssociationDetails = UpsertLogAnalyticsAssociationDetails.UpsertLogAnalyticsAssociationDetails;
const UpsertLogAnalyticsFieldDetails = __importStar(require("./upsert-log-analytics-field-details"));
exports.UpsertLogAnalyticsFieldDetails = UpsertLogAnalyticsFieldDetails.UpsertLogAnalyticsFieldDetails;
const UpsertLogAnalyticsLabelDetails = __importStar(require("./upsert-log-analytics-label-details"));
exports.UpsertLogAnalyticsLabelDetails = UpsertLogAnalyticsLabelDetails.UpsertLogAnalyticsLabelDetails;
const UpsertLogAnalyticsParserDetails = __importStar(require("./upsert-log-analytics-parser-details"));
exports.UpsertLogAnalyticsParserDetails = UpsertLogAnalyticsParserDetails.UpsertLogAnalyticsParserDetails;
const UpsertLogAnalyticsSourceDetails = __importStar(require("./upsert-log-analytics-source-details"));
exports.UpsertLogAnalyticsSourceDetails = UpsertLogAnalyticsSourceDetails.UpsertLogAnalyticsSourceDetails;
const UsageStatusItem = __importStar(require("./usage-status-item"));
exports.UsageStatusItem = UsageStatusItem.UsageStatusItem;
const ValueType = __importStar(require("./value-type"));
exports.ValueType = ValueType.ValueType;
const VerifyOutput = __importStar(require("./verify-output"));
exports.VerifyOutput = VerifyOutput.VerifyOutput;
const Violation = __importStar(require("./violation"));
exports.Violation = Violation.Violation;
const WarningReferenceDetails = __importStar(require("./warning-reference-details"));
exports.WarningReferenceDetails = WarningReferenceDetails.WarningReferenceDetails;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestCollection = __importStar(require("./work-request-collection"));
exports.WorkRequestCollection = WorkRequestCollection.WorkRequestCollection;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestErrorCollection = __importStar(require("./work-request-error-collection"));
exports.WorkRequestErrorCollection = WorkRequestErrorCollection.WorkRequestErrorCollection;
const WorkRequestLog = __importStar(require("./work-request-log"));
exports.WorkRequestLog = WorkRequestLog.WorkRequestLog;
const WorkRequestLogCollection = __importStar(require("./work-request-log-collection"));
exports.WorkRequestLogCollection = WorkRequestLogCollection.WorkRequestLogCollection;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
const WorkRequestStatus = __importStar(require("./work-request-status"));
exports.WorkRequestStatus = WorkRequestStatus.WorkRequestStatus;
const WorkRequestSummary = __importStar(require("./work-request-summary"));
exports.WorkRequestSummary = WorkRequestSummary.WorkRequestSummary;
const AddFieldsCommandDescriptor = __importStar(require("./add-fields-command-descriptor"));
exports.AddFieldsCommandDescriptor = AddFieldsCommandDescriptor.AddFieldsCommandDescriptor;
const BottomCommandDescriptor = __importStar(require("./bottom-command-descriptor"));
exports.BottomCommandDescriptor = BottomCommandDescriptor.BottomCommandDescriptor;
const BucketCommandDescriptor = __importStar(require("./bucket-command-descriptor"));
exports.BucketCommandDescriptor = BucketCommandDescriptor.BucketCommandDescriptor;
const ChartColumn = __importStar(require("./chart-column"));
exports.ChartColumn = ChartColumn.ChartColumn;
const ChartDataColumn = __importStar(require("./chart-data-column"));
exports.ChartDataColumn = ChartDataColumn.ChartDataColumn;
const ClassifyColumn = __importStar(require("./classify-column"));
exports.ClassifyColumn = ClassifyColumn.ClassifyColumn;
const ClassifyCommandDescriptor = __importStar(require("./classify-command-descriptor"));
exports.ClassifyCommandDescriptor = ClassifyCommandDescriptor.ClassifyCommandDescriptor;
const ClusterCommandDescriptor = __importStar(require("./cluster-command-descriptor"));
exports.ClusterCommandDescriptor = ClusterCommandDescriptor.ClusterCommandDescriptor;
const ClusterCompareCommandDescriptor = __importStar(require("./cluster-compare-command-descriptor"));
exports.ClusterCompareCommandDescriptor = ClusterCompareCommandDescriptor.ClusterCompareCommandDescriptor;
const ClusterDetailsCommandDescriptor = __importStar(require("./cluster-details-command-descriptor"));
exports.ClusterDetailsCommandDescriptor = ClusterDetailsCommandDescriptor.ClusterDetailsCommandDescriptor;
const ClusterSplitCommandDescriptor = __importStar(require("./cluster-split-command-descriptor"));
exports.ClusterSplitCommandDescriptor = ClusterSplitCommandDescriptor.ClusterSplitCommandDescriptor;
const Column = __importStar(require("./column"));
exports.Column = Column.Column;
const CommandDescriptor = __importStar(require("./command-descriptor"));
exports.CommandDescriptor = CommandDescriptor.CommandDescriptor;
const CreateAccelerationTaskDetails = __importStar(require("./create-acceleration-task-details"));
exports.CreateAccelerationTaskDetails = CreateAccelerationTaskDetails.CreateAccelerationTaskDetails;
const CreateStandardTaskDetails = __importStar(require("./create-standard-task-details"));
exports.CreateStandardTaskDetails = CreateStandardTaskDetails.CreateStandardTaskDetails;
const CreateViewCommandDescriptor = __importStar(require("./create-view-command-descriptor"));
exports.CreateViewCommandDescriptor = CreateViewCommandDescriptor.CreateViewCommandDescriptor;
const CronSchedule = __importStar(require("./cron-schedule"));
exports.CronSchedule = CronSchedule.CronSchedule;
const DeleteCommandDescriptor = __importStar(require("./delete-command-descriptor"));
exports.DeleteCommandDescriptor = DeleteCommandDescriptor.DeleteCommandDescriptor;
const DeltaCommandDescriptor = __importStar(require("./delta-command-descriptor"));
exports.DeltaCommandDescriptor = DeltaCommandDescriptor.DeltaCommandDescriptor;
const DemoModeCommandDescriptor = __importStar(require("./demo-mode-command-descriptor"));
exports.DemoModeCommandDescriptor = DemoModeCommandDescriptor.DemoModeCommandDescriptor;
const DistinctCommandDescriptor = __importStar(require("./distinct-command-descriptor"));
exports.DistinctCommandDescriptor = DistinctCommandDescriptor.DistinctCommandDescriptor;
const EvalCommandDescriptor = __importStar(require("./eval-command-descriptor"));
exports.EvalCommandDescriptor = EvalCommandDescriptor.EvalCommandDescriptor;
const EventStatsCommandDescriptor = __importStar(require("./event-stats-command-descriptor"));
exports.EventStatsCommandDescriptor = EventStatsCommandDescriptor.EventStatsCommandDescriptor;
const ExtractCommandDescriptor = __importStar(require("./extract-command-descriptor"));
exports.ExtractCommandDescriptor = ExtractCommandDescriptor.ExtractCommandDescriptor;
const Field = __importStar(require("./field"));
exports.Field = Field.Field;
const FieldArgument = __importStar(require("./field-argument"));
exports.FieldArgument = FieldArgument.FieldArgument;
const FieldSummaryCommandDescriptor = __importStar(require("./field-summary-command-descriptor"));
exports.FieldSummaryCommandDescriptor = FieldSummaryCommandDescriptor.FieldSummaryCommandDescriptor;
const FieldsAddRemoveField = __importStar(require("./fields-add-remove-field"));
exports.FieldsAddRemoveField = FieldsAddRemoveField.FieldsAddRemoveField;
const FieldsCommandDescriptor = __importStar(require("./fields-command-descriptor"));
exports.FieldsCommandDescriptor = FieldsCommandDescriptor.FieldsCommandDescriptor;
const FixedFrequencySchedule = __importStar(require("./fixed-frequency-schedule"));
exports.FixedFrequencySchedule = FixedFrequencySchedule.FixedFrequencySchedule;
const FunctionField = __importStar(require("./function-field"));
exports.FunctionField = FunctionField.FunctionField;
const HeadCommandDescriptor = __importStar(require("./head-command-descriptor"));
exports.HeadCommandDescriptor = HeadCommandDescriptor.HeadCommandDescriptor;
const HighlightCommandDescriptor = __importStar(require("./highlight-command-descriptor"));
exports.HighlightCommandDescriptor = HighlightCommandDescriptor.HighlightCommandDescriptor;
const HighlightGroupsCommandDescriptor = __importStar(require("./highlight-groups-command-descriptor"));
exports.HighlightGroupsCommandDescriptor = HighlightGroupsCommandDescriptor.HighlightGroupsCommandDescriptor;
const HighlightRowsCommandDescriptor = __importStar(require("./highlight-rows-command-descriptor"));
exports.HighlightRowsCommandDescriptor = HighlightRowsCommandDescriptor.HighlightRowsCommandDescriptor;
const LinkCommandDescriptor = __importStar(require("./link-command-descriptor"));
exports.LinkCommandDescriptor = LinkCommandDescriptor.LinkCommandDescriptor;
const LinkDetailsCommandDescriptor = __importStar(require("./link-details-command-descriptor"));
exports.LinkDetailsCommandDescriptor = LinkDetailsCommandDescriptor.LinkDetailsCommandDescriptor;
const LiteralArgument = __importStar(require("./literal-argument"));
exports.LiteralArgument = LiteralArgument.LiteralArgument;
const LookupCommandDescriptor = __importStar(require("./lookup-command-descriptor"));
exports.LookupCommandDescriptor = LookupCommandDescriptor.LookupCommandDescriptor;
const MacroCommandDescriptor = __importStar(require("./macro-command-descriptor"));
exports.MacroCommandDescriptor = MacroCommandDescriptor.MacroCommandDescriptor;
const MapCommandDescriptor = __importStar(require("./map-command-descriptor"));
exports.MapCommandDescriptor = MapCommandDescriptor.MapCommandDescriptor;
const MultiSearchCommandDescriptor = __importStar(require("./multi-search-command-descriptor"));
exports.MultiSearchCommandDescriptor = MultiSearchCommandDescriptor.MultiSearchCommandDescriptor;
const NlpCommandDescriptor = __importStar(require("./nlp-command-descriptor"));
exports.NlpCommandDescriptor = NlpCommandDescriptor.NlpCommandDescriptor;
const PurgeAction = __importStar(require("./purge-action"));
exports.PurgeAction = PurgeAction.PurgeAction;
const RegexCommandDescriptor = __importStar(require("./regex-command-descriptor"));
exports.RegexCommandDescriptor = RegexCommandDescriptor.RegexCommandDescriptor;
const RenameCommandDescriptor = __importStar(require("./rename-command-descriptor"));
exports.RenameCommandDescriptor = RenameCommandDescriptor.RenameCommandDescriptor;
const SearchCommandDescriptor = __importStar(require("./search-command-descriptor"));
exports.SearchCommandDescriptor = SearchCommandDescriptor.SearchCommandDescriptor;
const SearchLookupCommandDescriptor = __importStar(require("./search-lookup-command-descriptor"));
exports.SearchLookupCommandDescriptor = SearchLookupCommandDescriptor.SearchLookupCommandDescriptor;
const SortCommandDescriptor = __importStar(require("./sort-command-descriptor"));
exports.SortCommandDescriptor = SortCommandDescriptor.SortCommandDescriptor;
const SortField = __importStar(require("./sort-field"));
exports.SortField = SortField.SortField;
const StandardTask = __importStar(require("./standard-task"));
exports.StandardTask = StandardTask.StandardTask;
const StatsCommandDescriptor = __importStar(require("./stats-command-descriptor"));
exports.StatsCommandDescriptor = StatsCommandDescriptor.StatsCommandDescriptor;
const StreamAction = __importStar(require("./stream-action"));
exports.StreamAction = StreamAction.StreamAction;
const TailCommandDescriptor = __importStar(require("./tail-command-descriptor"));
exports.TailCommandDescriptor = TailCommandDescriptor.TailCommandDescriptor;
const TimeColumn = __importStar(require("./time-column"));
exports.TimeColumn = TimeColumn.TimeColumn;
const TimeCompareCommandDescriptor = __importStar(require("./time-compare-command-descriptor"));
exports.TimeCompareCommandDescriptor = TimeCompareCommandDescriptor.TimeCompareCommandDescriptor;
const TimeStatsCommandDescriptor = __importStar(require("./time-stats-command-descriptor"));
exports.TimeStatsCommandDescriptor = TimeStatsCommandDescriptor.TimeStatsCommandDescriptor;
const TopCommandDescriptor = __importStar(require("./top-command-descriptor"));
exports.TopCommandDescriptor = TopCommandDescriptor.TopCommandDescriptor;
const TrendColumn = __importStar(require("./trend-column"));
exports.TrendColumn = TrendColumn.TrendColumn;
const UpdateStandardTaskDetails = __importStar(require("./update-standard-task-details"));
exports.UpdateStandardTaskDetails = UpdateStandardTaskDetails.UpdateStandardTaskDetails;
const WhereCommandDescriptor = __importStar(require("./where-command-descriptor"));
exports.WhereCommandDescriptor = WhereCommandDescriptor.WhereCommandDescriptor;
//# sourceMappingURL=index.js.map