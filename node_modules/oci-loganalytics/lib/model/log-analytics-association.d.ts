/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * LogAnalyticsAssociation
 */
export interface LogAnalyticsAssociation {
    /**
     * The failure message.
     */
    "failureMessage"?: string;
    /**
     * The agent unique identifier.
     */
    "agentId"?: string;
    /**
     * The last attempt date.
     */
    "timeLastAttempted"?: Date;
    /**
     * The number of times the association will be attempted
     * before failing.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "retryCount"?: number;
    /**
     * The source name.
     */
    "sourceName"?: string;
    /**
     * The source display name.
     */
    "sourceDisplayName"?: string;
    /**
     * The source type internal name.
     */
    "sourceTypeName"?: string;
    /**
     * The lifecycle status.  Valid values are ACCEPTED, IN_PROGRESS, SUCCEEDED
     * or FAILED.
     *
     */
    "lifeCycleState"?: LogAnalyticsAssociation.LifeCycleState;
    /**
     * The entity unique identifier.
     */
    "entityId"?: string;
    /**
     * The entity name.
     */
    "entityName"?: string;
    /**
     * The entity type internal name.
     */
    "entityTypeName"?: string;
    /**
     * The host name.
     */
    "host"?: string;
    /**
     * The name of the entity which contains the agent.
     */
    "agentEntityName"?: string;
    /**
     * The entity type display name.
     */
    "entityTypeDisplayName"?: string;
    /**
     * The log group unique identifier.
     */
    "logGroupId"?: string;
    /**
     * The log group name.
     */
    "logGroupName"?: string;
    /**
     * The log group compartment.
     */
    "logGroupCompartment"?: string;
}
export declare namespace LogAnalyticsAssociation {
    enum LifeCycleState {
        Accepted = "ACCEPTED",
        InProgress = "IN_PROGRESS",
        Succeeded = "SUCCEEDED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: LogAnalyticsAssociation): object;
}
