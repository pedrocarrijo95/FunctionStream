/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Typeahead results
 *
 */
export interface SuggestOutput {
    /**
     * Character position suggestion should be placed in queryString provided as input.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "position": number;
    /**
     * Context specific list of querylanguage commands if input is seeking command suggestions.
     *
     */
    "commands"?: Array<string>;
    /**
     * Context specific list of querylanguage fields / columns if input is seeking field / column suggestions.
     *
     */
    "fields"?: Array<string>;
    /**
     * Context specific list of field values if input is seeking field value suggestions.
     *
     */
    "fieldValues"?: Array<string>;
    /**
     * Context specific list of terms / phrases if input is seeking terms / phrase suggestions.
     *
     */
    "terms"?: Array<string>;
    /**
     * Context specific list of querylanguage command options if input is seeking command option suggestions.
     *
     */
    "options"?: Array<string>;
    /**
     * Context specific list of querylanguage querystring examples if input is seeking queryString example suggestions.
     *
     */
    "examples"?: Array<string>;
}
export declare namespace SuggestOutput {
    function getJsonObj(obj: SuggestOutput): object;
}
