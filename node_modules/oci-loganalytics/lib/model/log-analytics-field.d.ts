/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Field Details
 */
export interface LogAnalyticsField {
    /**
     * The name this field is given in the common event expression standard from mitre.org.
     * This is used for reference when exporting content conforming to CEE standard
     *
     */
    "ceeAlias"?: string;
    /**
     * The field data type.
     */
    "dataType"?: string;
    /**
     * The field default regular expression.
     */
    "regularExpression"?: string;
    /**
     * The field description.
     */
    "description"?: string;
    /**
     * The field display name.
     */
    "displayName"?: string;
    /**
     * The field edit version. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "editVersion"?: number;
    /**
     * The facet priority. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "facetPriority"?: number;
    /**
     * The field internal name.
     */
    "name"?: string;
    /**
     * A flag inidcating whether or not the facet is elibigle for use.
     *
     */
    "isFacetEligible"?: boolean;
    /**
     * A flag inidcating whether or not the cardinality of the field is high.
     *
     */
    "isHighCardinality"?: boolean;
    /**
     * A flag inidcating whether or not the field is a large data field.
     *
     */
    "isLargeData"?: boolean;
    /**
     * A flag indicating whether or not the field is multi-valued.
     *
     */
    "isMultiValued"?: boolean;
    /**
     * A flag inidcating whether or not this is a primary field.
     *
     */
    "isPrimary"?: boolean;
    /**
     * The system flag.  A value of false denotes a custom, or user
     * defined object.  A value of true denotes a built in object.
     *
     */
    "isSystem"?: boolean;
    /**
     * A flag inidcating whether or not the field can be summarized.
     *
     */
    "isSummarizable"?: boolean;
    /**
     * The mapped value.
     */
    "mappedValue"?: string;
    /**
     * A flag inidcating whether or not the field is metric key eligible.
     *
     */
    "isMetricKeyEligible"?: boolean;
    /**
     * A flag inidcating whether or not the field is metric value eligible.
     *
     */
    "isMetricValueEligible"?: boolean;
    /**
     * A flag inidcating whether or not the field is range facet eligible.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "rangeFacetEligible"?: number;
    /**
     * A flag inidcating whether or not the field is table eligible.
     *
     */
    "isTableEligible"?: boolean;
    /**
     * The field unit type.
     */
    "unitType"?: string;
}
export declare namespace LogAnalyticsField {
    function getJsonObj(obj: LogAnalyticsField): object;
}
