/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * LogAnalytics label
 */
export interface LogAnalyticsLabel {
    /**
     * An array of label aliases.
     */
    "aliases"?: Array<model.LogAnalyticsLabelAlias>;
    /**
     * The source usage count for this label. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "countUsageInSource"?: number;
    /**
     * The type of suggestion for label usage. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "suggestType"?: number;
    /**
     * The label description.
     */
    "description"?: string;
    /**
     * The label display name.
     */
    "displayName"?: string;
    /**
     * The label edit version. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "editVersion"?: number;
    /**
     * The label impact.
     */
    "impact"?: string;
    /**
     * The system flag.  A value of false denotes a custom, or user
     * defined label.  A value of true denotes a built in label.
     *
     */
    "isSystem"?: boolean;
    /**
     * The label name.
     */
    "name"?: string;
    /**
     * The label priority. Valid values are (NONE, LOW, HIGH). NONE is default.
     */
    "priority"?: LogAnalyticsLabel.Priority;
    /**
     * The label recommendation.
     */
    "recommendation"?: string;
    /**
     * The label type. Valid values are (INFO, PROBLEM). INFO is default.
     */
    "type"?: LogAnalyticsLabel.Type;
    /**
     * A flag indicating whether or not the label has been deleted.
     *
     */
    "isUserDeleted"?: boolean;
}
export declare namespace LogAnalyticsLabel {
    enum Priority {
        None = "NONE",
        Low = "LOW",
        Medium = "MEDIUM",
        High = "HIGH",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Type {
        Info = "INFO",
        Problem = "PROBLEM",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: LogAnalyticsLabel): object;
}
