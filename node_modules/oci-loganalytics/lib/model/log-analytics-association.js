"use strict";
/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogAnalyticsAssociation = void 0;
var LogAnalyticsAssociation;
(function (LogAnalyticsAssociation) {
    let LifeCycleState;
    (function (LifeCycleState) {
        LifeCycleState["Accepted"] = "ACCEPTED";
        LifeCycleState["InProgress"] = "IN_PROGRESS";
        LifeCycleState["Succeeded"] = "SUCCEEDED";
        LifeCycleState["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifeCycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifeCycleState = LogAnalyticsAssociation.LifeCycleState || (LogAnalyticsAssociation.LifeCycleState = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    LogAnalyticsAssociation.getJsonObj = getJsonObj;
})(LogAnalyticsAssociation = exports.LogAnalyticsAssociation || (exports.LogAnalyticsAssociation = {}));
//# sourceMappingURL=log-analytics-association.js.map