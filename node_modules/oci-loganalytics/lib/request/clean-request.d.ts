/**
 *
 *
 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
/**
 * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/loganalytics/Clean.ts.html |here} to see how to use CleanRequest.
 */
export interface CleanRequest extends common.BaseRequest {
    /**
     * The Logging Analytics namespace used for the request.
     *
     */
    "namespaceName": string;
    /**
     * Unique scheduledTask id returned from task create.
     * If invalid will lead to a 404 not found.
     *
     */
    "scheduledTaskId": string;
    /**
     * Optional parameter to specify start of time range, in the format defined by RFC3339.
     * Default value is beginning of time.
     *
     */
    "timeStart"?: Date;
    /**
     * Optional parameter to specify end of time range, in the format defined by RFC3339.
     * Default value is end of time.
     *
     */
    "timeEnd"?: Date;
    /**
     * The client request ID for tracing.
     */
    "opcRequestId"?: string;
    /**
     * A token that uniquely identifies a request so it can be retried in case of a timeout or
     * server error without risk of executing that same action again. Retry tokens expire after 24
     * hours, but can be invalidated before then due to conflicting operations. For example, if a resource
     * has been deleted and purged from the system, then a retry of the original creation request
     * might be rejected.
     *
     */
    "opcRetryToken"?: string;
}
