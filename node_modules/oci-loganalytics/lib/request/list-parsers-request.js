"use strict";
/**
 *
 *
 * OpenAPI spec version: 20200601
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListParsersRequest = void 0;
var ListParsersRequest;
(function (ListParsersRequest) {
    let SourceType;
    (function (SourceType) {
        SourceType["OsFile"] = "OS_FILE";
        SourceType["Syslog"] = "SYSLOG";
        SourceType["Odl"] = "ODL";
        SourceType["OsWindowsSys"] = "OS_WINDOWS_SYS";
    })(SourceType = ListParsersRequest.SourceType || (ListParsersRequest.SourceType = {}));
    let ParserType;
    (function (ParserType) {
        ParserType["All"] = "ALL";
        ParserType["Regex"] = "REGEX";
        ParserType["Xml"] = "XML";
        ParserType["Json"] = "JSON";
        ParserType["Odl"] = "ODL";
        ParserType["Delimited"] = "DELIMITED";
    })(ParserType = ListParsersRequest.ParserType || (ListParsersRequest.ParserType = {}));
    let IsSystem;
    (function (IsSystem) {
        IsSystem["All"] = "ALL";
        IsSystem["Custom"] = "CUSTOM";
        IsSystem["BuiltIn"] = "BUILT_IN";
    })(IsSystem = ListParsersRequest.IsSystem || (ListParsersRequest.IsSystem = {}));
    let SortOrder;
    (function (SortOrder) {
        SortOrder["Asc"] = "ASC";
        SortOrder["Desc"] = "DESC";
    })(SortOrder = ListParsersRequest.SortOrder || (ListParsersRequest.SortOrder = {}));
    let SortBy;
    (function (SortBy) {
        SortBy["Name"] = "name";
        SortBy["Type"] = "type";
        SortBy["SourcesCount"] = "sourcesCount";
        SortBy["TimeUpdated"] = "timeUpdated";
    })(SortBy = ListParsersRequest.SortBy || (ListParsersRequest.SortBy = {}));
})(ListParsersRequest = exports.ListParsersRequest || (exports.ListParsersRequest = {}));
//# sourceMappingURL=list-parsers-request.js.map