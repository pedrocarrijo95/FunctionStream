/**
 * Functions Service API
 * API for the Functions service.

 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { FunctionsManagementWaiter } from "./functionsmanagement-waiter";
export declare enum FunctionsInvokeApiKeys {
}
export declare class FunctionsInvokeClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Invokes a function
     * @param InvokeFunctionRequest
     * @return InvokeFunctionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/InvokeFunction.ts.html |here} to see how to use InvokeFunction API.
     */
    invokeFunction(invokeFunctionRequest: requests.InvokeFunctionRequest): Promise<responses.InvokeFunctionResponse>;
}
export declare enum FunctionsManagementApiKeys {
}
export declare class FunctionsManagementClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": FunctionsManagementWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new FunctionsManagementWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): FunctionsManagementWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): FunctionsManagementWaiter;
    /**
     * Moves an application into a different compartment within the same tenancy.
     * For information about moving resources between compartments, see [Moving Resources Between Compartments](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * @param ChangeApplicationCompartmentRequest
     * @return ChangeApplicationCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/ChangeApplicationCompartment.ts.html |here} to see how to use ChangeApplicationCompartment API.
     */
    changeApplicationCompartment(changeApplicationCompartmentRequest: requests.ChangeApplicationCompartmentRequest): Promise<responses.ChangeApplicationCompartmentResponse>;
    /**
     * Creates a new application.
     * @param CreateApplicationRequest
     * @return CreateApplicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/CreateApplication.ts.html |here} to see how to use CreateApplication API.
     */
    createApplication(createApplicationRequest: requests.CreateApplicationRequest): Promise<responses.CreateApplicationResponse>;
    /**
     * Creates a new function.
     * @param CreateFunctionRequest
     * @return CreateFunctionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/CreateFunction.ts.html |here} to see how to use CreateFunction API.
     */
    createFunction(createFunctionRequest: requests.CreateFunctionRequest): Promise<responses.CreateFunctionResponse>;
    /**
     * Deletes an application.
     * @param DeleteApplicationRequest
     * @return DeleteApplicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/DeleteApplication.ts.html |here} to see how to use DeleteApplication API.
     */
    deleteApplication(deleteApplicationRequest: requests.DeleteApplicationRequest): Promise<responses.DeleteApplicationResponse>;
    /**
     * Deletes a function.
     * @param DeleteFunctionRequest
     * @return DeleteFunctionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/DeleteFunction.ts.html |here} to see how to use DeleteFunction API.
     */
    deleteFunction(deleteFunctionRequest: requests.DeleteFunctionRequest): Promise<responses.DeleteFunctionResponse>;
    /**
     * Retrieves an application.
     * @param GetApplicationRequest
     * @return GetApplicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/GetApplication.ts.html |here} to see how to use GetApplication API.
     */
    getApplication(getApplicationRequest: requests.GetApplicationRequest): Promise<responses.GetApplicationResponse>;
    /**
     * Retrieves a function.
     * @param GetFunctionRequest
     * @return GetFunctionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/GetFunction.ts.html |here} to see how to use GetFunction API.
     */
    getFunction(getFunctionRequest: requests.GetFunctionRequest): Promise<responses.GetFunctionResponse>;
    /**
     * Lists applications for a compartment.
     * @param ListApplicationsRequest
     * @return ListApplicationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/ListApplications.ts.html |here} to see how to use ListApplications API.
     */
    listApplications(listApplicationsRequest: requests.ListApplicationsRequest): Promise<responses.ListApplicationsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.ApplicationSummary objects
     * contained in responses from the listApplications operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllApplications(request: requests.ListApplicationsRequest): AsyncIterableIterator<models.ApplicationSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listApplications operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllApplicationsResponses(request: requests.ListApplicationsRequest): AsyncIterableIterator<responses.ListApplicationsResponse>;
    /**
     * Lists functions for an application.
     * @param ListFunctionsRequest
     * @return ListFunctionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/ListFunctions.ts.html |here} to see how to use ListFunctions API.
     */
    listFunctions(listFunctionsRequest: requests.ListFunctionsRequest): Promise<responses.ListFunctionsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.FunctionSummary objects
     * contained in responses from the listFunctions operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllFunctions(request: requests.ListFunctionsRequest): AsyncIterableIterator<models.FunctionSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listFunctions operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllFunctionsResponses(request: requests.ListFunctionsRequest): AsyncIterableIterator<responses.ListFunctionsResponse>;
    /**
     * Modifies an application
     * @param UpdateApplicationRequest
     * @return UpdateApplicationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/UpdateApplication.ts.html |here} to see how to use UpdateApplication API.
     */
    updateApplication(updateApplicationRequest: requests.UpdateApplicationRequest): Promise<responses.UpdateApplicationResponse>;
    /**
     * Modifies a function
     * @param UpdateFunctionRequest
     * @return UpdateFunctionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/functions/UpdateFunction.ts.html |here} to see how to use UpdateFunction API.
     */
    updateFunction(updateFunctionRequest: requests.UpdateFunctionRequest): Promise<responses.UpdateFunctionResponse>;
}
