/**
 * Object Storage Service API
 * Common set of Object Storage and Archive Storage APIs for managing buckets, objects, and related resources.
For more information, see [Overview of Object Storage](/Content/Object/Concepts/objectstorageoverview.htm) and
[Overview of Archive Storage](/Content/Archive/Concepts/archivestorageoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: opc_casper_users_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The amount of time that objects in the bucket should be preserved for and which is calculated in relation to
 * each object's Last-Modified timestamp. If duration is not present, then there is no time limit and the objects
 * in the bucket will be preserved indefinitely.
 *
 */
export interface Duration {
    /**
     * The timeAmount is interpreted in units defined by the timeUnit parameter, and is calculated in relation
     * to each object's Last-Modified timestamp.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "timeAmount": number;
    /**
     * The unit that should be used to interpret timeAmount.
     */
    "timeUnit": Duration.TimeUnit;
}
export declare namespace Duration {
    enum TimeUnit {
        Years = "YEARS",
        Days = "DAYS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Duration): object;
}
