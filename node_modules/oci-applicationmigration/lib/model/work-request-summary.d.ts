/**
 * Application Migration API
 * Application Migration simplifies the migration of applications from Oracle Cloud Infrastructure Classic to Oracle Cloud Infrastructure.
You can use Application Migration API to migrate applications, such as Oracle Java Cloud Service, SOA Cloud Service, and Integration Classic
instances, to Oracle Cloud Infrastructure. For more information, see
[Overview of Application Migration](/iaas/application-migration/appmigrationoverview.htm).

 * OpenAPI spec version: 20191031
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A summary of the status of a work request.
 */
export interface WorkRequestSummary {
    /**
     * The asynchronous operation tracked by this work request.
     */
    "operationType": model.OperationTypes;
    /**
     * The status of the work request.
     */
    "status": model.OperationStatus;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the work request.
     */
    "id": string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing
     * this work request.
     *
     */
    "compartmentId": string;
    /**
     * The percentage completion of the operation tracked by this work request. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "percentComplete": number;
    /**
     * The date and time the work request was created, in the format defined by RFC3339.
     */
    "timeAccepted": Date;
    /**
     * The date and time the work request transitioned from `ACCEPTED` to `IN_PROGRESS`, in
     * the format defined by RFC3339.
     *
     */
    "timeStarted"?: Date;
    /**
     * The date and time the work request reached a terminal state, either `FAILED` or `SUCCEEDED`.
     * Format is defined by RFC3339.
     *
     */
    "timeFinished"?: Date;
}
export declare namespace WorkRequestSummary {
    function getJsonObj(obj: WorkRequestSummary): object;
}
