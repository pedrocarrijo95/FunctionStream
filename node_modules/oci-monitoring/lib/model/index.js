"use strict";
/**
 * Monitoring API
 * Use the Monitoring API to manage metric queries and alarms for assessing the health, capacity, and performance of your cloud resources.
Endpoints vary by operation. For PostMetric, use the `telemetry-ingestion` endpoints; for all other operations, use the `telemetry` endpoints.
For information about monitoring, see [Monitoring Overview](/iaas/Content/Monitoring/Concepts/monitoringoverview.htm).

 * OpenAPI spec version: 20180401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateAlarmDetails = exports.Suppression = exports.SummarizeMetricsDataDetails = exports.PostMetricDataResponseDetails = exports.PostMetricDataDetails = exports.MetricDataDetails = exports.MetricData = exports.Metric = exports.ListMetricsDetails = exports.FailedMetricRecord = exports.Datapoint = exports.CreateAlarmDetails = exports.ChangeAlarmCompartmentDetails = exports.AlarmSummary = exports.AlarmStatusSummary = exports.AlarmHistoryEntry = exports.AlarmHistoryCollection = exports.Alarm = exports.AggregatedDatapoint = void 0;
const AggregatedDatapoint = __importStar(require("./aggregated-datapoint"));
exports.AggregatedDatapoint = AggregatedDatapoint.AggregatedDatapoint;
const Alarm = __importStar(require("./alarm"));
exports.Alarm = Alarm.Alarm;
const AlarmHistoryCollection = __importStar(require("./alarm-history-collection"));
exports.AlarmHistoryCollection = AlarmHistoryCollection.AlarmHistoryCollection;
const AlarmHistoryEntry = __importStar(require("./alarm-history-entry"));
exports.AlarmHistoryEntry = AlarmHistoryEntry.AlarmHistoryEntry;
const AlarmStatusSummary = __importStar(require("./alarm-status-summary"));
exports.AlarmStatusSummary = AlarmStatusSummary.AlarmStatusSummary;
const AlarmSummary = __importStar(require("./alarm-summary"));
exports.AlarmSummary = AlarmSummary.AlarmSummary;
const ChangeAlarmCompartmentDetails = __importStar(require("./change-alarm-compartment-details"));
exports.ChangeAlarmCompartmentDetails = ChangeAlarmCompartmentDetails.ChangeAlarmCompartmentDetails;
const CreateAlarmDetails = __importStar(require("./create-alarm-details"));
exports.CreateAlarmDetails = CreateAlarmDetails.CreateAlarmDetails;
const Datapoint = __importStar(require("./datapoint"));
exports.Datapoint = Datapoint.Datapoint;
const FailedMetricRecord = __importStar(require("./failed-metric-record"));
exports.FailedMetricRecord = FailedMetricRecord.FailedMetricRecord;
const ListMetricsDetails = __importStar(require("./list-metrics-details"));
exports.ListMetricsDetails = ListMetricsDetails.ListMetricsDetails;
const Metric = __importStar(require("./metric"));
exports.Metric = Metric.Metric;
const MetricData = __importStar(require("./metric-data"));
exports.MetricData = MetricData.MetricData;
const MetricDataDetails = __importStar(require("./metric-data-details"));
exports.MetricDataDetails = MetricDataDetails.MetricDataDetails;
const PostMetricDataDetails = __importStar(require("./post-metric-data-details"));
exports.PostMetricDataDetails = PostMetricDataDetails.PostMetricDataDetails;
const PostMetricDataResponseDetails = __importStar(require("./post-metric-data-response-details"));
exports.PostMetricDataResponseDetails = PostMetricDataResponseDetails.PostMetricDataResponseDetails;
const SummarizeMetricsDataDetails = __importStar(require("./summarize-metrics-data-details"));
exports.SummarizeMetricsDataDetails = SummarizeMetricsDataDetails.SummarizeMetricsDataDetails;
const Suppression = __importStar(require("./suppression"));
exports.Suppression = Suppression.Suppression;
const UpdateAlarmDetails = __importStar(require("./update-alarm-details"));
exports.UpdateAlarmDetails = UpdateAlarmDetails.UpdateAlarmDetails;
//# sourceMappingURL=index.js.map