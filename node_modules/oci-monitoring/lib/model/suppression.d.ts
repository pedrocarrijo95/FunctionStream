/**
 * Monitoring API
 * Use the Monitoring API to manage metric queries and alarms for assessing the health, capacity, and performance of your cloud resources.
Endpoints vary by operation. For PostMetric, use the `telemetry-ingestion` endpoints; for all other operations, use the `telemetry` endpoints.
For information about monitoring, see [Monitoring Overview](/iaas/Content/Monitoring/Concepts/monitoringoverview.htm).

 * OpenAPI spec version: 20180401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The configuration details for suppressing an alarm.
 * For information about alarms, see [Alarms Overview](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#AlarmsOverview).
 * <p>
 **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
 *
 */
export interface Suppression {
    /**
      * Human-readable reason for suppressing alarm notifications.
  * It does not have to be unique, and it's changeable.
  * Avoid entering confidential information.
  * <p>
  Oracle recommends including tracking information for the event or associated work,
  * such as a ticket number.
  * <p>
  Example: `Planned outage due to change IT-1234.`
  *
      */
    "description"?: string;
    /**
      * The start date and time for the suppression to take place, inclusive. Format defined by RFC3339.
  * <p>
  Example: `2019-02-01T01:02:29.600Z`
  *
      */
    "timeSuppressFrom": Date;
    /**
      * The end date and time for the suppression to take place, inclusive. Format defined by RFC3339.
  * <p>
  Example: `2019-02-01T02:02:29.600Z`
  *
      */
    "timeSuppressUntil": Date;
}
export declare namespace Suppression {
    function getJsonObj(obj: Suppression): object;
}
