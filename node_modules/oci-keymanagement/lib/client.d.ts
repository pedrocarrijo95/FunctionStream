/**
 * Vault Service Key Management API
 * API for managing and performing operations with keys and vaults. (For the API for managing secrets, see the Vault Service
Secret Management API. For the API for retrieving secrets, see the Vault Service Secret Retrieval API.)

 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { KmsManagementWaiter } from "./kmsmanagement-waiter";
import { KmsVaultWaiter } from "./kmsvault-waiter";
export declare enum KmsCryptoApiKeys {
}
export declare class KmsCryptoClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Decrypts data using the given [DecryptDataDetails](https://docs.cloud.oracle.com/api/#/en/key/latest/datatypes/DecryptDataDetails) resource.
     *
     * @param DecryptRequest
     * @return DecryptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/Decrypt.ts.html |here} to see how to use Decrypt API.
     */
    decrypt(decryptRequest: requests.DecryptRequest): Promise<responses.DecryptResponse>;
    /**
     * Encrypts data using the given [EncryptDataDetails](https://docs.cloud.oracle.com/api/#/en/key/latest/datatypes/EncryptDataDetails) resource.
     * Plaintext included in the example request is a base64-encoded value of a UTF-8 string.
     *
     * @param EncryptRequest
     * @return EncryptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/Encrypt.ts.html |here} to see how to use Encrypt API.
     */
    encrypt(encryptRequest: requests.EncryptRequest): Promise<responses.EncryptResponse>;
    /**
     * Exports a specific version of a master encryption key according to the details of the request. For their protection,
     * keys that you create and store on a hardware security module (HSM) can never leave the HSM. You can only export keys
     * stored on the server. For export, the key version is encrypted by an RSA public key that you provide.
     *
     * @param ExportKeyRequest
     * @return ExportKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ExportKey.ts.html |here} to see how to use ExportKey API.
     */
    exportKey(exportKeyRequest: requests.ExportKeyRequest): Promise<responses.ExportKeyResponse>;
    /**
     * Generates a key that you can use to encrypt or decrypt data.
     *
     * @param GenerateDataEncryptionKeyRequest
     * @return GenerateDataEncryptionKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/GenerateDataEncryptionKey.ts.html |here} to see how to use GenerateDataEncryptionKey API.
     */
    generateDataEncryptionKey(generateDataEncryptionKeyRequest: requests.GenerateDataEncryptionKeyRequest): Promise<responses.GenerateDataEncryptionKeyResponse>;
    /**
     * Creates a digital signature for a message or message digest by using the private key of a public-private key pair,
     * also known as an asymmetric key. To verify the generated signature, you can use the [Verify](https://docs.cloud.oracle.com/api/#/en/key/latest/VerifiedData/Verify)
     * operation. Or, if you want to validate the signature outside of the service, you can do so by using the public key of the same asymmetric key.
     *
     * @param SignRequest
     * @return SignResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/Sign.ts.html |here} to see how to use Sign API.
     */
    sign(signRequest: requests.SignRequest): Promise<responses.SignResponse>;
    /**
     * Verifies a digital signature that was generated by the [Sign](https://docs.cloud.oracle.com/api/#/en/key/latest/SignedData/Sign) operation
     * by using the public key of the same asymmetric key that was used to sign the data. If you want to validate the
     * digital signature outside of the service, you can do so by using the public key of the asymmetric key.
     *
     * @param VerifyRequest
     * @return VerifyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/Verify.ts.html |here} to see how to use Verify API.
     */
    verify(verifyRequest: requests.VerifyRequest): Promise<responses.VerifyResponse>;
}
export declare enum KmsManagementApiKeys {
}
export declare class KmsManagementClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": KmsManagementWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Creates a new KmsManagementWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): KmsManagementWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): KmsManagementWaiter;
    /**
     * Backs up an encrypted file that contains all key versions and metadata of the specified key so that you can restore
     * the key later. The file also contains the metadata of the vault that the key belonged to.
     *
     * @param BackupKeyRequest
     * @return BackupKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/BackupKey.ts.html |here} to see how to use BackupKey API.
     */
    backupKey(backupKeyRequest: requests.BackupKeyRequest): Promise<responses.BackupKeyResponse>;
    /**
       * Cancels the scheduled deletion of the specified key. Canceling
  * a scheduled deletion restores the key's lifecycle state to what
  * it was before its scheduled deletion.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param CancelKeyDeletionRequest
       * @return CancelKeyDeletionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/CancelKeyDeletion.ts.html |here} to see how to use CancelKeyDeletion API.
       */
    cancelKeyDeletion(cancelKeyDeletionRequest: requests.CancelKeyDeletionRequest): Promise<responses.CancelKeyDeletionResponse>;
    /**
       * Cancels the scheduled deletion of the specified key version. Canceling
  * a scheduled deletion restores the key version to its lifecycle state from
  * before its scheduled deletion.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param CancelKeyVersionDeletionRequest
       * @return CancelKeyVersionDeletionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/CancelKeyVersionDeletion.ts.html |here} to see how to use CancelKeyVersionDeletion API.
       */
    cancelKeyVersionDeletion(cancelKeyVersionDeletionRequest: requests.CancelKeyVersionDeletionRequest): Promise<responses.CancelKeyVersionDeletionResponse>;
    /**
       * Moves a key into a different compartment within the same tenancy. For information about
  * moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
  * <p>
  When provided, if-match is checked against the ETag values of the key.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param ChangeKeyCompartmentRequest
       * @return ChangeKeyCompartmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ChangeKeyCompartment.ts.html |here} to see how to use ChangeKeyCompartment API.
       */
    changeKeyCompartment(changeKeyCompartmentRequest: requests.ChangeKeyCompartmentRequest): Promise<responses.ChangeKeyCompartmentResponse>;
    /**
       * Creates a new master encryption key.
  * <p>
  As a management operation, this call is subject to a Key Management limit that applies to the total
  * number of requests across all management write operations. Key Management might throttle this call
  * to reject an otherwise valid request when the total rate of management write operations exceeds 10
  * requests per second for a given tenancy.
  *
       * @param CreateKeyRequest
       * @return CreateKeyResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/CreateKey.ts.html |here} to see how to use CreateKey API.
       */
    createKey(createKeyRequest: requests.CreateKeyRequest): Promise<responses.CreateKeyResponse>;
    /**
       * Generates a new [KeyVersion](https://docs.cloud.oracle.com/api/#/en/key/latest/KeyVersion/) resource that provides new cryptographic
  * material for a master encryption key. The key must be in an `ENABLED` state to be rotated.
  * <p>
  As a management operation, this call is subject to a Key Management limit that applies to the total number
  * of requests across all  management write operations. Key Management might throttle this call to reject an
  * otherwise valid request when the total rate of management write operations exceeds 10 requests per second
  * for a given tenancy.
  *
       * @param CreateKeyVersionRequest
       * @return CreateKeyVersionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/CreateKeyVersion.ts.html |here} to see how to use CreateKeyVersion API.
       */
    createKeyVersion(createKeyVersionRequest: requests.CreateKeyVersionRequest): Promise<responses.CreateKeyVersionResponse>;
    /**
       * Disables a master encryption key so it can no longer be used for encryption, decryption, or
  * generating new data encryption keys.
  * <p>
  As a management operation, this call is subject to a Key Management limit that applies to the total number
  * of requests across all management write operations. Key Management might throttle this call to reject an
  * otherwise valid request when the total rate of management write operations exceeds 10 requests per second
  * for a given tenancy.
  *
       * @param DisableKeyRequest
       * @return DisableKeyResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/DisableKey.ts.html |here} to see how to use DisableKey API.
       */
    disableKey(disableKeyRequest: requests.DisableKeyRequest): Promise<responses.DisableKeyResponse>;
    /**
       * Enables a master encryption key so it can be used for encryption, decryption, or
  * generating new data encryption keys.
  * <p>
  As a management operation, this call is subject to a Key Management limit that applies to the total number
  * of requests across all management write operations. Key Management might throttle this call to reject an
  * otherwise valid request when the total rate of management write operations exceeds 10 requests per second
  * for a given tenancy.
  *
       * @param EnableKeyRequest
       * @return EnableKeyResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/EnableKey.ts.html |here} to see how to use EnableKey API.
       */
    enableKey(enableKeyRequest: requests.EnableKeyRequest): Promise<responses.EnableKeyResponse>;
    /**
       * Gets information about the specified master encryption key.
  * <p>
  As a management operation, this call is subject to a Key Management limit that applies to the total number
  * of requests across all management read operations. Key Management might throttle this call to reject an
  * otherwise valid request when the total rate of management read operations exceeds 10 requests per second for
  * a given tenancy.
  *
       * @param GetKeyRequest
       * @return GetKeyResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/GetKey.ts.html |here} to see how to use GetKey API.
       */
    getKey(getKeyRequest: requests.GetKeyRequest): Promise<responses.GetKeyResponse>;
    /**
       * Gets information about the specified key version.
  * <p>
  As a management operation, this call is subject to a Key Management limit that applies to the total number
  * of requests across all management read operations. Key Management might throttle this call to reject an
  * otherwise valid request when the total rate of management read operations exceeds 10 requests per second
  * for a given tenancy.
  *
       * @param GetKeyVersionRequest
       * @return GetKeyVersionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/GetKeyVersion.ts.html |here} to see how to use GetKeyVersion API.
       */
    getKeyVersion(getKeyVersionRequest: requests.GetKeyVersionRequest): Promise<responses.GetKeyVersionResponse>;
    /**
     * When a vault has a replica, each operation on the vault or its resources, such as
     * keys, is replicated and has an associated replicationId. Replication status provides
     * details about whether the operation associated with the given replicationId has been
     * successfully applied across replicas.
     *
     * @param GetReplicationStatusRequest
     * @return GetReplicationStatusResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/GetReplicationStatus.ts.html |here} to see how to use GetReplicationStatus API.
     */
    getReplicationStatus(getReplicationStatusRequest: requests.GetReplicationStatusRequest): Promise<responses.GetReplicationStatusResponse>;
    /**
     * Gets details about the public RSA wrapping key associated with the vault in the endpoint. Each vault has an RSA key-pair that wraps and
     * unwraps AES key material for import into Key Management.
     *
     * @param GetWrappingKeyRequest
     * @return GetWrappingKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/GetWrappingKey.ts.html |here} to see how to use GetWrappingKey API.
     */
    getWrappingKey(getWrappingKeyRequest: requests.GetWrappingKeyRequest): Promise<responses.GetWrappingKeyResponse>;
    /**
     * Imports AES key material to create a new key with. The key material must be base64-encoded and
     * wrapped by the vault's public RSA wrapping key before you can import it. Key Management supports AES symmetric keys
     * that are exactly 16, 24, or 32 bytes. Furthermore, the key length must match what you specify at the time of import.
     *
     * @param ImportKeyRequest
     * @return ImportKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ImportKey.ts.html |here} to see how to use ImportKey API.
     */
    importKey(importKeyRequest: requests.ImportKeyRequest): Promise<responses.ImportKeyResponse>;
    /**
     * Imports AES key material to create a new key version with, and then rotates the key to begin using the new
     * key version. The key material must be base64-encoded and wrapped by the vault's public RSA wrapping key
     * before you can import it. Key Management supports AES symmetric keys that are exactly 16, 24, or 32 bytes.
     * Furthermore, the key length must match the length of the specified key and what you specify as the length
     * at the time of import.
     *
     * @param ImportKeyVersionRequest
     * @return ImportKeyVersionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ImportKeyVersion.ts.html |here} to see how to use ImportKeyVersion API.
     */
    importKeyVersion(importKeyVersionRequest: requests.ImportKeyVersionRequest): Promise<responses.ImportKeyVersionResponse>;
    /**
       * Lists all [KeyVersion](https://docs.cloud.oracle.com/api/#/en/key/latest/KeyVersion/) resources for the specified
  * master encryption key.
  * <p>
  As a management operation, this call is subject to a Key Management limit that applies to the total number
  * of requests across all management read operations. Key Management might throttle this call to reject an
  * otherwise valid request when the total rate of management read operations exceeds 10 requests per second
  * for a given tenancy.
  *
       * @param ListKeyVersionsRequest
       * @return ListKeyVersionsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ListKeyVersions.ts.html |here} to see how to use ListKeyVersions API.
       */
    listKeyVersions(listKeyVersionsRequest: requests.ListKeyVersionsRequest): Promise<responses.ListKeyVersionsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.KeyVersionSummary objects
     * contained in responses from the listKeyVersions operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllKeyVersions(request: requests.ListKeyVersionsRequest): AsyncIterableIterator<models.KeyVersionSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listKeyVersions operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllKeyVersionsResponses(request: requests.ListKeyVersionsRequest): AsyncIterableIterator<responses.ListKeyVersionsResponse>;
    /**
       * Lists the master encryption keys in the specified vault and compartment.
  * <p>
  As a management operation, this call is subject to a Key Management limit that applies to the total number
  * of requests across all management read operations. Key Management might throttle this call to reject an
  * otherwise valid request when the total rate of management read operations exceeds 10 requests per second
  * for a given tenancy.
  *
       * @param ListKeysRequest
       * @return ListKeysResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ListKeys.ts.html |here} to see how to use ListKeys API.
       */
    listKeys(listKeysRequest: requests.ListKeysRequest): Promise<responses.ListKeysResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.KeySummary objects
     * contained in responses from the listKeys operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllKeys(request: requests.ListKeysRequest): AsyncIterableIterator<models.KeySummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listKeys operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllKeysResponses(request: requests.ListKeysRequest): AsyncIterableIterator<responses.ListKeysResponse>;
    /**
     * Restores the specified key to the specified vault, based on information in the backup file provided.
     * If the vault doesn't exist, the operation returns a response with a 404 HTTP status error code. You
     * need to first restore the vault associated with the key.
     *
     * @param RestoreKeyFromFileRequest
     * @return RestoreKeyFromFileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/RestoreKeyFromFile.ts.html |here} to see how to use RestoreKeyFromFile API.
     */
    restoreKeyFromFile(restoreKeyFromFileRequest: requests.RestoreKeyFromFileRequest): Promise<responses.RestoreKeyFromFileResponse>;
    /**
     * Restores the specified key to the specified vault from an Oracle Cloud Infrastructure
     * Object Storage location. If the vault doesn't exist, the operation returns a response with a
     * 404 HTTP status error code. You need to first restore the vault associated with the key.
     *
     * @param RestoreKeyFromObjectStoreRequest
     * @return RestoreKeyFromObjectStoreResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/RestoreKeyFromObjectStore.ts.html |here} to see how to use RestoreKeyFromObjectStore API.
     */
    restoreKeyFromObjectStore(restoreKeyFromObjectStoreRequest: requests.RestoreKeyFromObjectStoreRequest): Promise<responses.RestoreKeyFromObjectStoreResponse>;
    /**
       * Schedules the deletion of the specified key. This sets the lifecycle state of the key
  * to `PENDING_DELETION` and then deletes it after the specified retention period ends.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param ScheduleKeyDeletionRequest
       * @return ScheduleKeyDeletionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ScheduleKeyDeletion.ts.html |here} to see how to use ScheduleKeyDeletion API.
       */
    scheduleKeyDeletion(scheduleKeyDeletionRequest: requests.ScheduleKeyDeletionRequest): Promise<responses.ScheduleKeyDeletionResponse>;
    /**
       * Schedules the deletion of the specified key version. This sets the lifecycle state of the key version
  * to `PENDING_DELETION` and then deletes it after the specified retention period ends.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param ScheduleKeyVersionDeletionRequest
       * @return ScheduleKeyVersionDeletionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ScheduleKeyVersionDeletion.ts.html |here} to see how to use ScheduleKeyVersionDeletion API.
       */
    scheduleKeyVersionDeletion(scheduleKeyVersionDeletionRequest: requests.ScheduleKeyVersionDeletionRequest): Promise<responses.ScheduleKeyVersionDeletionResponse>;
    /**
       * Updates the properties of a master encryption key. Specifically, you can update the
  * `displayName`, `freeformTags`, and `definedTags` properties. Furthermore,
  * the key must be in an `ENABLED` or `CREATING` state to be updated.
  * <p>
  As a management operation, this call is subject to a Key Management limit that applies to the total number
  * of requests across all management write operations. Key Management might throttle this call to reject an
  * otherwise valid request when the total rate of management write operations exceeds 10 requests per second
  * for a given tenancy.
  *
       * @param UpdateKeyRequest
       * @return UpdateKeyResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/UpdateKey.ts.html |here} to see how to use UpdateKey API.
       */
    updateKey(updateKeyRequest: requests.UpdateKeyRequest): Promise<responses.UpdateKeyResponse>;
}
export declare enum KmsVaultApiKeys {
}
export declare class KmsVaultClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": KmsVaultWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new KmsVaultWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): KmsVaultWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): KmsVaultWaiter;
    /**
     * Backs up an encrypted file that contains all the metadata of a vault so that you can restore the vault later.
     * You can backup a vault whether or not it contains keys. This operation only backs up the
     * metadata of the vault, and does not include key metadata.
     *
     * @param BackupVaultRequest
     * @return BackupVaultResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/BackupVault.ts.html |here} to see how to use BackupVault API.
     */
    backupVault(backupVaultRequest: requests.BackupVaultRequest): Promise<responses.BackupVaultResponse>;
    /**
       * Cancels the scheduled deletion of the specified vault. Canceling a scheduled deletion
  * restores the vault and all keys in it to their respective states from before their
  * scheduled deletion. All keys that were scheduled for deletion prior to vault
  * deletion retain their lifecycle state and time of deletion.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param CancelVaultDeletionRequest
       * @return CancelVaultDeletionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/CancelVaultDeletion.ts.html |here} to see how to use CancelVaultDeletion API.
       */
    cancelVaultDeletion(cancelVaultDeletionRequest: requests.CancelVaultDeletionRequest): Promise<responses.CancelVaultDeletionResponse>;
    /**
       * Moves a vault into a different compartment within the same tenancy. For information about
  * moving resources between compartments, see [Moving Resources to a Different Compartment](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
  * <p>
  When provided, if-match is checked against the ETag values of the resource.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param ChangeVaultCompartmentRequest
       * @return ChangeVaultCompartmentResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ChangeVaultCompartment.ts.html |here} to see how to use ChangeVaultCompartment API.
       */
    changeVaultCompartment(changeVaultCompartmentRequest: requests.ChangeVaultCompartmentRequest): Promise<responses.ChangeVaultCompartmentResponse>;
    /**
       * Creates a new vault. The type of vault you create determines key placement, pricing, and
  * available options. Options include storage isolation, a dedicated service endpoint instead
  * of a shared service endpoint for API calls, and either a dedicated hardware security module
  * (HSM) or a multitenant HSM.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param CreateVaultRequest
       * @return CreateVaultResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/CreateVault.ts.html |here} to see how to use CreateVault API.
       */
    createVault(createVaultRequest: requests.CreateVaultRequest): Promise<responses.CreateVaultResponse>;
    /**
       * Creates a replica for the vault in another region in the same realm
  * <p>
  The API is a no-op if called for same region that a vault is already replicated to.
  * 409 if called on a vault that is already replicated to a different region. Users need to delete
  * existing replica first before calling it with a different region.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param CreateVaultReplicaRequest
       * @return CreateVaultReplicaResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/CreateVaultReplica.ts.html |here} to see how to use CreateVaultReplica API.
       */
    createVaultReplica(createVaultReplicaRequest: requests.CreateVaultReplicaRequest): Promise<responses.CreateVaultReplicaResponse>;
    /**
       * Deletes a vault replica
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param DeleteVaultReplicaRequest
       * @return DeleteVaultReplicaResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/DeleteVaultReplica.ts.html |here} to see how to use DeleteVaultReplica API.
       */
    deleteVaultReplica(deleteVaultReplicaRequest: requests.DeleteVaultReplicaRequest): Promise<responses.DeleteVaultReplicaResponse>;
    /**
       * Gets the specified vault's configuration information.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning read operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * read operations exceeds 10 requests per second for a given tenancy.
  *
       * @param GetVaultRequest
       * @return GetVaultResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/GetVault.ts.html |here} to see how to use GetVault API.
       */
    getVault(getVaultRequest: requests.GetVaultRequest): Promise<responses.GetVaultResponse>;
    /**
     * Gets the count of keys and key versions in the specified vault to calculate usage against service limits.
     *
     * @param GetVaultUsageRequest
     * @return GetVaultUsageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/GetVaultUsage.ts.html |here} to see how to use GetVaultUsage API.
     */
    getVaultUsage(getVaultUsageRequest: requests.GetVaultUsageRequest): Promise<responses.GetVaultUsageResponse>;
    /**
       * Lists the replicas for a vault
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param ListVaultReplicasRequest
       * @return ListVaultReplicasResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ListVaultReplicas.ts.html |here} to see how to use ListVaultReplicas API.
       */
    listVaultReplicas(listVaultReplicasRequest: requests.ListVaultReplicasRequest): Promise<responses.ListVaultReplicasResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.VaultReplicaSummary objects
     * contained in responses from the listVaultReplicas operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllVaultReplicas(request: requests.ListVaultReplicasRequest): AsyncIterableIterator<models.VaultReplicaSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listVaultReplicas operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllVaultReplicasResponses(request: requests.ListVaultReplicasRequest): AsyncIterableIterator<responses.ListVaultReplicasResponse>;
    /**
       * Lists the vaults in the specified compartment.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning read operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * read operations exceeds 10 requests per second for a given tenancy.
  *
       * @param ListVaultsRequest
       * @return ListVaultsResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ListVaults.ts.html |here} to see how to use ListVaults API.
       */
    listVaults(listVaultsRequest: requests.ListVaultsRequest): Promise<responses.ListVaultsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.VaultSummary objects
     * contained in responses from the listVaults operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllVaults(request: requests.ListVaultsRequest): AsyncIterableIterator<models.VaultSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listVaults operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllVaultsResponses(request: requests.ListVaultsRequest): AsyncIterableIterator<responses.ListVaultsResponse>;
    /**
     * Restores a vault from an encrypted backup file. If a vault
     * with the same OCID already exists, this operation returns a response with a
     * 409 HTTP status error code.
     *
     * @param RestoreVaultFromFileRequest
     * @return RestoreVaultFromFileResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/RestoreVaultFromFile.ts.html |here} to see how to use RestoreVaultFromFile API.
     */
    restoreVaultFromFile(restoreVaultFromFileRequest: requests.RestoreVaultFromFileRequest): Promise<responses.RestoreVaultFromFileResponse>;
    /**
     * Restores a vault from an encrypted backup file stored in Oracle Cloud Infrastructure Object
     * Storage. If a vault with the same OCID already exists, this operation returns
     * a response with a 409 HTTP status error code.
     *
     * @param RestoreVaultFromObjectStoreRequest
     * @return RestoreVaultFromObjectStoreResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/RestoreVaultFromObjectStore.ts.html |here} to see how to use RestoreVaultFromObjectStore API.
     */
    restoreVaultFromObjectStore(restoreVaultFromObjectStoreRequest: requests.RestoreVaultFromObjectStoreRequest): Promise<responses.RestoreVaultFromObjectStoreResponse>;
    /**
       * Schedules the deletion of the specified vault. This sets the lifecycle state of the vault and all keys in it
  * that are not already scheduled for deletion to `PENDING_DELETION` and then deletes them after the
  * retention period ends. The lifecycle state and time of deletion for keys already scheduled for deletion won't
  * change. If any keys in the vault are scheduled to be deleted after the specified time of
  * deletion for the vault, the call is rejected with the error code 409.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param ScheduleVaultDeletionRequest
       * @return ScheduleVaultDeletionResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/ScheduleVaultDeletion.ts.html |here} to see how to use ScheduleVaultDeletion API.
       */
    scheduleVaultDeletion(scheduleVaultDeletionRequest: requests.ScheduleVaultDeletionRequest): Promise<responses.ScheduleVaultDeletionResponse>;
    /**
       * Updates the properties of a vault. Specifically, you can update the
  * `displayName`, `freeformTags`, and `definedTags` properties. Furthermore,
  * the vault must be in an ACTIVE or CREATING state to be updated.
  * <p>
  As a provisioning operation, this call is subject to a Key Management limit that applies to
  * the total number of requests across all provisioning write operations. Key Management might
  * throttle this call to reject an otherwise valid request when the total rate of provisioning
  * write operations exceeds 10 requests per second for a given tenancy.
  *
       * @param UpdateVaultRequest
       * @return UpdateVaultResponse
       * @throws OciError when an error occurs
       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/keymanagement/UpdateVault.ts.html |here} to see how to use UpdateVault API.
       */
    updateVault(updateVaultRequest: requests.UpdateVaultRequest): Promise<responses.UpdateVaultResponse>;
}
