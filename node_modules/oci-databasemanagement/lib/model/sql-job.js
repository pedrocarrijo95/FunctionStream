"use strict";
/**
 * Database Management API
 * Use the Database Management API to perform tasks such as obtaining performance and resource usage metrics
for a fleet of Managed Databases or a specific Managed Database, creating Managed Database Groups, and
running a SQL job on a Managed Database or Managed Database Group.

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SqlJob = void 0;
const model = __importStar(require("../model"));
var SqlJob;
(function (SqlJob) {
    let SqlType;
    (function (SqlType) {
        SqlType["Query"] = "QUERY";
        SqlType["Dml"] = "DML";
        SqlType["Ddl"] = "DDL";
        SqlType["Plsql"] = "PLSQL";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        SqlType["UnknownValue"] = "UNKNOWN_VALUE";
    })(SqlType = SqlJob.SqlType || (SqlJob.SqlType = {}));
    let OperationType;
    (function (OperationType) {
        OperationType["ExecuteSql"] = "EXECUTE_SQL";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        OperationType["UnknownValue"] = "UNKNOWN_VALUE";
    })(OperationType = SqlJob.OperationType || (SqlJob.OperationType = {}));
    let Role;
    (function (Role) {
        Role["Normal"] = "NORMAL";
        Role["Sysdba"] = "SYSDBA";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Role["UnknownValue"] = "UNKNOWN_VALUE";
    })(Role = SqlJob.Role || (SqlJob.Role = {}));
    function getJsonObj(obj, isParentJsonObj) {
        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj ? obj : model.Job.getJsonObj(obj))), {});
        return jsonObj;
    }
    SqlJob.getJsonObj = getJsonObj;
    SqlJob.jobType = "SQL";
})(SqlJob = exports.SqlJob || (exports.SqlJob = {}));
//# sourceMappingURL=sql-job.js.map