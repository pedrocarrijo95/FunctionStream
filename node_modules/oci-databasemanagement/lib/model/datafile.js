"use strict";
/**
 * Database Management API
 * Use the Database Management API to perform tasks such as obtaining performance and resource usage metrics
for a fleet of Managed Databases or a specific Managed Database, creating Managed Database Groups, and
running a SQL job on a Managed Database or Managed Database Group.

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Datafile = void 0;
var Datafile;
(function (Datafile) {
    let Status;
    (function (Status) {
        Status["Available"] = "AVAILABLE";
        Status["Invalid"] = "INVALID";
        Status["Offline"] = "OFFLINE";
        Status["Online"] = "ONLINE";
        Status["Unknown"] = "UNKNOWN";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Status["UnknownValue"] = "UNKNOWN_VALUE";
    })(Status = Datafile.Status || (Datafile.Status = {}));
    let OnlineStatus;
    (function (OnlineStatus) {
        OnlineStatus["Sysoff"] = "SYSOFF";
        OnlineStatus["System"] = "SYSTEM";
        OnlineStatus["Offline"] = "OFFLINE";
        OnlineStatus["Online"] = "ONLINE";
        OnlineStatus["Recover"] = "RECOVER";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        OnlineStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(OnlineStatus = Datafile.OnlineStatus || (Datafile.OnlineStatus = {}));
    let LostWriteProtect;
    (function (LostWriteProtect) {
        LostWriteProtect["Enabled"] = "ENABLED";
        LostWriteProtect["ProtectOff"] = "PROTECT_OFF";
        LostWriteProtect["Suspend"] = "SUSPEND";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LostWriteProtect["UnknownValue"] = "UNKNOWN_VALUE";
    })(LostWriteProtect = Datafile.LostWriteProtect || (Datafile.LostWriteProtect = {}));
    let Shared;
    (function (Shared) {
        Shared["Shared"] = "SHARED";
        Shared["LocalForRim"] = "LOCAL_FOR_RIM";
        Shared["LocalForAll"] = "LOCAL_FOR_ALL";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Shared["UnknownValue"] = "UNKNOWN_VALUE";
    })(Shared = Datafile.Shared || (Datafile.Shared = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    Datafile.getJsonObj = getJsonObj;
})(Datafile = exports.Datafile || (exports.Datafile = {}));
//# sourceMappingURL=datafile.js.map