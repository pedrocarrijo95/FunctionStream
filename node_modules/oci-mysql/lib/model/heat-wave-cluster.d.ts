/**
 * MySQL Database Service API
 * The API for the MySQL Database Service
 * OpenAPI spec version: 20190415
 * Contact: mysql-cloud-dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * A HeatWave cluster is a database accelerator for a DB System.
 *
 */
export interface HeatWaveCluster {
    /**
     * The OCID of the parent DB System this HeatWave cluster is attached to.
     */
    "dbSystemId": string;
    /**
     * The shape determines resources to allocate to the HeatWave
     * nodes - CPU cores, memory.
     *
     */
    "shapeName": string;
    /**
     * The number of analytics-processing compute instances, of the
     * specified shape, in the HeatWave cluster.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "clusterSize": number;
    /**
     * A HeatWave node is a compute host that is part of a HeatWave cluster.
     */
    "clusterNodes": Array<model.HeatWaveNode>;
    /**
     * The current state of the HeatWave cluster.
     */
    "lifecycleState": HeatWaveCluster.LifecycleState;
    /**
     * Additional information about the current lifecycleState.
     */
    "lifecycleDetails"?: string;
    /**
     * The date and time the HeatWave cluster was created,
     * as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     *
     */
    "timeCreated": Date;
    /**
     * The time the HeatWave cluster was last updated,
     * as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     *
     */
    "timeUpdated": Date;
}
export declare namespace HeatWaveCluster {
    enum LifecycleState {
        Creating = "CREATING",
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Updating = "UPDATING",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: HeatWaveCluster): object;
}
