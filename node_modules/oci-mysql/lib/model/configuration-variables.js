"use strict";
/**
 * MySQL Database Service API
 * The API for the MySQL Database Service
 * OpenAPI spec version: 20190415
 * Contact: mysql-cloud-dev_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationVariables = void 0;
var ConfigurationVariables;
(function (ConfigurationVariables) {
    let CompletionType;
    (function (CompletionType) {
        CompletionType["NoChain"] = "NO_CHAIN";
        CompletionType["Chain"] = "CHAIN";
        CompletionType["Release"] = "RELEASE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        CompletionType["UnknownValue"] = "UNKNOWN_VALUE";
    })(CompletionType = ConfigurationVariables.CompletionType || (ConfigurationVariables.CompletionType = {}));
    let DefaultAuthenticationPlugin;
    (function (DefaultAuthenticationPlugin) {
        DefaultAuthenticationPlugin["MysqlNativePassword"] = "mysql_native_password";
        DefaultAuthenticationPlugin["Sha256Password"] = "sha256_password";
        DefaultAuthenticationPlugin["CachingSha2Password"] = "caching_sha2_password";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DefaultAuthenticationPlugin["UnknownValue"] = "UNKNOWN_VALUE";
    })(DefaultAuthenticationPlugin = ConfigurationVariables.DefaultAuthenticationPlugin || (ConfigurationVariables.DefaultAuthenticationPlugin = {}));
    let TransactionIsolation;
    (function (TransactionIsolation) {
        TransactionIsolation["ReadUncommitted"] = "READ-UNCOMMITTED";
        TransactionIsolation["ReadCommited"] = "READ-COMMITED";
        TransactionIsolation["ReadCommitted"] = "READ-COMMITTED";
        TransactionIsolation["RepeatableRead"] = "REPEATABLE-READ";
        TransactionIsolation["Serializable"] = "SERIALIZABLE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        TransactionIsolation["UnknownValue"] = "UNKNOWN_VALUE";
    })(TransactionIsolation = ConfigurationVariables.TransactionIsolation || (ConfigurationVariables.TransactionIsolation = {}));
    let GroupReplicationConsistency;
    (function (GroupReplicationConsistency) {
        GroupReplicationConsistency["Eventual"] = "EVENTUAL";
        GroupReplicationConsistency["BeforeOnPrimaryFailover"] = "BEFORE_ON_PRIMARY_FAILOVER";
        GroupReplicationConsistency["Before"] = "BEFORE";
        GroupReplicationConsistency["After"] = "AFTER";
        GroupReplicationConsistency["BeforeAndAfter"] = "BEFORE_AND_AFTER";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        GroupReplicationConsistency["UnknownValue"] = "UNKNOWN_VALUE";
    })(GroupReplicationConsistency = ConfigurationVariables.GroupReplicationConsistency || (ConfigurationVariables.GroupReplicationConsistency = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    ConfigurationVariables.getJsonObj = getJsonObj;
})(ConfigurationVariables = exports.ConfigurationVariables || (exports.ConfigurationVariables = {}));
//# sourceMappingURL=configuration-variables.js.map