/**
 * Operations Insights API
 * Use the Operations Insights API to perform data extraction operations to obtain database
resource utilization, performance statistics, and reference information. For more information,
see [About Oracle Cloud Infrastructure Operations Insights](https://docs.cloud.oracle.com/en-us/iaas/operations-insights/doc/operations-insights.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { OperationsInsightsWaiter } from "./operationsinsights-waiter";
export declare enum OperationsInsightsApiKeys {
}
export declare class OperationsInsightsClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": OperationsInsightsWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new OperationsInsightsWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): OperationsInsightsWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): OperationsInsightsWaiter;
    /**
     * Moves a DatabaseInsight resource from one compartment identifier to another. When provided, If-Match is checked against ETag values of the resource.
     * @param ChangeDatabaseInsightCompartmentRequest
     * @return ChangeDatabaseInsightCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ChangeDatabaseInsightCompartment.ts.html |here} to see how to use ChangeDatabaseInsightCompartment API.
     */
    changeDatabaseInsightCompartment(changeDatabaseInsightCompartmentRequest: requests.ChangeDatabaseInsightCompartmentRequest): Promise<responses.ChangeDatabaseInsightCompartmentResponse>;
    /**
     * Moves a EnterpriseManagerBridge resource from one compartment to another. When provided, If-Match is checked against ETag values of the resource.
     * @param ChangeEnterpriseManagerBridgeCompartmentRequest
     * @return ChangeEnterpriseManagerBridgeCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ChangeEnterpriseManagerBridgeCompartment.ts.html |here} to see how to use ChangeEnterpriseManagerBridgeCompartment API.
     */
    changeEnterpriseManagerBridgeCompartment(changeEnterpriseManagerBridgeCompartmentRequest: requests.ChangeEnterpriseManagerBridgeCompartmentRequest): Promise<responses.ChangeEnterpriseManagerBridgeCompartmentResponse>;
    /**
     * Moves a HostInsight resource from one compartment identifier to another. When provided, If-Match is checked against ETag values of the resource.
     * @param ChangeHostInsightCompartmentRequest
     * @return ChangeHostInsightCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ChangeHostInsightCompartment.ts.html |here} to see how to use ChangeHostInsightCompartment API.
     */
    changeHostInsightCompartment(changeHostInsightCompartmentRequest: requests.ChangeHostInsightCompartmentRequest): Promise<responses.ChangeHostInsightCompartmentResponse>;
    /**
     * Create a Database Insight resource for a database in Operations Insights. The database will be enabled in Operations Insights. Database metric collection and analysis will be started.
     *
     * @param CreateDatabaseInsightRequest
     * @return CreateDatabaseInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/CreateDatabaseInsight.ts.html |here} to see how to use CreateDatabaseInsight API.
     */
    createDatabaseInsight(createDatabaseInsightRequest: requests.CreateDatabaseInsightRequest): Promise<responses.CreateDatabaseInsightResponse>;
    /**
     * Create a Enterprise Manager bridge in Operations Insights.
     *
     * @param CreateEnterpriseManagerBridgeRequest
     * @return CreateEnterpriseManagerBridgeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/CreateEnterpriseManagerBridge.ts.html |here} to see how to use CreateEnterpriseManagerBridge API.
     */
    createEnterpriseManagerBridge(createEnterpriseManagerBridgeRequest: requests.CreateEnterpriseManagerBridgeRequest): Promise<responses.CreateEnterpriseManagerBridgeResponse>;
    /**
     * Create a Host Insight resource for a host in Operations Insights. The host will be enabled in Operations Insights. Host metric collection and analysis will be started.
     *
     * @param CreateHostInsightRequest
     * @return CreateHostInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/CreateHostInsight.ts.html |here} to see how to use CreateHostInsight API.
     */
    createHostInsight(createHostInsightRequest: requests.CreateHostInsightRequest): Promise<responses.CreateHostInsightResponse>;
    /**
     * Deletes a database insight. The database insight will be deleted and cannot be enabled again.
     * @param DeleteDatabaseInsightRequest
     * @return DeleteDatabaseInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/DeleteDatabaseInsight.ts.html |here} to see how to use DeleteDatabaseInsight API.
     */
    deleteDatabaseInsight(deleteDatabaseInsightRequest: requests.DeleteDatabaseInsightRequest): Promise<responses.DeleteDatabaseInsightResponse>;
    /**
     * Deletes an Operations Insights Enterprise Manager bridge. If any database insight is still referencing this bridge, the operation will fail.
     * @param DeleteEnterpriseManagerBridgeRequest
     * @return DeleteEnterpriseManagerBridgeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/DeleteEnterpriseManagerBridge.ts.html |here} to see how to use DeleteEnterpriseManagerBridge API.
     */
    deleteEnterpriseManagerBridge(deleteEnterpriseManagerBridgeRequest: requests.DeleteEnterpriseManagerBridgeRequest): Promise<responses.DeleteEnterpriseManagerBridgeResponse>;
    /**
     * Deletes a host insight. The host insight will be deleted and cannot be enabled again.
     * @param DeleteHostInsightRequest
     * @return DeleteHostInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/DeleteHostInsight.ts.html |here} to see how to use DeleteHostInsight API.
     */
    deleteHostInsight(deleteHostInsightRequest: requests.DeleteHostInsightRequest): Promise<responses.DeleteHostInsightResponse>;
    /**
     * Disables a database in Operations Insights. Database metric collection and analysis will be stopped.
     * @param DisableDatabaseInsightRequest
     * @return DisableDatabaseInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/DisableDatabaseInsight.ts.html |here} to see how to use DisableDatabaseInsight API.
     */
    disableDatabaseInsight(disableDatabaseInsightRequest: requests.DisableDatabaseInsightRequest): Promise<responses.DisableDatabaseInsightResponse>;
    /**
     * Disables a host in Operations Insights. Host metric collection and analysis will be stopped.
     * @param DisableHostInsightRequest
     * @return DisableHostInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/DisableHostInsight.ts.html |here} to see how to use DisableHostInsight API.
     */
    disableHostInsight(disableHostInsightRequest: requests.DisableHostInsightRequest): Promise<responses.DisableHostInsightResponse>;
    /**
     * Enables a database in Operations Insights. Database metric collection and analysis will be started.
     * @param EnableDatabaseInsightRequest
     * @return EnableDatabaseInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/EnableDatabaseInsight.ts.html |here} to see how to use EnableDatabaseInsight API.
     */
    enableDatabaseInsight(enableDatabaseInsightRequest: requests.EnableDatabaseInsightRequest): Promise<responses.EnableDatabaseInsightResponse>;
    /**
     * Enables a host in Operations Insights. Host metric collection and analysis will be started.
     * @param EnableHostInsightRequest
     * @return EnableHostInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/EnableHostInsight.ts.html |here} to see how to use EnableHostInsight API.
     */
    enableHostInsight(enableHostInsightRequest: requests.EnableHostInsightRequest): Promise<responses.EnableHostInsightResponse>;
    /**
     * Gets details of a database insight.
     * @param GetDatabaseInsightRequest
     * @return GetDatabaseInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/GetDatabaseInsight.ts.html |here} to see how to use GetDatabaseInsight API.
     */
    getDatabaseInsight(getDatabaseInsightRequest: requests.GetDatabaseInsightRequest): Promise<responses.GetDatabaseInsightResponse>;
    /**
     * Gets details of an Operations Insights Enterprise Manager bridge.
     * @param GetEnterpriseManagerBridgeRequest
     * @return GetEnterpriseManagerBridgeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/GetEnterpriseManagerBridge.ts.html |here} to see how to use GetEnterpriseManagerBridge API.
     */
    getEnterpriseManagerBridge(getEnterpriseManagerBridgeRequest: requests.GetEnterpriseManagerBridgeRequest): Promise<responses.GetEnterpriseManagerBridgeResponse>;
    /**
     * Gets details of a host insight.
     * @param GetHostInsightRequest
     * @return GetHostInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/GetHostInsight.ts.html |here} to see how to use GetHostInsight API.
     */
    getHostInsight(getHostInsightRequest: requests.GetHostInsightRequest): Promise<responses.GetHostInsightResponse>;
    /**
     * Gets the status of the work request with the given ID.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * This is a generic ingest endpoint for all database configuration metrics.
     * @param IngestDatabaseConfigurationRequest
     * @return IngestDatabaseConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/IngestDatabaseConfiguration.ts.html |here} to see how to use IngestDatabaseConfiguration API.
     */
    ingestDatabaseConfiguration(ingestDatabaseConfigurationRequest: requests.IngestDatabaseConfigurationRequest): Promise<responses.IngestDatabaseConfigurationResponse>;
    /**
     * This is a generic ingest endpoint for all the host configuration metrics
     * @param IngestHostConfigurationRequest
     * @return IngestHostConfigurationResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/IngestHostConfiguration.ts.html |here} to see how to use IngestHostConfiguration API.
     */
    ingestHostConfiguration(ingestHostConfigurationRequest: requests.IngestHostConfigurationRequest): Promise<responses.IngestHostConfigurationResponse>;
    /**
     * This is a generic ingest endpoint for all the host performance metrics
     * @param IngestHostMetricsRequest
     * @return IngestHostMetricsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/IngestHostMetrics.ts.html |here} to see how to use IngestHostMetrics API.
     */
    ingestHostMetrics(ingestHostMetricsRequest: requests.IngestHostMetricsRequest): Promise<responses.IngestHostMetricsResponse>;
    /**
     * The sqlbucket endpoint takes in a JSON payload, persists it in Operations Insights ingest pipeline.
     * Either databaseId or id must be specified.
     *
     * @param IngestSqlBucketRequest
     * @return IngestSqlBucketResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/IngestSqlBucket.ts.html |here} to see how to use IngestSqlBucket API.
     */
    ingestSqlBucket(ingestSqlBucketRequest: requests.IngestSqlBucketRequest): Promise<responses.IngestSqlBucketResponse>;
    /**
     * The SqlPlanLines endpoint takes in a JSON payload, persists it in Operation Insights ingest pipeline.
     * Either databaseId or id must be specified.
     *
     * @param IngestSqlPlanLinesRequest
     * @return IngestSqlPlanLinesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/IngestSqlPlanLines.ts.html |here} to see how to use IngestSqlPlanLines API.
     */
    ingestSqlPlanLines(ingestSqlPlanLinesRequest: requests.IngestSqlPlanLinesRequest): Promise<responses.IngestSqlPlanLinesResponse>;
    /**
     * The SqlText endpoint takes in a JSON payload, persists it in Operation Insights ingest pipeline.
     * Either databaseId or id must be specified.
     * Disclaimer: SQL text being uploaded explicitly via APIs is not masked. Any sensitive literals contained in the sqlFullText column should be masked prior to ingestion.
     *
     * @param IngestSqlTextRequest
     * @return IngestSqlTextResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/IngestSqlText.ts.html |here} to see how to use IngestSqlText API.
     */
    ingestSqlText(ingestSqlTextRequest: requests.IngestSqlTextRequest): Promise<responses.IngestSqlTextResponse>;
    /**
     * Gets a list of database insights based on the query parameters specified. Either compartmentId or id query parameter must be specified.
     * @param ListDatabaseInsightsRequest
     * @return ListDatabaseInsightsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListDatabaseInsights.ts.html |here} to see how to use ListDatabaseInsights API.
     */
    listDatabaseInsights(listDatabaseInsightsRequest: requests.ListDatabaseInsightsRequest): Promise<responses.ListDatabaseInsightsResponse>;
    /**
     * Gets a list of Operations Insights Enterprise Manager bridges. Either compartmentId or id must be specified.
     *
     * @param ListEnterpriseManagerBridgesRequest
     * @return ListEnterpriseManagerBridgesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListEnterpriseManagerBridges.ts.html |here} to see how to use ListEnterpriseManagerBridges API.
     */
    listEnterpriseManagerBridges(listEnterpriseManagerBridgesRequest: requests.ListEnterpriseManagerBridgesRequest): Promise<responses.ListEnterpriseManagerBridgesResponse>;
    /**
     * Gets a list of host insights based on the query parameters specified. Either compartmentId or id query parameter must be specified.
     * @param ListHostInsightsRequest
     * @return ListHostInsightsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListHostInsights.ts.html |here} to see how to use ListHostInsights API.
     */
    listHostInsights(listHostInsightsRequest: requests.ListHostInsightsRequest): Promise<responses.ListHostInsightsResponse>;
    /**
     * Get a list of hosted entities details.
     *
     * @param ListHostedEntitiesRequest
     * @return ListHostedEntitiesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListHostedEntities.ts.html |here} to see how to use ListHostedEntities API.
     */
    listHostedEntities(listHostedEntitiesRequest: requests.ListHostedEntitiesRequest): Promise<responses.ListHostedEntitiesResponse>;
    /**
     * Gets a list of importable entities for an Operations Insights Enterprise Manager bridge that have not been imported before.
     *
     * @param ListImportableEnterpriseManagerEntitiesRequest
     * @return ListImportableEnterpriseManagerEntitiesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListImportableEnterpriseManagerEntities.ts.html |here} to see how to use ListImportableEnterpriseManagerEntities API.
     */
    listImportableEnterpriseManagerEntities(listImportableEnterpriseManagerEntitiesRequest: requests.ListImportableEnterpriseManagerEntitiesRequest): Promise<responses.ListImportableEnterpriseManagerEntitiesResponse>;
    /**
     * Query SQL Warehouse to list the plan xml for a given SQL execution plan. This returns a SqlPlanCollection object, but is currently limited to a single plan.
     * Either databaseId or id must be specified.
     *
     * @param ListSqlPlansRequest
     * @return ListSqlPlansResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListSqlPlans.ts.html |here} to see how to use ListSqlPlans API.
     */
    listSqlPlans(listSqlPlansRequest: requests.ListSqlPlansRequest): Promise<responses.ListSqlPlansResponse>;
    /**
     * Search SQL by SQL Identifier across databases and get the SQL Text and the details of the databases executing the SQL for a given time period.
     * @param ListSqlSearchesRequest
     * @return ListSqlSearchesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListSqlSearches.ts.html |here} to see how to use ListSqlSearches API.
     */
    listSqlSearches(listSqlSearchesRequest: requests.ListSqlSearchesRequest): Promise<responses.ListSqlSearchesResponse>;
    /**
     * Query SQL Warehouse to get the full SQL Text for a SQL.
     * @param ListSqlTextsRequest
     * @return ListSqlTextsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListSqlTexts.ts.html |here} to see how to use ListSqlTexts API.
     */
    listSqlTexts(listSqlTextsRequest: requests.ListSqlTextsRequest): Promise<responses.ListSqlTextsResponse>;
    /**
     * Return a (paginated) list of errors for a given work request.
     *
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a (paginated) list of logs for a given work request.
     *
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Returns response with time series data (endTimestamp, capacity, baseCapacity) for the time period specified.
     * The maximum time range for analysis is 2 years, hence this is intentionally not paginated.
     *
     * @param SummarizeDatabaseInsightResourceCapacityTrendRequest
     * @return SummarizeDatabaseInsightResourceCapacityTrendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeDatabaseInsightResourceCapacityTrend.ts.html |here} to see how to use SummarizeDatabaseInsightResourceCapacityTrend API.
     */
    summarizeDatabaseInsightResourceCapacityTrend(summarizeDatabaseInsightResourceCapacityTrendRequest: requests.SummarizeDatabaseInsightResourceCapacityTrendRequest): Promise<responses.SummarizeDatabaseInsightResourceCapacityTrendResponse>;
    /**
     * Get Forecast predictions for CPU and Storage resources since a time in the past.
     *
     * @param SummarizeDatabaseInsightResourceForecastTrendRequest
     * @return SummarizeDatabaseInsightResourceForecastTrendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeDatabaseInsightResourceForecastTrend.ts.html |here} to see how to use SummarizeDatabaseInsightResourceForecastTrend API.
     */
    summarizeDatabaseInsightResourceForecastTrend(summarizeDatabaseInsightResourceForecastTrendRequest: requests.SummarizeDatabaseInsightResourceForecastTrendRequest): Promise<responses.SummarizeDatabaseInsightResourceForecastTrendResponse>;
    /**
     * Lists the Resource statistics (usage,capacity, usage change percent, utilization percent, base capacity, isAutoScalingEnabled) for each database filtered by utilization level
     * @param SummarizeDatabaseInsightResourceStatisticsRequest
     * @return SummarizeDatabaseInsightResourceStatisticsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeDatabaseInsightResourceStatistics.ts.html |here} to see how to use SummarizeDatabaseInsightResourceStatistics API.
     */
    summarizeDatabaseInsightResourceStatistics(summarizeDatabaseInsightResourceStatisticsRequest: requests.SummarizeDatabaseInsightResourceStatisticsRequest): Promise<responses.SummarizeDatabaseInsightResourceStatisticsResponse>;
    /**
     * A cumulative distribution function is used to rank the usage data points per database within the specified time period.
     * For each database, the minimum data point with a ranking > the percentile value is included in the summation.
     * Linear regression functions are used to calculate the usage change percentage.
     *
     * @param SummarizeDatabaseInsightResourceUsageRequest
     * @return SummarizeDatabaseInsightResourceUsageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeDatabaseInsightResourceUsage.ts.html |here} to see how to use SummarizeDatabaseInsightResourceUsage API.
     */
    summarizeDatabaseInsightResourceUsage(summarizeDatabaseInsightResourceUsageRequest: requests.SummarizeDatabaseInsightResourceUsageRequest): Promise<responses.SummarizeDatabaseInsightResourceUsageResponse>;
    /**
     * Returns response with time series data (endTimestamp, usage, capacity) for the time period specified.
     * The maximum time range for analysis is 2 years, hence this is intentionally not paginated.
     *
     * @param SummarizeDatabaseInsightResourceUsageTrendRequest
     * @return SummarizeDatabaseInsightResourceUsageTrendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeDatabaseInsightResourceUsageTrend.ts.html |here} to see how to use SummarizeDatabaseInsightResourceUsageTrend API.
     */
    summarizeDatabaseInsightResourceUsageTrend(summarizeDatabaseInsightResourceUsageTrendRequest: requests.SummarizeDatabaseInsightResourceUsageTrendRequest): Promise<responses.SummarizeDatabaseInsightResourceUsageTrendResponse>;
    /**
     * Gets resources with current utilization (high and low) and projected utilization (high and low) for a resource type over specified time period.
     * @param SummarizeDatabaseInsightResourceUtilizationInsightRequest
     * @return SummarizeDatabaseInsightResourceUtilizationInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeDatabaseInsightResourceUtilizationInsight.ts.html |here} to see how to use SummarizeDatabaseInsightResourceUtilizationInsight API.
     */
    summarizeDatabaseInsightResourceUtilizationInsight(summarizeDatabaseInsightResourceUtilizationInsightRequest: requests.SummarizeDatabaseInsightResourceUtilizationInsightRequest): Promise<responses.SummarizeDatabaseInsightResourceUtilizationInsightResponse>;
    /**
     * Returns response with usage time series data (endTimestamp, usage, capacity) with breakdown by tablespaceName for the time period specified.
     * The maximum time range for analysis is 2 years, hence this is intentionally not paginated.
     * Either databaseId or id must be specified.
     *
     * @param SummarizeDatabaseInsightTablespaceUsageTrendRequest
     * @return SummarizeDatabaseInsightTablespaceUsageTrendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeDatabaseInsightTablespaceUsageTrend.ts.html |here} to see how to use SummarizeDatabaseInsightTablespaceUsageTrend API.
     */
    summarizeDatabaseInsightTablespaceUsageTrend(summarizeDatabaseInsightTablespaceUsageTrendRequest: requests.SummarizeDatabaseInsightTablespaceUsageTrendRequest): Promise<responses.SummarizeDatabaseInsightTablespaceUsageTrendResponse>;
    /**
     * Returns response with time series data (endTimestamp, capacity) for the time period specified.
     * The maximum time range for analysis is 2 years, hence this is intentionally not paginated.
     *
     * @param SummarizeHostInsightResourceCapacityTrendRequest
     * @return SummarizeHostInsightResourceCapacityTrendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeHostInsightResourceCapacityTrend.ts.html |here} to see how to use SummarizeHostInsightResourceCapacityTrend API.
     */
    summarizeHostInsightResourceCapacityTrend(summarizeHostInsightResourceCapacityTrendRequest: requests.SummarizeHostInsightResourceCapacityTrendRequest): Promise<responses.SummarizeHostInsightResourceCapacityTrendResponse>;
    /**
     * Get Forecast predictions for CPU or memory resources since a time in the past.
     *
     * @param SummarizeHostInsightResourceForecastTrendRequest
     * @return SummarizeHostInsightResourceForecastTrendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeHostInsightResourceForecastTrend.ts.html |here} to see how to use SummarizeHostInsightResourceForecastTrend API.
     */
    summarizeHostInsightResourceForecastTrend(summarizeHostInsightResourceForecastTrendRequest: requests.SummarizeHostInsightResourceForecastTrendRequest): Promise<responses.SummarizeHostInsightResourceForecastTrendResponse>;
    /**
     * Lists the resource statistics (usage, capacity, usage change percent, utilization percent, load) for each host filtered
     * by utilization level.
     *
     * @param SummarizeHostInsightResourceStatisticsRequest
     * @return SummarizeHostInsightResourceStatisticsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeHostInsightResourceStatistics.ts.html |here} to see how to use SummarizeHostInsightResourceStatistics API.
     */
    summarizeHostInsightResourceStatistics(summarizeHostInsightResourceStatisticsRequest: requests.SummarizeHostInsightResourceStatisticsRequest): Promise<responses.SummarizeHostInsightResourceStatisticsResponse>;
    /**
     * A cumulative distribution function is used to rank the usage data points per host within the specified time period.
     * For each host, the minimum data point with a ranking > the percentile value is included in the summation.
     * Linear regression functions are used to calculate the usage change percentage.
     *
     * @param SummarizeHostInsightResourceUsageRequest
     * @return SummarizeHostInsightResourceUsageResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeHostInsightResourceUsage.ts.html |here} to see how to use SummarizeHostInsightResourceUsage API.
     */
    summarizeHostInsightResourceUsage(summarizeHostInsightResourceUsageRequest: requests.SummarizeHostInsightResourceUsageRequest): Promise<responses.SummarizeHostInsightResourceUsageResponse>;
    /**
     * Returns response with time series data (endTimestamp, usage, capacity) for the time period specified.
     * The maximum time range for analysis is 2 years, hence this is intentionally not paginated.
     *
     * @param SummarizeHostInsightResourceUsageTrendRequest
     * @return SummarizeHostInsightResourceUsageTrendResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeHostInsightResourceUsageTrend.ts.html |here} to see how to use SummarizeHostInsightResourceUsageTrend API.
     */
    summarizeHostInsightResourceUsageTrend(summarizeHostInsightResourceUsageTrendRequest: requests.SummarizeHostInsightResourceUsageTrendRequest): Promise<responses.SummarizeHostInsightResourceUsageTrendResponse>;
    /**
     * Gets resources with current utilization (high and low) and projected utilization (high and low) for a resource type over specified time period.
     * @param SummarizeHostInsightResourceUtilizationInsightRequest
     * @return SummarizeHostInsightResourceUtilizationInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeHostInsightResourceUtilizationInsight.ts.html |here} to see how to use SummarizeHostInsightResourceUtilizationInsight API.
     */
    summarizeHostInsightResourceUtilizationInsight(summarizeHostInsightResourceUtilizationInsightRequest: requests.SummarizeHostInsightResourceUtilizationInsightRequest): Promise<responses.SummarizeHostInsightResourceUtilizationInsightResponse>;
    /**
     * Query SQL Warehouse to get the performance insights for SQLs taking greater than X% database time for a given time period across the given databases or database types.
     * @param SummarizeSqlInsightsRequest
     * @return SummarizeSqlInsightsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeSqlInsights.ts.html |here} to see how to use SummarizeSqlInsights API.
     */
    summarizeSqlInsights(summarizeSqlInsightsRequest: requests.SummarizeSqlInsightsRequest): Promise<responses.SummarizeSqlInsightsResponse>;
    /**
     * Query SQL Warehouse to get the performance insights on the execution plans for a given SQL for a given time period.
     * Either databaseId or id must be specified.
     *
     * @param SummarizeSqlPlanInsightsRequest
     * @return SummarizeSqlPlanInsightsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeSqlPlanInsights.ts.html |here} to see how to use SummarizeSqlPlanInsights API.
     */
    summarizeSqlPlanInsights(summarizeSqlPlanInsightsRequest: requests.SummarizeSqlPlanInsightsRequest): Promise<responses.SummarizeSqlPlanInsightsResponse>;
    /**
     * Query SQL Warehouse to summarize the response time distribution of query executions for a given SQL for a given time period.
     * Either databaseId or id must be specified.
     *
     * @param SummarizeSqlResponseTimeDistributionsRequest
     * @return SummarizeSqlResponseTimeDistributionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeSqlResponseTimeDistributions.ts.html |here} to see how to use SummarizeSqlResponseTimeDistributions API.
     */
    summarizeSqlResponseTimeDistributions(summarizeSqlResponseTimeDistributionsRequest: requests.SummarizeSqlResponseTimeDistributionsRequest): Promise<responses.SummarizeSqlResponseTimeDistributionsResponse>;
    /**
     * Query SQL Warehouse to get the performance statistics for SQLs taking greater than X% database time for a given time period across the given databases or database types.
     * @param SummarizeSqlStatisticsRequest
     * @return SummarizeSqlStatisticsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeSqlStatistics.ts.html |here} to see how to use SummarizeSqlStatistics API.
     */
    summarizeSqlStatistics(summarizeSqlStatisticsRequest: requests.SummarizeSqlStatisticsRequest): Promise<responses.SummarizeSqlStatisticsResponse>;
    /**
     * Query SQL Warehouse to get the performance statistics time series for a given SQL across given databases for a given time period.
     *
     * @param SummarizeSqlStatisticsTimeSeriesRequest
     * @return SummarizeSqlStatisticsTimeSeriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeSqlStatisticsTimeSeries.ts.html |here} to see how to use SummarizeSqlStatisticsTimeSeries API.
     */
    summarizeSqlStatisticsTimeSeries(summarizeSqlStatisticsTimeSeriesRequest: requests.SummarizeSqlStatisticsTimeSeriesRequest): Promise<responses.SummarizeSqlStatisticsTimeSeriesResponse>;
    /**
     * Query SQL Warehouse to get the performance statistics time series for a given SQL by execution plans for a given time period.
     * Either databaseId or id must be specified.
     *
     * @param SummarizeSqlStatisticsTimeSeriesByPlanRequest
     * @return SummarizeSqlStatisticsTimeSeriesByPlanResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/SummarizeSqlStatisticsTimeSeriesByPlan.ts.html |here} to see how to use SummarizeSqlStatisticsTimeSeriesByPlan API.
     */
    summarizeSqlStatisticsTimeSeriesByPlan(summarizeSqlStatisticsTimeSeriesByPlanRequest: requests.SummarizeSqlStatisticsTimeSeriesByPlanRequest): Promise<responses.SummarizeSqlStatisticsTimeSeriesByPlanResponse>;
    /**
     * Updates configuration of a database insight.
     * @param UpdateDatabaseInsightRequest
     * @return UpdateDatabaseInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/UpdateDatabaseInsight.ts.html |here} to see how to use UpdateDatabaseInsight API.
     */
    updateDatabaseInsight(updateDatabaseInsightRequest: requests.UpdateDatabaseInsightRequest): Promise<responses.UpdateDatabaseInsightResponse>;
    /**
     * Updates configuration of an Operations Insights Enterprise Manager bridge.
     * @param UpdateEnterpriseManagerBridgeRequest
     * @return UpdateEnterpriseManagerBridgeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/UpdateEnterpriseManagerBridge.ts.html |here} to see how to use UpdateEnterpriseManagerBridge API.
     */
    updateEnterpriseManagerBridge(updateEnterpriseManagerBridgeRequest: requests.UpdateEnterpriseManagerBridgeRequest): Promise<responses.UpdateEnterpriseManagerBridgeResponse>;
    /**
     * Updates configuration of a host insight.
     * @param UpdateHostInsightRequest
     * @return UpdateHostInsightResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/opsi/UpdateHostInsight.ts.html |here} to see how to use UpdateHostInsight API.
     */
    updateHostInsight(updateHostInsightRequest: requests.UpdateHostInsightRequest): Promise<responses.UpdateHostInsightResponse>;
}
