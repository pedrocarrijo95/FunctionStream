/**
 * Operations Insights API
 * Use the Operations Insights API to perform data extraction operations to obtain database
resource utilization, performance statistics, and reference information. For more information,
see [About Oracle Cloud Infrastructure Operations Insights](https://docs.cloud.oracle.com/en-us/iaas/operations-insights/doc/operations-insights.html).

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Configuration parameters defined for external databases instance level.
 */
export interface DBExternalInstance extends model.DatabaseConfigurationMetricGroup {
    /**
     * Name of the database instance.
     */
    "instanceName": string;
    /**
     * Host name of the database instance.
     */
    "hostName": string;
    /**
     * Total number of CPUs allocated for the host. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "cpuCount"?: number;
    /**
     * Total amount of usable Physical RAM Memory available in gigabytes. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "hostMemoryCapacity"?: number;
    /**
     * Database version.
     */
    "version"?: string;
    /**
     * Indicates whether the instance is mounted in cluster database mode (YES) or not (NO).
     */
    "parallel"?: string;
    /**
     * Role (permissions) of the database instance.
     */
    "instanceRole"?: string;
    /**
     * Indicates if logins are allowed or restricted.
     */
    "logins"?: string;
    /**
     * Status of the database.
     */
    "databaseStatus"?: string;
    /**
     * Status of the instance.
     */
    "status"?: string;
    /**
     * The edition of the database.
     */
    "edition"?: string;
    /**
     * Start up time of the database instance.
     */
    "startupTime"?: Date;
    "metricName": string;
}
export declare namespace DBExternalInstance {
    function getJsonObj(obj: DBExternalInstance, isParentJsonObj?: boolean): object;
    const metricName = "DB_EXTERNAL_INSTANCE";
}
