"use strict";
/**
 *
 *
 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SummarizeSqlStatisticsRequest = void 0;
var SummarizeSqlStatisticsRequest;
(function (SummarizeSqlStatisticsRequest) {
    let DatabaseType;
    (function (DatabaseType) {
        DatabaseType["AdwS"] = "ADW-S";
        DatabaseType["AtpS"] = "ATP-S";
        DatabaseType["AdwD"] = "ADW-D";
        DatabaseType["AtpD"] = "ATP-D";
        DatabaseType["ExternalPdb"] = "EXTERNAL-PDB";
        DatabaseType["ExternalNoncdb"] = "EXTERNAL-NONCDB";
    })(DatabaseType = SummarizeSqlStatisticsRequest.DatabaseType || (SummarizeSqlStatisticsRequest.DatabaseType = {}));
    let SortBy;
    (function (SortBy) {
        SortBy["DatabaseTimeInSec"] = "databaseTimeInSec";
        SortBy["ExecutionsPerHour"] = "executionsPerHour";
        SortBy["ExecutionsCount"] = "executionsCount";
        SortBy["CpuTimeInSec"] = "cpuTimeInSec";
        SortBy["IoTimeInSec"] = "ioTimeInSec";
        SortBy["InefficientWaitTimeInSec"] = "inefficientWaitTimeInSec";
        SortBy["ResponseTimeInSec"] = "responseTimeInSec";
        SortBy["PlanCount"] = "planCount";
        SortBy["Variability"] = "variability";
        SortBy["AverageActiveSessions"] = "averageActiveSessions";
        SortBy["DatabaseTimePct"] = "databaseTimePct";
        SortBy["InefficiencyInPct"] = "inefficiencyInPct";
        SortBy["ChangeInCpuTimeInPct"] = "changeInCpuTimeInPct";
        SortBy["ChangeInIoTimeInPct"] = "changeInIoTimeInPct";
        SortBy["ChangeInInefficientWaitTimeInPct"] = "changeInInefficientWaitTimeInPct";
        SortBy["ChangeInResponseTimeInPct"] = "changeInResponseTimeInPct";
        SortBy["ChangeInAverageActiveSessionsInPct"] = "changeInAverageActiveSessionsInPct";
        SortBy["ChangeInExecutionsPerHourInPct"] = "changeInExecutionsPerHourInPct";
        SortBy["ChangeInInefficiencyInPct"] = "changeInInefficiencyInPct";
    })(SortBy = SummarizeSqlStatisticsRequest.SortBy || (SummarizeSqlStatisticsRequest.SortBy = {}));
    let Category;
    (function (Category) {
        Category["Degrading"] = "DEGRADING";
        Category["Variant"] = "VARIANT";
        Category["Inefficient"] = "INEFFICIENT";
        Category["ChangingPlans"] = "CHANGING_PLANS";
        Category["Improving"] = "IMPROVING";
        Category["DegradingVariant"] = "DEGRADING_VARIANT";
        Category["DegradingInefficient"] = "DEGRADING_INEFFICIENT";
        Category["DegradingChangingPlans"] = "DEGRADING_CHANGING_PLANS";
        Category["DegradingIncreasingIo"] = "DEGRADING_INCREASING_IO";
        Category["DegradingIncreasingCpu"] = "DEGRADING_INCREASING_CPU";
        Category["DegradingIncreasingInefficientWait"] = "DEGRADING_INCREASING_INEFFICIENT_WAIT";
        Category["DegradingChangingPlansAndIncreasingIo"] = "DEGRADING_CHANGING_PLANS_AND_INCREASING_IO";
        Category["DegradingChangingPlansAndIncreasingCpu"] = "DEGRADING_CHANGING_PLANS_AND_INCREASING_CPU";
        Category["DegradingChangingPlansAndIncreasingInefficientWait"] = "DEGRADING_CHANGING_PLANS_AND_INCREASING_INEFFICIENT_WAIT";
        Category["VariantInefficient"] = "VARIANT_INEFFICIENT";
        Category["VariantChangingPlans"] = "VARIANT_CHANGING_PLANS";
        Category["VariantIncreasingIo"] = "VARIANT_INCREASING_IO";
        Category["VariantIncreasingCpu"] = "VARIANT_INCREASING_CPU";
        Category["VariantIncreasingInefficientWait"] = "VARIANT_INCREASING_INEFFICIENT_WAIT";
        Category["VariantChangingPlansAndIncreasingIo"] = "VARIANT_CHANGING_PLANS_AND_INCREASING_IO";
        Category["VariantChangingPlansAndIncreasingCpu"] = "VARIANT_CHANGING_PLANS_AND_INCREASING_CPU";
        Category["VariantChangingPlansAndIncreasingInefficientWait"] = "VARIANT_CHANGING_PLANS_AND_INCREASING_INEFFICIENT_WAIT";
        Category["InefficientChangingPlans"] = "INEFFICIENT_CHANGING_PLANS";
        Category["InefficientIncreasingInefficientWait"] = "INEFFICIENT_INCREASING_INEFFICIENT_WAIT";
        Category["InefficientChangingPlansAndIncreasingInefficientWait"] = "INEFFICIENT_CHANGING_PLANS_AND_INCREASING_INEFFICIENT_WAIT";
    })(Category = SummarizeSqlStatisticsRequest.Category || (SummarizeSqlStatisticsRequest.Category = {}));
})(SummarizeSqlStatisticsRequest = exports.SummarizeSqlStatisticsRequest || (exports.SummarizeSqlStatisticsRequest = {}));
//# sourceMappingURL=summarize-sql-statistics-request.js.map