/**
 * Cloud Guard APIs
 * A description of the Cloud Guard APIs
 * OpenAPI spec version: 20200131
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Summary of the Responder Execution.
 */
export interface ResponderExecutionSummary {
    /**
     * The unique identifier of the responder execution
     */
    "id": string;
    /**
     * Responder Rule id for the responder execution
     */
    "responderRuleId": string;
    /**
     * Rule Type for the responder execution
     */
    "responderRuleType": model.ResponderType;
    /**
     * Rule name for the responder execution
     */
    "responderRuleName": string;
    /**
     * Problem id associated with the responder execution
     */
    "problemId": string;
    /**
     * Problem name associated with the responder execution
     */
    "problemName": string;
    /**
     * Region where the problem is found
     */
    "region": string;
    /**
     * Target Id of the problem for the responder execution
     */
    "targetId": string;
    /**
     * compartment id of the problem for the responder execution
     */
    "compartmentId": string;
    /**
     * resource type of the problem for the responder execution
     */
    "resourceType": string;
    /**
     * resource name of the problem for the responder execution. TODO-DOC link to resource definition doc
     */
    "resourceName": string;
    /**
     * The date and time the responder execution was created. Format defined by RFC3339.
     */
    "timeCreated": Date;
    /**
     * The date and time the responder execution was updated. Format defined by RFC3339.
     */
    "timeCompleted"?: Date;
    /**
     * current execution status of the responder
     */
    "responderExecutionStatus": model.ResponderExecutionStates;
    /**
     * possible type of responder execution modes
     */
    "responderExecutionMode": model.ResponderExecutionModes;
    /**
     * Message about the responder execution.
     */
    "message"?: string;
    "responderRuleExecutionDetails"?: model.ResponderRuleExecutionDetails;
}
export declare namespace ResponderExecutionSummary {
    function getJsonObj(obj: ResponderExecutionSummary): object;
}
