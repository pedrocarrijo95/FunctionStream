/**
 * Email Delivery API
 * API for the Email Delivery service. Use this API to send high-volume, application-generated
emails. For more information, see [Overview of the Email Delivery Service](/iaas/Content/Email/Concepts/overview.htm).


**Note:** Write actions (POST, UPDATE, DELETE) may take several minutes to propagate and be reflected by the API. If a subsequent read request fails to reflect your changes, wait a few minutes and try again.

 * OpenAPI spec version: 20170907
 * Contact: email-dev_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { EmailWaiter } from "./email-waiter";
export declare enum EmailApiKeys {
}
export declare class EmailClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": EmailWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new EmailWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): EmailWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): EmailWaiter;
    /**
     * Moves a sender into a different compartment. When provided, If-Match is checked against ETag values of the resource.
     * @param ChangeSenderCompartmentRequest
     * @return ChangeSenderCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/ChangeSenderCompartment.ts.html |here} to see how to use ChangeSenderCompartment API.
     */
    changeSenderCompartment(changeSenderCompartmentRequest: requests.ChangeSenderCompartmentRequest): Promise<responses.ChangeSenderCompartmentResponse>;
    /**
     * Creates a sender for a tenancy in a given compartment.
     * @param CreateSenderRequest
     * @return CreateSenderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/CreateSender.ts.html |here} to see how to use CreateSender API.
     */
    createSender(createSenderRequest: requests.CreateSenderRequest): Promise<responses.CreateSenderResponse>;
    /**
     * Adds recipient email addresses to the suppression list for a tenancy.
     * Addresses added to the suppression list via the API are denoted as
     * \"MANUAL\" in the `reason` field. *Note:* All email addresses added to the
     * suppression list are normalized to include only lowercase letters.
     *
     * @param CreateSuppressionRequest
     * @return CreateSuppressionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/CreateSuppression.ts.html |here} to see how to use CreateSuppression API.
     */
    createSuppression(createSuppressionRequest: requests.CreateSuppressionRequest): Promise<responses.CreateSuppressionResponse>;
    /**
     * Deletes an approved sender for a tenancy in a given compartment for a
     * provided `senderId`.
     *
     * @param DeleteSenderRequest
     * @return DeleteSenderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/DeleteSender.ts.html |here} to see how to use DeleteSender API.
     */
    deleteSender(deleteSenderRequest: requests.DeleteSenderRequest): Promise<responses.DeleteSenderResponse>;
    /**
     * Removes a suppressed recipient email address from the suppression list
     * for a tenancy in a given compartment for a provided `suppressionId`.
     *
     * @param DeleteSuppressionRequest
     * @return DeleteSuppressionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/DeleteSuppression.ts.html |here} to see how to use DeleteSuppression API.
     */
    deleteSuppression(deleteSuppressionRequest: requests.DeleteSuppressionRequest): Promise<responses.DeleteSuppressionResponse>;
    /**
     * Gets an approved sender for a given `senderId`.
     * @param GetSenderRequest
     * @return GetSenderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/GetSender.ts.html |here} to see how to use GetSender API.
     */
    getSender(getSenderRequest: requests.GetSenderRequest): Promise<responses.GetSenderResponse>;
    /**
     * Gets the details of a suppressed recipient email address for a given
     * `suppressionId`. Each suppression is given a unique OCID.
     *
     * @param GetSuppressionRequest
     * @return GetSuppressionResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/GetSuppression.ts.html |here} to see how to use GetSuppression API.
     */
    getSuppression(getSuppressionRequest: requests.GetSuppressionRequest): Promise<responses.GetSuppressionResponse>;
    /**
     * Gets a collection of approved sender email addresses and sender IDs.
     *
     * @param ListSendersRequest
     * @return ListSendersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/ListSenders.ts.html |here} to see how to use ListSenders API.
     */
    listSenders(listSendersRequest: requests.ListSendersRequest): Promise<responses.ListSendersResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SenderSummary objects
     * contained in responses from the listSenders operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSenders(request: requests.ListSendersRequest): AsyncIterableIterator<models.SenderSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listSenders operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSendersResponses(request: requests.ListSendersRequest): AsyncIterableIterator<responses.ListSendersResponse>;
    /**
     * Gets a list of suppressed recipient email addresses for a user. The
     * `compartmentId` for suppressions must be a tenancy OCID. The returned list
     * is sorted by creation time in descending order.
     *
     * @param ListSuppressionsRequest
     * @return ListSuppressionsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/ListSuppressions.ts.html |here} to see how to use ListSuppressions API.
     */
    listSuppressions(listSuppressionsRequest: requests.ListSuppressionsRequest): Promise<responses.ListSuppressionsResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.SuppressionSummary objects
     * contained in responses from the listSuppressions operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSuppressions(request: requests.ListSuppressionsRequest): AsyncIterableIterator<models.SuppressionSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listSuppressions operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllSuppressionsResponses(request: requests.ListSuppressionsRequest): AsyncIterableIterator<responses.ListSuppressionsResponse>;
    /**
     * Replaces the set of tags for a sender with the tags provided. If either freeform
     * or defined tags are omitted, the tags for that set remain the same. Each set must
     * include the full set of tags for the sender, partial updates are not permitted.
     * For more information about tagging, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
     *
     * @param UpdateSenderRequest
     * @return UpdateSenderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/email/UpdateSender.ts.html |here} to see how to use UpdateSender API.
     */
    updateSender(updateSenderRequest: requests.UpdateSenderRequest): Promise<responses.UpdateSenderResponse>;
}
