/**
 * Events API
 * API for the Events Service. Use this API to manage rules and actions that create automation
in your tenancy. For more information, see [Overview of Events](/iaas/Content/Events/Concepts/eventsoverview.htm).

 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * An object that represents an action to trigger for events that match a rule.
 *
 */
export interface Action {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the action.
     *
     */
    "id": string;
    /**
     * A message generated by the Events service about the current state of this action.
     *
     */
    "lifecycleMessage": string;
    /**
     * The current state of the rule.
     *
     */
    "lifecycleState": Action.LifecycleState;
    /**
      * Whether or not this action is currently enabled.
  * <p>
  Example: `true`
  *
      */
    "isEnabled"?: boolean;
    /**
     * A string that describes the details of the action. It does not have to be unique, and you can change it. Avoid entering
     * confidential information.
     *
     */
    "description"?: string;
    "actionType": string;
}
export declare namespace Action {
    enum LifecycleState {
        Creating = "CREATING",
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Updating = "UPDATING",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Action): object;
}
