/**
 * Events API
 * API for the Events Service. Use this API to manage rules and actions that create automation
in your tenancy. For more information, see [Overview of Events](/iaas/Content/Events/Concepts/eventsoverview.htm).

 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as models from "./model";
import * as responses from "./response";
import { EventsWaiter } from "./events-waiter";
export declare enum EventsApiKeys {
}
export declare class EventsClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": EventsWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new EventsWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): EventsWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): EventsWaiter;
    /**
     * Moves a rule into a different compartment within the same tenancy. For information about moving
     * resources between compartments, see [Moving Resources to a Different Compartment](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).
     *
     * @param ChangeRuleCompartmentRequest
     * @return ChangeRuleCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/events/ChangeRuleCompartment.ts.html |here} to see how to use ChangeRuleCompartment API.
     */
    changeRuleCompartment(changeRuleCompartmentRequest: requests.ChangeRuleCompartmentRequest): Promise<responses.ChangeRuleCompartmentResponse>;
    /**
     * Creates a new rule.
     *
     * @param CreateRuleRequest
     * @return CreateRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/events/CreateRule.ts.html |here} to see how to use CreateRule API.
     */
    createRule(createRuleRequest: requests.CreateRuleRequest): Promise<responses.CreateRuleResponse>;
    /**
     * Deletes a rule.
     * @param DeleteRuleRequest
     * @return DeleteRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/events/DeleteRule.ts.html |here} to see how to use DeleteRule API.
     */
    deleteRule(deleteRuleRequest: requests.DeleteRuleRequest): Promise<responses.DeleteRuleResponse>;
    /**
     * Retrieves a rule.
     * @param GetRuleRequest
     * @return GetRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/events/GetRule.ts.html |here} to see how to use GetRule API.
     */
    getRule(getRuleRequest: requests.GetRuleRequest): Promise<responses.GetRuleResponse>;
    /**
     * Lists rules for this compartment.
     *
     * @param ListRulesRequest
     * @return ListRulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/events/ListRules.ts.html |here} to see how to use ListRules API.
     */
    listRules(listRulesRequest: requests.ListRulesRequest): Promise<responses.ListRulesResponse>;
    /**
     * Creates a new async iterator which will iterate over the models.RuleSummary objects
     * contained in responses from the listRules operation. This iterator will fetch more data from the
     * server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllRules(request: requests.ListRulesRequest): AsyncIterableIterator<models.RuleSummary>;
    /**
     * Creates a new async iterator which will iterate over the responses received from the listRules operation. This iterator
     * will fetch more data from the server as needed.
     *
     * @param request a request which can be sent to the service operation
     */
    listAllRulesResponses(request: requests.ListRulesRequest): AsyncIterableIterator<responses.ListRulesResponse>;
    /**
     * Updates a rule.
     *
     * @param UpdateRuleRequest
     * @return UpdateRuleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/events/UpdateRule.ts.html |here} to see how to use UpdateRule API.
     */
    updateRule(updateRuleRequest: requests.UpdateRuleRequest): Promise<responses.UpdateRuleResponse>;
}
