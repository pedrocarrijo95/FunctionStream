/**
 * Application Performance Monitoring (APM) Control Plane API
 * Provide a set of APIs for tenant to perform operations like create, update, delete and list APM domains, and also
work request APIs to monitor progress of these operations.

 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Details of an APM Domain.
 */
export interface ApmDomain {
    /**
     * Where APM Agents upload their observations and metrics.
     */
    "dataUploadEndpoint"?: string;
    /**
     * Unique identifier that is immutable on creation.
     */
    "id": string;
    /**
     * APM Domain display name, can be updated.
     */
    "displayName": string;
    /**
     * Description of the APM Domain.
     */
    "description"?: string;
    /**
     * The OCID of the compartment corresponding to the APM Domain.
     */
    "compartmentId": string;
    /**
     * The current lifecycle state of the APM Domain.
     */
    "lifecycleState"?: model.LifecycleStates;
    /**
     * Indicates if this is an Always Free resource.
     */
    "isFreeTier"?: boolean;
    /**
     * The time the the APM Domain was created. An RFC3339 formatted datetime string
     */
    "timeCreated"?: Date;
    /**
     * The time the APM Domain was updated. An RFC3339 formatted datetime string
     */
    "timeUpdated"?: Date;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: `{\"bar-key\": \"value\"}`
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace ApmDomain {
    function getJsonObj(obj: ApmDomain): object;
}
