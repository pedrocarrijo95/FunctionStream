/**
 * NetworkLoadBalancer API
 * A description of the network load balancer API
 * OpenAPI spec version: 20200501
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The health status of the specified backend server.
 *
 */
export interface BackendHealth {
    /**
     * The general health status of the specified backend server.
     * <p>
     *   **OK:**  All health check probes return `OK`
     * <p>
     *   **WARNING:** At least one of the health check probes does not return `OK`
     * <p>
     *   **CRITICAL:** None of the health check probes return `OK`.
     * *
     * *   **UNKNOWN:** One of the health checks probes return `UNKNOWN`,
     * *   or the system is unable to retrieve metrics at this time.
     *
     */
    "status": BackendHealth.Status;
    /**
     * A list of the most recent health check results returned for the specified backend server.
     *
     */
    "healthCheckResults": Array<model.HealthCheckResult>;
}
export declare namespace BackendHealth {
    enum Status {
        Ok = "OK",
        Warning = "WARNING",
        Critical = "CRITICAL",
        Unknown = "UNKNOWN",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: BackendHealth): object;
}
