/**
 * NetworkLoadBalancer API
 * A description of the network load balancer API
 * OpenAPI spec version: 20200501
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The configuration details for updating a backend server.
 */
export interface UpdateBackendDetails {
    /**
      * The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger
  * proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections
  * as a server weighted '1'.
  * For more information about load balancing policies, see
  * [How Load Balancing Policies Work](https://docs.cloud.oracle.com/Content/Balance/Reference/lbpolicies.htm).
  * <p>
  Example: `3`
  *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
      */
    "weight"?: number;
    /**
      * Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress
  * traffic to this backend server unless all other backend servers not marked as \"isBackup\" fail the health check policy.
  * <p>
  Example: `false`
  *
      */
    "isBackup"?: boolean;
    /**
      * Whether the network load balancer should drain this server. Servers marked \"isDrain\" receive no
  * incoming traffic.
  * <p>
  Example: `false`
  *
      */
    "isDrain"?: boolean;
    /**
      * Whether the network load balancer should treat this server as offline. Offline servers receive no incoming
  * traffic.
  * <p>
  Example: `false`
  *
      */
    "isOffline"?: boolean;
}
export declare namespace UpdateBackendDetails {
    function getJsonObj(obj: UpdateBackendDetails): object;
}
