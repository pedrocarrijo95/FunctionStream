/**
 * Application Performance Monitoring Synthetic Monitoring API
 * Use the Application Performance Monitoring Synthetic Monitoring API to query synthetic scripts and monitors.
 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
export declare enum ApmSyntheticApiKeys {
}
export declare class ApmSyntheticClient {
    protected static serviceEndpointTemplate: string;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new monitor.
     *
     * @param CreateMonitorRequest
     * @return CreateMonitorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/CreateMonitor.ts.html |here} to see how to use CreateMonitor API.
     */
    createMonitor(createMonitorRequest: requests.CreateMonitorRequest): Promise<responses.CreateMonitorResponse>;
    /**
     * Creates a new script.
     *
     * @param CreateScriptRequest
     * @return CreateScriptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/CreateScript.ts.html |here} to see how to use CreateScript API.
     */
    createScript(createScriptRequest: requests.CreateScriptRequest): Promise<responses.CreateScriptResponse>;
    /**
     * Deletes the specified monitor.
     * @param DeleteMonitorRequest
     * @return DeleteMonitorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/DeleteMonitor.ts.html |here} to see how to use DeleteMonitor API.
     */
    deleteMonitor(deleteMonitorRequest: requests.DeleteMonitorRequest): Promise<responses.DeleteMonitorResponse>;
    /**
     * Deletes the specified script.
     * @param DeleteScriptRequest
     * @return DeleteScriptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/DeleteScript.ts.html |here} to see how to use DeleteScript API.
     */
    deleteScript(deleteScriptRequest: requests.DeleteScriptRequest): Promise<responses.DeleteScriptResponse>;
    /**
     * Gets the configuration of the monitor identified by the OCID.
     * @param GetMonitorRequest
     * @return GetMonitorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/GetMonitor.ts.html |here} to see how to use GetMonitor API.
     */
    getMonitor(getMonitorRequest: requests.GetMonitorRequest): Promise<responses.GetMonitorResponse>;
    /**
     * Gets the results for a specific execution of a monitor identified by OCID. The results are in a HAR file, Screenshot, or Console Log.
     *
     * @param GetMonitorResultRequest
     * @return GetMonitorResultResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/GetMonitorResult.ts.html |here} to see how to use GetMonitorResult API.
     */
    getMonitorResult(getMonitorResultRequest: requests.GetMonitorResultRequest): Promise<responses.GetMonitorResultResponse>;
    /**
     * Gets the configuration of the script identified by the OCID.
     * @param GetScriptRequest
     * @return GetScriptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/GetScript.ts.html |here} to see how to use GetScript API.
     */
    getScript(getScriptRequest: requests.GetScriptRequest): Promise<responses.GetScriptResponse>;
    /**
     * Returns a list of monitors.
     *
     * @param ListMonitorsRequest
     * @return ListMonitorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/ListMonitors.ts.html |here} to see how to use ListMonitors API.
     */
    listMonitors(listMonitorsRequest: requests.ListMonitorsRequest): Promise<responses.ListMonitorsResponse>;
    /**
     * Returns a list of public vantage points.
     *
     * @param ListPublicVantagePointsRequest
     * @return ListPublicVantagePointsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/ListPublicVantagePoints.ts.html |here} to see how to use ListPublicVantagePoints API.
     */
    listPublicVantagePoints(listPublicVantagePointsRequest: requests.ListPublicVantagePointsRequest): Promise<responses.ListPublicVantagePointsResponse>;
    /**
     * Returns a list of scripts.
     *
     * @param ListScriptsRequest
     * @return ListScriptsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/ListScripts.ts.html |here} to see how to use ListScripts API.
     */
    listScripts(listScriptsRequest: requests.ListScriptsRequest): Promise<responses.ListScriptsResponse>;
    /**
     * Updates the monitor.
     * @param UpdateMonitorRequest
     * @return UpdateMonitorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/UpdateMonitor.ts.html |here} to see how to use UpdateMonitor API.
     */
    updateMonitor(updateMonitorRequest: requests.UpdateMonitorRequest): Promise<responses.UpdateMonitorResponse>;
    /**
     * Updates the script.
     * @param UpdateScriptRequest
     * @return UpdateScriptResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/1.19.2/apmsynthetics/UpdateScript.ts.html |here} to see how to use UpdateScript API.
     */
    updateScript(updateScriptRequest: requests.UpdateScriptRequest): Promise<responses.UpdateScriptResponse>;
}
