/**
 * Application Performance Monitoring Synthetic Monitoring API
 * Use the Application Performance Monitoring Synthetic Monitoring API to query synthetic scripts and monitors.
 * OpenAPI spec version: 20200630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Request configuration details for the REST monitor type.
 */
export interface RestMonitorConfiguration extends model.MonitorConfiguration {
    /**
     * If redirection enabled, then redirects will be allowed while accessing target URL.
     */
    "isRedirectionEnabled"?: boolean;
    /**
     * If certificate validation enabled, then call will fail for certificate errors.
     */
    "isCertificateValidationEnabled"?: boolean;
    /**
     * Request HTTP method.
     */
    "requestMethod"?: model.RequestMethods;
    /**
     * Request http authentication scheme.
     */
    "reqAuthenticationScheme"?: model.RequestAuthenticationSchemes;
    "reqAuthenticationDetails"?: model.RequestAuthenticationDetails;
    /**
     * List of request headers. Example: `[{\"headerName\": \"content-type\", \"headerValue\":\"json\"}]`
     *
     */
    "requestHeaders"?: Array<model.Header>;
    /**
     * List of request query params. Example: `[{\"paramName\": \"sortOrder\", \"paramValue\": \"asc\"}]`
     *
     */
    "requestQueryParams"?: Array<model.RequestQueryParam>;
    /**
     * Request post body content.
     */
    "requestPostBody"?: string;
    /**
     * Verify response content against regular expression based string.
     * If response content does not match the verifyResponseContent value, then it will be considered a failure.
     *
     */
    "verifyResponseContent"?: string;
    /**
     * Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
     *
     */
    "verifyResponseCodes"?: Array<string>;
    "configType": string;
}
export declare namespace RestMonitorConfiguration {
    function getJsonObj(obj: RestMonitorConfiguration, isParentJsonObj?: boolean): object;
    const configType = "REST_CONFIG";
}
